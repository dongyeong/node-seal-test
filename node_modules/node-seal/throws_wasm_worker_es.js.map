{"version":3,"file":"throws_wasm_worker_es.js","sources":["../src/bin/seal_throws_wasm_worker.js","../src/main/loader.ts","../src/implementation/batch-encoder.ts","../src/implementation/constants.ts","../src/implementation/cipher-text.ts","../src/implementation/ckks-encoder.ts","../src/implementation/coeff-modulus.ts","../src/implementation/compr-mode-type.ts","../src/implementation/context-data.ts","../src/implementation/context.ts","../src/implementation/decryptor.ts","../src/implementation/encryption-parameters.ts","../src/implementation/encryptor.ts","../src/implementation/evaluator.ts","../src/implementation/exception.ts","../src/implementation/galois-keys.ts","../src/implementation/key-generator.ts","../src/implementation/memory-pool-handle.ts","../src/implementation/modulus.ts","../src/implementation/parms-id-type.ts","../src/implementation/plain-text.ts","../src/implementation/plain-modulus.ts","../src/implementation/public-key.ts","../src/implementation/relin-keys.ts","../src/implementation/scheme-type.ts","../src/implementation/secret-key.ts","../src/implementation/security-level.ts","../src/implementation/vector.ts","../src/throws_wasm_worker_es.ts","../src/main/seal.ts","../src/implementation/seal.ts","../src/implementation/encryption-parameter-qualifiers.ts","../src/implementation/serializable.ts"],"sourcesContent":["\nvar Module = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  \n  return (\nfunction(Module) {\n  Module = Module || {};\n\n\nvar f;f||(f=typeof Module !== 'undefined' ? Module : {});var aa,ba;f.ready=new Promise(function(a,b){aa=a;ba=b});var u={},w;for(w in f)f.hasOwnProperty(w)&&(u[w]=f[w]);var ca=\"./this.program\";function da(a,b){throw b;}var x=\"\",ea;x=self.location.href;_scriptDir&&(x=_scriptDir);0!==x.indexOf(\"blob:\")?x=x.substr(0,x.lastIndexOf(\"/\")+1):x=\"\";\nea=function(a){try{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\"arraybuffer\";b.send(null);return new Uint8Array(b.response)}catch(c){if(a=fa(a))return a;throw c;}};var z=f.printErr||console.warn.bind(console);for(w in u)u.hasOwnProperty(w)&&(f[w]=u[w]);u=null;f.thisProgram&&(ca=f.thisProgram);f.quit&&(da=f.quit);var A;f.wasmBinary&&(A=f.wasmBinary);var noExitRuntime=f.noExitRuntime||!0;\"object\"!==typeof WebAssembly&&B(\"no native wasm support detected\");\nvar ha,ia=!1,ka=\"undefined\"!==typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;\nfunction la(a,b){a>>>=0;if(a){var c=C;a>>>=0;var d=a+b;for(b=a;c[b>>>0]&&!(b>=d);)++b;if(16<b-a&&c.subarray&&ka)c=ka.decode(c.subarray(a>>>0,b>>>0));else{for(d=\"\";a<b;){var e=c[a++>>>0];if(e&128){var h=c[a++>>>0]&63;if(192==(e&224))d+=String.fromCharCode((e&31)<<6|h);else{var l=c[a++>>>0]&63;e=224==(e&240)?(e&15)<<12|h<<6|l:(e&7)<<18|h<<12|l<<6|c[a++>>>0]&63;65536>e?d+=String.fromCharCode(e):(e-=65536,d+=String.fromCharCode(55296|e>>10,56320|e&1023))}}else d+=String.fromCharCode(e)}c=d}}else c=\"\";\nreturn c}function ma(a,b,c,d){c>>>=0;if(0<d){d=c+d-1;for(var e=0;e<a.length;++e){var h=a.charCodeAt(e);if(55296<=h&&57343>=h){var l=a.charCodeAt(++e);h=65536+((h&1023)<<10)|l&1023}if(127>=h){if(c>=d)break;b[c++>>>0]=h}else{if(2047>=h){if(c+1>=d)break;b[c++>>>0]=192|h>>6}else{if(65535>=h){if(c+2>=d)break;b[c++>>>0]=224|h>>12}else{if(c+3>=d)break;b[c++>>>0]=240|h>>18;b[c++>>>0]=128|h>>12&63}b[c++>>>0]=128|h>>6&63}b[c++>>>0]=128|h&63}}b[c>>>0]=0}}\nfunction na(a){for(var b=0,c=0;c<a.length;++c){var d=a.charCodeAt(c);55296<=d&&57343>=d&&(d=65536+((d&1023)<<10)|a.charCodeAt(++c)&1023);127>=d?++b:b=2047>=d?b+2:65535>=d?b+3:b+4}return b}var oa=\"undefined\"!==typeof TextDecoder?new TextDecoder(\"utf-16le\"):void 0;function pa(a,b){var c=a>>1;for(var d=c+b/2;!(c>=d)&&qa[c>>>0];)++c;c<<=1;if(32<c-a&&oa)return oa.decode(C.subarray(a>>>0,c>>>0));c=\"\";for(d=0;!(d>=b/2);++d){var e=D[a+2*d>>1>>>0];if(0==e)break;c+=String.fromCharCode(e)}return c}\nfunction ra(a,b,c){void 0===c&&(c=2147483647);if(2>c)return 0;c-=2;var d=b;c=c<2*a.length?c/2:a.length;for(var e=0;e<c;++e)D[b>>1>>>0]=a.charCodeAt(e),b+=2;D[b>>1>>>0]=0;return b-d}function sa(a){return 2*a.length}function ta(a,b){for(var c=0,d=\"\";!(c>=b/4);){var e=E[a+4*c>>2>>>0];if(0==e)break;++c;65536<=e?(e-=65536,d+=String.fromCharCode(55296|e>>10,56320|e&1023)):d+=String.fromCharCode(e)}return d}\nfunction ua(a,b,c){b>>>=0;void 0===c&&(c=2147483647);if(4>c)return 0;var d=b;c=d+c-4;for(var e=0;e<a.length;++e){var h=a.charCodeAt(e);if(55296<=h&&57343>=h){var l=a.charCodeAt(++e);h=65536+((h&1023)<<10)|l&1023}E[b>>2>>>0]=h;b+=4;if(b+4>c)break}E[b>>2>>>0]=0;return b-d}function va(a){for(var b=0,c=0;c<a.length;++c){var d=a.charCodeAt(c);55296<=d&&57343>=d&&++c;b+=4}return b}var wa,F,C,D,qa,E,G,xa,ya;\nfunction za(){var a=ha.buffer;wa=a;f.HEAP8=F=new Int8Array(a);f.HEAP16=D=new Int16Array(a);f.HEAP32=E=new Int32Array(a);f.HEAPU8=C=new Uint8Array(a);f.HEAPU16=qa=new Uint16Array(a);f.HEAPU32=G=new Uint32Array(a);f.HEAPF32=xa=new Float32Array(a);f.HEAPF64=ya=new Float64Array(a)}var Aa,Ba=[],Ca=[],Da=[],Ea=[];function Fa(){var a=f.preRun.shift();Ba.unshift(a)}var I=0,Ga=null,Ha=null;f.preloadedImages={};f.preloadedAudios={};\nfunction B(a){if(f.onAbort)f.onAbort(a);z(a);ia=!0;a=new WebAssembly.RuntimeError(\"abort(\"+a+\"). Build with -s ASSERTIONS=1 for more info.\");ba(a);throw a;}var Ia=\"data:application/octet-stream;base64,\",J;J=\"data:application/octet-stream;base64,\";if(!J.startsWith(Ia)){var Ja=J;J=f.locateFile?f.locateFile(Ja,x):x+Ja}function Ka(){var a=J;try{if(a==J&&A)return new Uint8Array(A);var b=fa(a);if(b)return b;if(ea)return ea(a);throw\"both async and sync fetching of the wasm failed\";}catch(c){B(c)}}\nfunction La(){return A||\"function\"!==typeof fetch?Promise.resolve().then(function(){return Ka()}):fetch(J,{credentials:\"same-origin\"}).then(function(a){if(!a.ok)throw\"failed to load wasm binary file at '\"+J+\"'\";return a.arrayBuffer()}).catch(function(){return Ka()})}function Ma(a){for(;0<a.length;){var b=a.shift();if(\"function\"==typeof b)b(f);else{var c=b.ab;\"number\"===typeof c?void 0===b.Aa?Aa.get(c)():Aa.get(c)(b.Aa):c(void 0===b.Aa?null:b.Aa)}}}\nfunction Na(a){this.ea=a-16;this.Va=function(b){E[this.ea+8>>2>>>0]=b};this.Sa=function(b){E[this.ea+0>>2>>>0]=b};this.Ta=function(){E[this.ea+4>>2>>>0]=0};this.Ra=function(){F[this.ea+12>>0>>>0]=0};this.Ua=function(){F[this.ea+13>>0>>>0]=0};this.La=function(b,c){this.Va(b);this.Sa(c);this.Ta();this.Ra();this.Ua()}}var Oa=0;function Pa(a){switch(a){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+a);}}var Qa=void 0;\nfunction K(a){for(var b=\"\";C[a>>>0];)b+=Qa[C[a++>>>0]];return b}var L={},M={},Ra={};function Sa(a){if(void 0===a)return\"_unknown\";a=a.replace(/[^a-zA-Z0-9_]/g,\"$\");var b=a.charCodeAt(0);return 48<=b&&57>=b?\"_\"+a:a}function Ta(a,b){a=Sa(a);return(new Function(\"body\",\"return function \"+a+'() {\\n    \"use strict\";    return body.apply(this, arguments);\\n};\\n'))(b)}\nfunction Ua(a){var b=Error,c=Ta(a,function(d){this.name=a;this.message=d;d=Error(d).stack;void 0!==d&&(this.stack=this.toString()+\"\\n\"+d.replace(/^Error(:[^\\n]*)?\\n/,\"\"))});c.prototype=Object.create(b.prototype);c.prototype.constructor=c;c.prototype.toString=function(){return void 0===this.message?this.name:this.name+\": \"+this.message};return c}var N=void 0;function P(a){throw new N(a);}var Va=void 0;function Wa(a){throw new Va(a);}\nfunction Q(a,b,c){function d(k){k=c(k);k.length!==a.length&&Wa(\"Mismatched type converter count\");for(var m=0;m<a.length;++m)R(a[m],k[m])}a.forEach(function(k){Ra[k]=b});var e=Array(b.length),h=[],l=0;b.forEach(function(k,m){M.hasOwnProperty(k)?e[m]=M[k]:(h.push(k),L.hasOwnProperty(k)||(L[k]=[]),L[k].push(function(){e[m]=M[k];++l;l===h.length&&d(e)}))});0===h.length&&d(e)}\nfunction R(a,b,c){c=c||{};if(!(\"argPackAdvance\"in b))throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");var d=b.name;a||P('type \"'+d+'\" must have a positive integer typeid pointer');if(M.hasOwnProperty(a)){if(c.Ka)return;P(\"Cannot register type '\"+d+\"' twice\")}M[a]=b;delete Ra[a];L.hasOwnProperty(a)&&(b=L[a],delete L[a],b.forEach(function(e){e()}))}function Xa(a){P(a.ca.fa.da.name+\" instance already deleted\")}var Ya=!1;function Za(){}\nfunction $a(a){--a.count.value;0===a.count.value&&(a.ia?a.ja.oa(a.ia):a.fa.da.oa(a.ea))}function ab(a){if(\"undefined\"===typeof FinalizationGroup)return ab=function(b){return b},a;Ya=new FinalizationGroup(function(b){for(var c=b.next();!c.done;c=b.next())c=c.value,c.ea?$a(c):console.warn(\"object already deleted: \"+c.ea)});ab=function(b){Ya.register(b,b.ca,b.ca);return b};Za=function(b){Ya.unregister(b.ca)};return ab(a)}var bb=void 0,cb=[];\nfunction db(){for(;cb.length;){var a=cb.pop();a.ca.qa=!1;a[\"delete\"]()}}function S(){}var eb={};function fb(a,b,c){if(void 0===a[b].ga){var d=a[b];a[b]=function(){a[b].ga.hasOwnProperty(arguments.length)||P(\"Function '\"+c+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+a[b].ga+\")!\");return a[b].ga[arguments.length].apply(this,arguments)};a[b].ga=[];a[b].ga[d.pa]=d}}\nfunction gb(a,b,c){f.hasOwnProperty(a)?((void 0===c||void 0!==f[a].ga&&void 0!==f[a].ga[c])&&P(\"Cannot register public name '\"+a+\"' twice\"),fb(f,a,a),f.hasOwnProperty(c)&&P(\"Cannot register multiple overloads of a function with the same number of arguments (\"+c+\")!\"),f[a].ga[c]=b):(f[a]=b,void 0!==c&&(f[a].bb=c))}function hb(a,b,c,d,e,h,l,k){this.name=a;this.constructor=b;this.ma=c;this.oa=d;this.ka=e;this.Ia=h;this.ua=l;this.Ha=k;this.Oa=[]}\nfunction ib(a,b,c){for(;b!==c;)b.ua||P(\"Expected null or instance of \"+c.name+\", got an instance of \"+b.name),a=b.ua(a),b=b.ka;return a}function jb(a,b){if(null===b)return this.Ba&&P(\"null is not a valid \"+this.name),0;b.ca||P('Cannot pass \"'+T(b)+'\" as a '+this.name);b.ca.ea||P(\"Cannot pass deleted object as a pointer of type \"+this.name);return ib(b.ca.ea,b.ca.fa.da,this.da)}\nfunction kb(a,b){if(null===b){this.Ba&&P(\"null is not a valid \"+this.name);if(this.wa){var c=this.Pa();null!==a&&a.push(this.oa,c);return c}return 0}b.ca||P('Cannot pass \"'+T(b)+'\" as a '+this.name);b.ca.ea||P(\"Cannot pass deleted object as a pointer of type \"+this.name);!this.va&&b.ca.fa.va&&P(\"Cannot convert argument of type \"+(b.ca.ja?b.ca.ja.name:b.ca.fa.name)+\" to parameter type \"+this.name);c=ib(b.ca.ea,b.ca.fa.da,this.da);if(this.wa)switch(void 0===b.ca.ia&&P(\"Passing raw pointer to smart pointer is illegal\"),\nthis.Wa){case 0:b.ca.ja===this?c=b.ca.ia:P(\"Cannot convert argument of type \"+(b.ca.ja?b.ca.ja.name:b.ca.fa.name)+\" to parameter type \"+this.name);break;case 1:c=b.ca.ia;break;case 2:if(b.ca.ja===this)c=b.ca.ia;else{var d=b.clone();c=this.Qa(c,U(function(){d[\"delete\"]()}));null!==a&&a.push(this.oa,c)}break;default:P(\"Unsupporting sharing policy\")}return c}\nfunction lb(a,b){if(null===b)return this.Ba&&P(\"null is not a valid \"+this.name),0;b.ca||P('Cannot pass \"'+T(b)+'\" as a '+this.name);b.ca.ea||P(\"Cannot pass deleted object as a pointer of type \"+this.name);b.ca.fa.va&&P(\"Cannot convert argument of type \"+b.ca.fa.name+\" to parameter type \"+this.name);return ib(b.ca.ea,b.ca.fa.da,this.da)}function mb(a){return this.fromWireType(G[a>>>2])}function nb(a,b,c){if(b===c)return a;if(void 0===c.ka)return null;a=nb(a,b,c.ka);return null===a?null:c.Ha(a)}\nvar ob={};function pb(a,b){for(void 0===b&&P(\"ptr should not be undefined\");a.ka;)b=a.ua(b),a=a.ka;return ob[b]}function qb(a,b){b.fa&&b.ea||Wa(\"makeClassHandle requires ptr and ptrType\");!!b.ja!==!!b.ia&&Wa(\"Both smartPtrType and smartPtr must be specified\");b.count={value:1};return ab(Object.create(a,{ca:{value:b}}))}\nfunction V(a,b,c,d){this.name=a;this.da=b;this.Ba=c;this.va=d;this.wa=!1;this.oa=this.Qa=this.Pa=this.Fa=this.Wa=this.Na=void 0;void 0!==b.ka?this.toWireType=kb:(this.toWireType=d?jb:lb,this.la=null)}function rb(a,b,c){f.hasOwnProperty(a)||Wa(\"Replacing nonexistant public symbol\");void 0!==f[a].ga&&void 0!==c?f[a].ga[c]=b:(f[a]=b,f[a].pa=c)}\nfunction sb(a,b){var c=[];return function(){c.length=arguments.length;for(var d=0;d<arguments.length;d++)c[d]=arguments[d];a.includes(\"j\")?(d=f[\"dynCall_\"+a],d=c&&c.length?d.apply(null,[b].concat(c)):d.call(null,b)):d=Aa.get(b).apply(null,c);return d}}function W(a,b){a=K(a);var c=a.includes(\"j\")?sb(a,b):Aa.get(b);\"function\"!==typeof c&&P(\"unknown function pointer with signature \"+a+\": \"+b);return c}var tb=void 0;function ub(a){a=vb(a);var b=K(a);X(a);return b}\nfunction Y(a,b){function c(h){e[h]||M[h]||(Ra[h]?Ra[h].forEach(c):(d.push(h),e[h]=!0))}var d=[],e={};b.forEach(c);throw new tb(a+\": \"+d.map(ub).join([\", \"]));}function wb(a){var b=Function;if(!(b instanceof Function))throw new TypeError(\"new_ called with constructor type \"+typeof b+\" which is not a function\");var c=Ta(b.name||\"unknownFunctionName\",function(){});c.prototype=b.prototype;c=new c;a=b.apply(c,a);return a instanceof Object?a:c}function xb(a){for(;a.length;){var b=a.pop();a.pop()(b)}}\nfunction yb(a,b,c,d,e){var h=b.length;2>h&&P(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");var l=null!==b[1]&&null!==c,k=!1;for(c=1;c<b.length;++c)if(null!==b[c]&&void 0===b[c].la){k=!0;break}var m=\"void\"!==b[0].name,p=\"\",n=\"\";for(c=0;c<h-2;++c)p+=(0!==c?\", \":\"\")+\"arg\"+c,n+=(0!==c?\", \":\"\")+\"arg\"+c+\"Wired\";a=\"return function \"+Sa(a)+\"(\"+p+\") {\\nif (arguments.length !== \"+(h-2)+\") {\\nthrowBindingError('function \"+a+\" called with ' + arguments.length + ' arguments, expected \"+\n(h-2)+\" args!');\\n}\\n\";k&&(a+=\"var destructors = [];\\n\");var r=k?\"destructors\":\"null\";p=\"throwBindingError invoker fn runDestructors retType classParam\".split(\" \");d=[P,d,e,xb,b[0],b[1]];l&&(a+=\"var thisWired = classParam.toWireType(\"+r+\", this);\\n\");for(c=0;c<h-2;++c)a+=\"var arg\"+c+\"Wired = argType\"+c+\".toWireType(\"+r+\", arg\"+c+\"); // \"+b[c+2].name+\"\\n\",p.push(\"argType\"+c),d.push(b[c+2]);l&&(n=\"thisWired\"+(0<n.length?\", \":\"\")+n);a+=(m?\"var rv = \":\"\")+\"invoker(fn\"+(0<n.length?\", \":\"\")+n+\");\\n\";if(k)a+=\n\"runDestructors(destructors);\\n\";else for(c=l?1:2;c<b.length;++c)h=1===c?\"thisWired\":\"arg\"+(c-2)+\"Wired\",null!==b[c].la&&(a+=h+\"_dtor(\"+h+\"); // \"+b[c].name+\"\\n\",p.push(h+\"_dtor\"),d.push(b[c].la));m&&(a+=\"var ret = retType.fromWireType(rv);\\nreturn ret;\\n\");p.push(a+\"}\\n\");return wb(p).apply(null,d)}function zb(a,b){for(var c=[],d=0;d<a;d++)c.push(E[(b>>2)+d>>>0]);return c}\nfunction Ab(a,b,c){a instanceof Object||P(c+' with invalid \"this\": '+a);a instanceof b.da.constructor||P(c+' incompatible with \"this\" of type '+a.constructor.name);a.ca.ea||P(\"cannot call emscripten binding method \"+c+\" on deleted object\");return ib(a.ca.ea,a.ca.fa.da,b.da)}var Bb=[],Z=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function Cb(a){4<a&&0===--Z[a].Ca&&(Z[a]=void 0,Bb.push(a))}\nfunction U(a){switch(a){case void 0:return 1;case null:return 2;case !0:return 3;case !1:return 4;default:var b=Bb.length?Bb.pop():Z.length;Z[b]={Ca:1,value:a};return b}}function Db(a,b,c){switch(b){case 0:return function(d){return this.fromWireType((c?F:C)[d>>>0])};case 1:return function(d){return this.fromWireType((c?D:qa)[d>>>1])};case 2:return function(d){return this.fromWireType((c?E:G)[d>>>2])};default:throw new TypeError(\"Unknown integer type: \"+a);}}\nfunction Fb(a,b){var c=M[a];void 0===c&&P(b+\" has unknown type \"+ub(a));return c}function T(a){if(null===a)return\"null\";var b=typeof a;return\"object\"===b||\"array\"===b||\"function\"===b?a.toString():\"\"+a}function Gb(a,b){switch(b){case 2:return function(c){return this.fromWireType(xa[c>>>2])};case 3:return function(c){return this.fromWireType(ya[c>>>3])};default:throw new TypeError(\"Unknown float type: \"+a);}}\nfunction Hb(a,b,c){switch(b){case 0:return c?function(d){return F[d>>>0]}:function(d){return C[d>>>0]};case 1:return c?function(d){return D[d>>>1]}:function(d){return qa[d>>>1]};case 2:return c?function(d){return E[d>>>2]}:function(d){return G[d>>>2]};default:throw new TypeError(\"Unknown integer type: \"+a);}}function Ib(a){a||P(\"Cannot use deleted val. handle = \"+a);return Z[a].value}var Jb={};function Kb(a){var b=Jb[a];return void 0===b?K(a):b}var Lb=[];\nfunction Mb(a){var b=Lb.length;Lb.push(a);return b}function Nb(a,b){for(var c=Array(a),d=0;d<a;++d)c[d]=Fb(E[(b>>2)+d>>>0],\"parameter \"+d);return c}var Ob={};\nfunction Pb(){if(!Qb){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"===typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:ca||\"./this.program\"},b;for(b in Ob)void 0===Ob[b]?delete a[b]:a[b]=Ob[b];var c=[];for(b in a)c.push(b+\"=\"+a[b]);Qb=c}return Qb}var Qb;\nfunction Rb(){if(\"object\"===typeof crypto&&\"function\"===typeof crypto.getRandomValues){var a=new Uint8Array(1);return function(){crypto.getRandomValues(a);return a[0]}}return function(){B(\"randomDevice\")}}function Sb(a,b){Sb.Ea||(Sb.Ea=Rb());for(var c=0;c<b;c++)F[a+c>>0>>>0]=Sb.Ea();return 0}function Tb(a){return 0===a%4&&(0!==a%100||0===a%400)}function Ub(a,b){for(var c=0,d=0;d<=b;c+=a[d++]);return c}var Vb=[31,29,31,30,31,30,31,31,30,31,30,31],Wb=[31,28,31,30,31,30,31,31,30,31,30,31];\nfunction Xb(a,b){for(a=new Date(a.getTime());0<b;){var c=a.getMonth(),d=(Tb(a.getFullYear())?Vb:Wb)[c];if(b>d-a.getDate())b-=d-a.getDate()+1,a.setDate(1),11>c?a.setMonth(c+1):(a.setMonth(0),a.setFullYear(a.getFullYear()+1));else{a.setDate(a.getDate()+b);break}}return a}\nfunction Yb(a,b,c,d){function e(g,q,v){for(g=\"number\"===typeof g?g.toString():g||\"\";g.length<q;)g=v[0]+g;return g}function h(g,q){return e(g,q,\"0\")}function l(g,q){function v(H){return 0>H?-1:0<H?1:0}var y;0===(y=v(g.getFullYear()-q.getFullYear()))&&0===(y=v(g.getMonth()-q.getMonth()))&&(y=v(g.getDate()-q.getDate()));return y}function k(g){switch(g.getDay()){case 0:return new Date(g.getFullYear()-1,11,29);case 1:return g;case 2:return new Date(g.getFullYear(),0,3);case 3:return new Date(g.getFullYear(),\n0,2);case 4:return new Date(g.getFullYear(),0,1);case 5:return new Date(g.getFullYear()-1,11,31);case 6:return new Date(g.getFullYear()-1,11,30)}}function m(g){g=Xb(new Date(g.ha+1900,0,1),g.za);var q=new Date(g.getFullYear()+1,0,4),v=k(new Date(g.getFullYear(),0,4));q=k(q);return 0>=l(v,g)?0>=l(q,g)?g.getFullYear()+1:g.getFullYear():g.getFullYear()-1}var p=E[d+40>>2>>>0];d={Za:E[d>>2>>>0],Ya:E[d+4>>2>>>0],xa:E[d+8>>2>>>0],ta:E[d+12>>2>>>0],ra:E[d+16>>2>>>0],ha:E[d+20>>2>>>0],ya:E[d+24>>2>>>0],za:E[d+\n28>>2>>>0],cb:E[d+32>>2>>>0],Xa:E[d+36>>2>>>0],$a:p?la(p):\"\"};c=la(c);p={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var n in p)c=c.replace(new RegExp(n,\"g\"),p[n]);var r=\n\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),t=\"January February March April May June July August September October November December\".split(\" \");p={\"%a\":function(g){return r[g.ya].substring(0,3)},\"%A\":function(g){return r[g.ya]},\"%b\":function(g){return t[g.ra].substring(0,3)},\"%B\":function(g){return t[g.ra]},\"%C\":function(g){return h((g.ha+1900)/100|0,2)},\"%d\":function(g){return h(g.ta,2)},\"%e\":function(g){return e(g.ta,2,\" \")},\"%g\":function(g){return m(g).toString().substring(2)},\n\"%G\":function(g){return m(g)},\"%H\":function(g){return h(g.xa,2)},\"%I\":function(g){g=g.xa;0==g?g=12:12<g&&(g-=12);return h(g,2)},\"%j\":function(g){return h(g.ta+Ub(Tb(g.ha+1900)?Vb:Wb,g.ra-1),3)},\"%m\":function(g){return h(g.ra+1,2)},\"%M\":function(g){return h(g.Ya,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(g){return 0<=g.xa&&12>g.xa?\"AM\":\"PM\"},\"%S\":function(g){return h(g.Za,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(g){return g.ya||7},\"%U\":function(g){var q=new Date(g.ha+1900,0,1),v=0===q.getDay()?\nq:Xb(q,7-q.getDay());g=new Date(g.ha+1900,g.ra,g.ta);return 0>l(v,g)?h(Math.ceil((31-v.getDate()+(Ub(Tb(g.getFullYear())?Vb:Wb,g.getMonth()-1)-31)+g.getDate())/7),2):0===l(v,q)?\"01\":\"00\"},\"%V\":function(g){var q=new Date(g.ha+1901,0,4),v=k(new Date(g.ha+1900,0,4));q=k(q);var y=Xb(new Date(g.ha+1900,0,1),g.za);return 0>l(y,v)?\"53\":0>=l(q,y)?\"01\":h(Math.ceil((v.getFullYear()<g.ha+1900?g.za+32-v.getDate():g.za+1-v.getDate())/7),2)},\"%w\":function(g){return g.ya},\"%W\":function(g){var q=new Date(g.ha,0,\n1),v=1===q.getDay()?q:Xb(q,0===q.getDay()?1:7-q.getDay()+1);g=new Date(g.ha+1900,g.ra,g.ta);return 0>l(v,g)?h(Math.ceil((31-v.getDate()+(Ub(Tb(g.getFullYear())?Vb:Wb,g.getMonth()-1)-31)+g.getDate())/7),2):0===l(v,q)?\"01\":\"00\"},\"%y\":function(g){return(g.ha+1900).toString().substring(2)},\"%Y\":function(g){return g.ha+1900},\"%z\":function(g){g=g.Xa;var q=0<=g;g=Math.abs(g)/60;return(q?\"+\":\"-\")+String(\"0000\"+(g/60*100+g%60)).slice(-4)},\"%Z\":function(g){return g.$a},\"%%\":function(){return\"%\"}};for(n in p)c.includes(n)&&\n(c=c.replace(new RegExp(n,\"g\"),p[n](d)));n=Zb(c);if(n.length>b)return 0;F.set(n,a>>>0);return n.length-1}for(var $b=Array(256),ac=0;256>ac;++ac)$b[ac]=String.fromCharCode(ac);Qa=$b;N=f.BindingError=Ua(\"BindingError\");Va=f.InternalError=Ua(\"InternalError\");S.prototype.isAliasOf=function(a){if(!(this instanceof S&&a instanceof S))return!1;var b=this.ca.fa.da,c=this.ca.ea,d=a.ca.fa.da;for(a=a.ca.ea;b.ka;)c=b.ua(c),b=b.ka;for(;d.ka;)a=d.ua(a),d=d.ka;return b===d&&c===a};\nS.prototype.clone=function(){this.ca.ea||Xa(this);if(this.ca.sa)return this.ca.count.value+=1,this;var a=ab,b=Object,c=b.create,d=Object.getPrototypeOf(this),e=this.ca;a=a(c.call(b,d,{ca:{value:{count:e.count,qa:e.qa,sa:e.sa,ea:e.ea,fa:e.fa,ia:e.ia,ja:e.ja}}}));a.ca.count.value+=1;a.ca.qa=!1;return a};S.prototype[\"delete\"]=function(){this.ca.ea||Xa(this);this.ca.qa&&!this.ca.sa&&P(\"Object already scheduled for deletion\");Za(this);$a(this.ca);this.ca.sa||(this.ca.ia=void 0,this.ca.ea=void 0)};\nS.prototype.isDeleted=function(){return!this.ca.ea};S.prototype.deleteLater=function(){this.ca.ea||Xa(this);this.ca.qa&&!this.ca.sa&&P(\"Object already scheduled for deletion\");cb.push(this);1===cb.length&&bb&&bb(db);this.ca.qa=!0;return this};V.prototype.Ja=function(a){this.Fa&&(a=this.Fa(a));return a};V.prototype.Da=function(a){this.oa&&this.oa(a)};V.prototype.argPackAdvance=8;V.prototype.readValueFromPointer=mb;V.prototype.deleteObject=function(a){if(null!==a)a[\"delete\"]()};\nV.prototype.fromWireType=function(a){function b(){return this.wa?qb(this.da.ma,{fa:this.Na,ea:c,ja:this,ia:a}):qb(this.da.ma,{fa:this,ea:a})}var c=this.Ja(a);if(!c)return this.Da(a),null;var d=pb(this.da,c);if(void 0!==d){if(0===d.ca.count.value)return d.ca.ea=c,d.ca.ia=a,d.clone();d=d.clone();this.Da(a);return d}d=this.da.Ia(c);d=eb[d];if(!d)return b.call(this);d=this.va?d.Ga:d.pointerType;var e=nb(c,this.da,d.da);return null===e?b.call(this):this.wa?qb(d.da.ma,{fa:d,ea:e,ja:this,ia:a}):qb(d.da.ma,\n{fa:d,ea:e})};f.getInheritedInstanceCount=function(){return Object.keys(ob).length};f.getLiveInheritedInstances=function(){var a=[],b;for(b in ob)ob.hasOwnProperty(b)&&a.push(ob[b]);return a};f.flushPendingDeletes=db;f.setDelayFunction=function(a){bb=a;cb.length&&bb&&bb(db)};tb=f.UnboundTypeError=Ua(\"UnboundTypeError\");f.count_emval_handles=function(){for(var a=0,b=5;b<Z.length;++b)void 0!==Z[b]&&++a;return a};f.get_first_emval=function(){for(var a=5;a<Z.length;++a)if(void 0!==Z[a])return Z[a];return null};\nfunction Zb(a){var b=Array(na(a)+1);ma(a,b,0,b.length);return b}\nvar bc=\"function\"===typeof atob?atob:function(a){var b=\"\",c=0;a=a.replace(/[^A-Za-z0-9\\+\\/=]/g,\"\");do{var d=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(a.charAt(c++));var e=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(a.charAt(c++));var h=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(a.charAt(c++));var l=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(a.charAt(c++));d=d<<2|e>>4;\ne=(e&15)<<4|h>>2;var k=(h&3)<<6|l;b+=String.fromCharCode(d);64!==h&&(b+=String.fromCharCode(e));64!==l&&(b+=String.fromCharCode(k))}while(c<a.length);return b};function fa(a){if(a.startsWith(Ia)){try{var b=bc(a.slice(Ia.length)),c=new Uint8Array(b.length);for(a=0;a<b.length;++a)c[a]=b.charCodeAt(a)}catch(d){throw Error(\"Converting base64 string to bytes failed.\");}return c}}\nvar dc={a:function(a){return cc(a+16)+16},C:function(){},b:function(a,b,c){(new Na(a)).La(b,c);Oa++;throw a;},E:function(){},K:function(a,b,c,d,e){var h=Pa(c);b=K(b);R(a,{name:b,fromWireType:function(l){return!!l},toWireType:function(l,k){return k?d:e},argPackAdvance:8,readValueFromPointer:function(l){if(1===c)var k=F;else if(2===c)k=D;else if(4===c)k=E;else throw new TypeError(\"Unknown boolean type size: \"+b);return this.fromWireType(k[l>>>h])},la:null})},e:function(a,b,c,d,e,h,l,k,m,p,n,r,t){n=\nK(n);h=W(e,h);k&&(k=W(l,k));p&&(p=W(m,p));t=W(r,t);var g=Sa(n);gb(g,function(){Y(\"Cannot construct \"+n+\" due to unbound types\",[d])});Q([a,b,c],d?[d]:[],function(q){q=q[0];if(d){var v=q.da;var y=v.ma}else y=S.prototype;q=Ta(g,function(){if(Object.getPrototypeOf(this)!==H)throw new N(\"Use 'new' to construct \"+n);if(void 0===O.na)throw new N(n+\" has no accessible constructor\");var Eb=O.na[arguments.length];if(void 0===Eb)throw new N(\"Tried to invoke ctor of \"+n+\" with invalid number of parameters (\"+\narguments.length+\") - expected (\"+Object.keys(O.na).toString()+\") parameters instead!\");return Eb.apply(this,arguments)});var H=Object.create(y,{constructor:{value:q}});q.prototype=H;var O=new hb(n,q,H,t,v,h,k,p);v=new V(n,O,!0,!1);y=new V(n+\"*\",O,!1,!1);var ja=new V(n+\" const*\",O,!1,!0);eb[a]={pointerType:y,Ga:ja};rb(g,q);return[v,y,ja]})},s:function(a,b,c,d,e,h,l){var k=zb(c,d);b=K(b);h=W(e,h);Q([],[a],function(m){function p(){Y(\"Cannot call \"+n+\" due to unbound types\",k)}m=m[0];var n=m.name+\".\"+\nb;b.startsWith(\"@@\")&&(b=Symbol[b.substring(2)]);var r=m.da.constructor;void 0===r[b]?(p.pa=c-1,r[b]=p):(fb(r,b,n),r[b].ga[c-1]=p);Q([],k,function(t){t=yb(n,[t[0],null].concat(t.slice(1)),null,h,l);void 0===r[b].ga?(t.pa=c-1,r[b]=t):r[b].ga[c-1]=t;return[]});return[]})},A:function(a,b,c,d,e,h,l,k){b=K(b);h=W(e,h);Q([],[a],function(m){m=m[0];var p=m.name+\".\"+b,n={get:function(){Y(\"Cannot access \"+p+\" due to unbound types\",[c])},enumerable:!0,configurable:!0};n.set=k?function(){Y(\"Cannot access \"+p+\n\" due to unbound types\",[c])}:function(){P(p+\" is a read-only property\")};Object.defineProperty(m.da.constructor,b,n);Q([],[c],function(r){r=r[0];var t={get:function(){return r.fromWireType(h(d))},enumerable:!0};k&&(k=W(l,k),t.set=function(g){var q=[];k(d,r.toWireType(q,g));xb(q)});Object.defineProperty(m.da.constructor,b,t);return[]});return[]})},f:function(a,b,c,d,e,h){0<b||B(\"Assertion failed: undefined\");var l=zb(b,c);e=W(d,e);var k=[h],m=[];Q([],[a],function(p){p=p[0];var n=\"constructor \"+p.name;\nvoid 0===p.da.na&&(p.da.na=[]);if(void 0!==p.da.na[b-1])throw new N(\"Cannot register multiple constructors with identical number of parameters (\"+(b-1)+\") for class '\"+p.name+\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\");p.da.na[b-1]=function(){Y(\"Cannot construct \"+p.name+\" due to unbound types\",l)};Q([],l,function(r){p.da.na[b-1]=function(){arguments.length!==b-1&&P(n+\" called with \"+arguments.length+\" arguments, expected \"+(b-1));m.length=\n0;k.length=b;for(var t=1;t<b;++t)k[t]=r[t].toWireType(m,arguments[t-1]);t=e.apply(null,k);xb(m);return r[0].fromWireType(t)};return[]});return[]})},c:function(a,b,c,d,e,h,l,k){var m=zb(c,d);b=K(b);h=W(e,h);Q([],[a],function(p){function n(){Y(\"Cannot call \"+r+\" due to unbound types\",m)}p=p[0];var r=p.name+\".\"+b;b.startsWith(\"@@\")&&(b=Symbol[b.substring(2)]);k&&p.da.Oa.push(b);var t=p.da.ma,g=t[b];void 0===g||void 0===g.ga&&g.className!==p.name&&g.pa===c-2?(n.pa=c-2,n.className=p.name,t[b]=n):(fb(t,\nb,r),t[b].ga[c-2]=n);Q([],m,function(q){q=yb(r,q,p,h,l);void 0===t[b].ga?(q.pa=c-2,t[b]=q):t[b].ga[c-2]=q;return[]});return[]})},t:function(a,b,c,d,e,h,l,k,m,p){b=K(b);e=W(d,e);Q([],[a],function(n){n=n[0];var r=n.name+\".\"+b,t={get:function(){Y(\"Cannot access \"+r+\" due to unbound types\",[c,l])},enumerable:!0,configurable:!0};t.set=m?function(){Y(\"Cannot access \"+r+\" due to unbound types\",[c,l])}:function(){P(r+\" is a read-only property\")};Object.defineProperty(n.da.ma,b,t);Q([],m?[c,l]:[c],function(g){var q=\ng[0],v={get:function(){var H=Ab(this,n,r+\" getter\");return q.fromWireType(e(h,H))},enumerable:!0};if(m){m=W(k,m);var y=g[1];v.set=function(H){var O=Ab(this,n,r+\" setter\"),ja=[];m(p,O,y.toWireType(ja,H));xb(ja)}}Object.defineProperty(n.da.ma,b,v);return[]});return[]})},D:function(a,b){b=K(b);R(a,{name:b,fromWireType:function(c){var d=Z[c].value;Cb(c);return d},toWireType:function(c,d){return U(d)},argPackAdvance:8,readValueFromPointer:mb,la:null})},w:function(a,b,c,d){function e(){}c=Pa(c);b=K(b);\ne.values={};R(a,{name:b,constructor:e,fromWireType:function(h){return this.constructor.values[h]},toWireType:function(h,l){return l.value},argPackAdvance:8,readValueFromPointer:Db(b,c,d),la:null});gb(b,e)},q:function(a,b,c){var d=Fb(a,\"enum\");b=K(b);a=d.constructor;d=Object.create(d.constructor.prototype,{value:{value:c},constructor:{value:Ta(d.name+\"_\"+b,function(){})}});a.values[c]=d;a[b]=d},z:function(a,b,c){c=Pa(c);b=K(b);R(a,{name:b,fromWireType:function(d){return d},toWireType:function(d,e){if(\"number\"!==\ntypeof e&&\"boolean\"!==typeof e)throw new TypeError('Cannot convert \"'+T(e)+'\" to '+this.name);return e},argPackAdvance:8,readValueFromPointer:Gb(b,c),la:null})},o:function(a,b,c,d,e,h){var l=zb(b,c);a=K(a);e=W(d,e);gb(a,function(){Y(\"Cannot call \"+a+\" due to unbound types\",l)},b-1);Q([],l,function(k){rb(a,yb(a,[k[0],null].concat(k.slice(1)),null,e,h),b-1);return[]})},r:function(a,b,c,d,e){function h(p){return p}b=K(b);-1===e&&(e=4294967295);var l=Pa(c);if(0===d){var k=32-8*c;h=function(p){return p<<\nk>>>k}}var m=b.includes(\"unsigned\");R(a,{name:b,fromWireType:h,toWireType:function(p,n){if(\"number\"!==typeof n&&\"boolean\"!==typeof n)throw new TypeError('Cannot convert \"'+T(n)+'\" to '+this.name);if(n<d||n>e)throw new TypeError('Passing a number \"'+T(n)+'\" from JS side to C/C++ side to an argument of type \"'+b+'\", which is outside the valid range ['+d+\", \"+e+\"]!\");return m?n>>>0:n|0},argPackAdvance:8,readValueFromPointer:Hb(b,l,0!==d),la:null})},p:function(a,b,c){function d(h){h>>=2;var l=G;return new e(wa,\nl[h+1>>>0],l[h>>>0])}var e=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][b];c=K(c);R(a,{name:c,fromWireType:d,argPackAdvance:8,readValueFromPointer:d},{Ka:!0})},B:function(a,b){b=K(b);var c=\"std::string\"===b;R(a,{name:b,fromWireType:function(d){var e=G[d>>>2];if(c)for(var h=d+4,l=0;l<=e;++l){var k=d+4+l;if(l==e||0==C[k>>>0]){h=la(h,k-h);if(void 0===m)var m=h;else m+=String.fromCharCode(0),m+=h;h=k+1}}else{m=Array(e);for(l=0;l<e;++l)m[l]=String.fromCharCode(C[d+\n4+l>>>0]);m=m.join(\"\")}X(d);return m},toWireType:function(d,e){e instanceof ArrayBuffer&&(e=new Uint8Array(e));var h=\"string\"===typeof e;h||e instanceof Uint8Array||e instanceof Uint8ClampedArray||e instanceof Int8Array||P(\"Cannot pass non-string to std::string\");var l=(c&&h?function(){return na(e)}:function(){return e.length})(),k=cc(4+l+1);k>>>=0;G[k>>>2]=l;if(c&&h)ma(e,C,k+4,l+1);else if(h)for(h=0;h<l;++h){var m=e.charCodeAt(h);255<m&&(X(k),P(\"String has UTF-16 code units that do not fit in 8 bits\"));\nC[k+4+h>>>0]=m}else for(h=0;h<l;++h)C[k+4+h>>>0]=e[h];null!==d&&d.push(X,k);return k},argPackAdvance:8,readValueFromPointer:mb,la:function(d){X(d)}})},x:function(a,b,c){c=K(c);if(2===b){var d=pa;var e=ra;var h=sa;var l=function(){return qa};var k=1}else 4===b&&(d=ta,e=ua,h=va,l=function(){return G},k=2);R(a,{name:c,fromWireType:function(m){for(var p=G[m>>>2],n=l(),r,t=m+4,g=0;g<=p;++g){var q=m+4+g*b;if(g==p||0==n[q>>>k])t=d(t,q-t),void 0===r?r=t:(r+=String.fromCharCode(0),r+=t),t=q+b}X(m);return r},\ntoWireType:function(m,p){\"string\"!==typeof p&&P(\"Cannot pass non-string to C++ string type \"+c);var n=h(p),r=cc(4+n+b);r>>>=0;G[r>>>2]=n>>k;e(p,r+4,n+b);null!==m&&m.push(X,r);return r},argPackAdvance:8,readValueFromPointer:mb,la:function(m){X(m)}})},L:function(a,b){b=K(b);R(a,{Ma:!0,name:b,argPackAdvance:0,fromWireType:function(){},toWireType:function(){}})},i:function(a,b,c){a=Ib(a);b=Fb(b,\"emval::as\");var d=[],e=U(d);E[c>>>2]=e;return b.toWireType(d,a)},n:function(a,b,c,d){a=Lb[a];b=Ib(b);c=Kb(c);\na(b,c,null,d)},d:Cb,m:function(a,b){b=Nb(a,b);for(var c=b[0],d=c.name+\"_$\"+b.slice(1).map(function(p){return p.name}).join(\"_\")+\"$\",e=[\"retType\"],h=[c],l=\"\",k=0;k<a-1;++k)l+=(0!==k?\", \":\"\")+\"arg\"+k,e.push(\"argType\"+k),h.push(b[1+k]);d=\"return function \"+Sa(\"methodCaller_\"+d)+\"(handle, name, destructors, args) {\\n\";var m=0;for(k=0;k<a-1;++k)d+=\"    var arg\"+k+\" = argType\"+k+\".readValueFromPointer(args\"+(m?\"+\"+m:\"\")+\");\\n\",m+=b[k+1].argPackAdvance;d+=\"    var rv = handle[name](\"+l+\");\\n\";for(k=0;k<\na-1;++k)b[k+1].deleteObject&&(d+=\"    argType\"+k+\".deleteObject(arg\"+k+\");\\n\");c.Ma||(d+=\"    return retType.toWireType(destructors, rv);\\n\");e.push(d+\"};\\n\");a=wb(e).apply(null,h);return Mb(a)},j:function(a,b){a=Ib(a);b=Ib(b);return U(a[b])},k:function(a){4<a&&(Z[a].Ca+=1)},u:function(){return U([])},l:function(a){return U(Kb(a))},h:function(a){xb(Z[a].value);Cb(a)},g:function(a,b){a=Fb(a,\"_emval_take_value\");a=a.readValueFromPointer(b);return U(a)},y:function(){B()},J:function(a,b,c){C.copyWithin(a>>>\n0,b>>>0,b+c>>>0)},v:function(a){var b=C.length;a>>>=0;if(4294901760<a)return!1;for(var c=1;4>=c;c*=2){var d=b*(1+.2/c);d=Math.min(d,a+100663296);d=Math.max(a,d);0<d%65536&&(d+=65536-d%65536);a:{try{ha.grow(Math.min(4294901760,d)-wa.byteLength+65535>>>16);za();var e=1;break a}catch(h){}e=void 0}if(e)return!0}return!1},H:function(a,b){var c=0;Pb().forEach(function(d,e){var h=b+c;e=E[a+4*e>>2>>>0]=h;for(h=0;h<d.length;++h)F[e++>>0>>>0]=d.charCodeAt(h);F[e>>0>>>0]=0;c+=d.length+1});return 0},I:function(a,\nb){var c=Pb();E[a>>2>>>0]=c.length;var d=0;c.forEach(function(e){d+=e.length+1});E[b>>2>>>0]=d;return 0},F:Sb,G:function(a,b,c,d){return Yb(a,b,c,d)}};\n(function(){function a(e){f.asm=e.exports;ha=f.asm.M;za();Aa=f.asm.T;Ca.unshift(f.asm.N);I--;f.monitorRunDependencies&&f.monitorRunDependencies(I);0==I&&(null!==Ga&&(clearInterval(Ga),Ga=null),Ha&&(e=Ha,Ha=null,e()))}function b(e){a(e.instance)}function c(e){return La().then(function(h){return WebAssembly.instantiate(h,d)}).then(e,function(h){z(\"failed to asynchronously prepare wasm: \"+h);B(h)})}var d={a:dc};I++;f.monitorRunDependencies&&f.monitorRunDependencies(I);if(f.instantiateWasm)try{return f.instantiateWasm(d,\na)}catch(e){return z(\"Module.instantiateWasm callback failed with error: \"+e),!1}(function(){return A||\"function\"!==typeof WebAssembly.instantiateStreaming||J.startsWith(Ia)||\"function\"!==typeof fetch?c(b):fetch(J,{credentials:\"same-origin\"}).then(function(e){return WebAssembly.instantiateStreaming(e,d).then(b,function(h){z(\"wasm streaming compile failed: \"+h);z(\"falling back to ArrayBuffer instantiation\");return c(b)})})})().catch(ba);return{}})();\nf.___wasm_call_ctors=function(){return(f.___wasm_call_ctors=f.asm.N).apply(null,arguments)};f._main=function(){return(f._main=f.asm.O).apply(null,arguments)};var vb=f.___getTypeName=function(){return(vb=f.___getTypeName=f.asm.P).apply(null,arguments)};f.___embind_register_native_and_builtin_types=function(){return(f.___embind_register_native_and_builtin_types=f.asm.Q).apply(null,arguments)};\nvar cc=f._malloc=function(){return(cc=f._malloc=f.asm.R).apply(null,arguments)},X=f._free=function(){return(X=f._free=f.asm.S).apply(null,arguments)};f.dynCall_viij=function(){return(f.dynCall_viij=f.asm.U).apply(null,arguments)};f.dynCall_viiij=function(){return(f.dynCall_viiij=f.asm.V).apply(null,arguments)};f.dynCall_iiiij=function(){return(f.dynCall_iiiij=f.asm.W).apply(null,arguments)};f.dynCall_vij=function(){return(f.dynCall_vij=f.asm.X).apply(null,arguments)};\nf.dynCall_iij=function(){return(f.dynCall_iij=f.asm.Y).apply(null,arguments)};f.dynCall_iiij=function(){return(f.dynCall_iiij=f.asm.Z).apply(null,arguments)};f.dynCall_iiiiij=function(){return(f.dynCall_iiiiij=f.asm._).apply(null,arguments)};f.dynCall_iiiiijj=function(){return(f.dynCall_iiiiijj=f.asm.$).apply(null,arguments)};f.dynCall_iiiiiijj=function(){return(f.dynCall_iiiiiijj=f.asm.aa).apply(null,arguments)};f.dynCall_viijii=function(){return(f.dynCall_viijii=f.asm.ba).apply(null,arguments)};\nvar ec;function fc(a){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+a+\")\";this.status=a}Ha=function gc(){ec||hc();ec||(Ha=gc)};\nfunction hc(){function a(){if(!ec&&(ec=!0,f.calledRun=!0,!ia)){Ma(Ca);Ma(Da);aa(f);if(f.onRuntimeInitialized)f.onRuntimeInitialized();if(ic){var b=f._main;try{var c=b(0,0);if(!noExitRuntime||0!==c){if(!noExitRuntime){if(f.onExit)f.onExit(c);ia=!0}da(c,new fc(c))}}catch(d){d instanceof fc||\"unwind\"==d||((b=d)&&\"object\"===typeof d&&d.stack&&(b=[d,d.stack]),z(\"exception thrown: \"+b),da(1,d))}finally{}}if(f.postRun)for(\"function\"==typeof f.postRun&&(f.postRun=[f.postRun]);f.postRun.length;)b=f.postRun.shift(),\nEa.unshift(b);Ma(Ea)}}if(!(0<I)){if(f.preRun)for(\"function\"==typeof f.preRun&&(f.preRun=[f.preRun]);f.preRun.length;)Fa();Ma(Ba);0<I||(f.setStatus?(f.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){f.setStatus(\"\")},1);a()},1)):a())}}f.run=hc;if(f.preInit)for(\"function\"==typeof f.preInit&&(f.preInit=[f.preInit]);0<f.preInit.length;)f.preInit.pop()();var ic=!0;f.noInitialRun&&(ic=!1);hc();\n\n\n  return Module.ready\n}\n);\n})();\nexport default Module;","import { Library } from '../implementation/seal'\n\nexport type Loader = {\n  readonly library: Library\n}\n\n/**\n * Export a default function which instantiates the library\n * @param {Object} bin Emscripten library to initialize\n */\nexport const createLoader = async (\n  bin: () => Promise<Library>\n): Promise<Loader> => ({\n  library: await bin()\n})\n","import { LoaderOptions, Library, Instance } from './seal'\nimport { Exception } from './exception'\nimport { VectorConstructorOptions } from './vector'\nimport { MemoryPoolHandle } from './memory-pool-handle'\nimport { PlainText, PlainTextConstructorOptions } from './plain-text'\nimport { Context } from './context'\nimport { UNSUPPORTED_BATCH_ENCODE_ARRAY_TYPE } from './constants'\n\nexport type BatchEncoderDependencyOptions = {\n  readonly Exception: Exception\n  readonly MemoryPoolHandle: MemoryPoolHandle\n  readonly PlainText: PlainTextConstructorOptions\n  readonly Vector: VectorConstructorOptions\n}\n\nexport type BatchEncoderDependencies = {\n  ({\n    Exception,\n    MemoryPoolHandle,\n    PlainText,\n    Vector\n  }: BatchEncoderDependencyOptions): BatchEncoderConstructorOptions\n}\n\nexport type BatchEncoderConstructorOptions = {\n  (context: Context): BatchEncoder\n}\n\nexport type BatchEncoderTypes =\n  | Int32Array\n  | Uint32Array\n  | BigInt64Array\n  | BigUint64Array\n\nexport type BatchEncoder = {\n  readonly instance: Instance\n  readonly unsafeInject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly encode: (\n    array: BatchEncoderTypes,\n    plainText?: PlainText\n  ) => PlainText | void\n  readonly decode: (\n    plainText: PlainText,\n    signed?: boolean,\n    pool?: MemoryPoolHandle\n  ) => Int32Array | Uint32Array\n  readonly decodeBigInt: (\n    plainText: PlainText,\n    signed?: boolean,\n    pool?: MemoryPoolHandle\n  ) => BigInt64Array | BigUint64Array\n  readonly slotCount: number\n}\n\nconst BatchEncoderConstructor = (\n  library: Library\n): BatchEncoderDependencies => ({\n  Exception,\n  MemoryPoolHandle,\n  PlainText,\n  Vector\n}: BatchEncoderDependencyOptions): BatchEncoderConstructorOptions => (\n  context\n): BatchEncoder => {\n  const Constructor = library.BatchEncoder\n  let _instance: Instance\n  try {\n    _instance = new Constructor(context.instance)\n  } catch (e) {\n    throw Exception.safe(e)\n  }\n  /**\n   * @implements BatchEncoder\n   */\n\n  /**\n   * @interface BatchEncoder\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name BatchEncoder#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance. No type checking is performed.\n     *\n     * @private\n     * @function\n     * @name BatchEncoder#unsafeInject\n     * @param {Instance} instance WASM instance\n     */\n    unsafeInject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = instance\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name BatchEncoder#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * Creates a PlainText from a given matrix. This function \"batches\" a given matrix\n     * of either signed or unsigned integers modulo the PlainText modulus into a PlainText element, and stores\n     * the result in the destination parameter. The input array must have size at most equal\n     * to the degree of the polynomial modulus. The first half of the elements represent the\n     * first row of the matrix, and the second half represent the second row. The numbers\n     * in the matrix can be at most equal to the PlainText modulus for it to represent\n     * a valid PlainText.\n     *\n     * If the destination PlainText overlaps the input values in memory, the behavior of\n     * this function is undefined.\n     *\n     * @function\n     * @name BatchEncoder#encode\n     * @param {Int32Array|Uint32Array|BigInt64Array|BigUint64Array} array Data to encode\n     * @param {PlainText} [plainText=null] Destination to store the encoded result\n     * @returns {PlainText|void} A new PlainText holding the encoded data or void if one was provided\n     * @example\n     * import SEAL from 'node-seal'\n     * const seal = await SEAL()\n     * ...\n     * const batchEncoder = seal.BatchEncoder(context)\n     *\n     * const plainText = batchEncoder.encode(Int32Array.from([1, -2, 3]))\n     */\n    encode(\n      array: Int32Array | Uint32Array | BigInt64Array | BigUint64Array,\n      plainText?: PlainText\n    ): PlainText | void {\n      try {\n        if (array.constructor === Int32Array) {\n          if (plainText) {\n            _instance.encode(array, plainText.instance, 'INT32')\n            return\n          }\n          const plain = PlainText()\n          _instance.encode(array, plain.instance, 'INT32')\n          return plain\n        }\n\n        if (array.constructor === Uint32Array) {\n          if (plainText) {\n            _instance.encode(array, plainText.instance, 'UINT32')\n            return\n          }\n          const plain = PlainText()\n          _instance.encode(array, plain.instance, 'UINT32')\n          return plain\n        }\n\n        if (array.constructor === BigInt64Array) {\n          // When embind supports BigInt64Arrays we can remove this hack\n          const stringArray = array.toString().split(',')\n          if (plainText) {\n            _instance.encode(stringArray, plainText.instance, 'INT64')\n            return\n          }\n          const plain = PlainText()\n          _instance.encode(stringArray, plain.instance, 'INT64')\n          return plain\n        }\n\n        if (array.constructor === BigUint64Array) {\n          // When embind supports BigInt64Arrays we can remove this hack\n          const stringArray = array.toString().split(',')\n          if (plainText) {\n            _instance.encode(stringArray, plainText.instance, 'UINT64')\n            return\n          }\n          const plain = PlainText()\n          _instance.encode(stringArray, plain.instance, 'UINT64')\n          return plain\n        }\n\n        throw new Error(UNSUPPORTED_BATCH_ENCODE_ARRAY_TYPE)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Inverse of encode. This function \"unbatches\" a given PlainText into a matrix\n     * of signed or unsigned integers modulo the PlainText modulus, and stores the result in the destination\n     * parameter. The input PlainText must have degrees less than the polynomial modulus,\n     * and coefficients less than the PlainText modulus, i.e. it must be a valid PlainText\n     * for the encryption parameters. Dynamic memory allocations in the process are\n     * allocated from the memory pool pointed to by the given MemoryPoolHandle.\n     *\n     * @function\n     * @name BatchEncoder#decode\n     * @param {PlainText} plainText Data to decode\n     * @param {boolean} [signed=true] By default, decode as an Int32Array. If false, decode as an Uint32Array\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}]\n     * @returns {Int32Array|Uint32Array} TypedArray containing the decoded data\n     * @example\n     * import SEAL from 'node-seal'\n     * const seal = await SEAL()\n     * ...\n     * const batchEncoder = seal.BatchEncoder(context)\n     *\n     * const plainText = batchEncoder.encode(Int32Array.from([1, -2, 3]))\n     * const plainTextU = batchEncoder.encode(Uint32Array.from([1, 2, 3]))\n     *\n     * const result = batchEncoder.decode(plainText)\n     * const resultU = batchEncoder.decode(plainTextU, false) // To decode as an Uint32Array\n     */\n    decode(\n      plainText: PlainText,\n      signed = true,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): Int32Array | Uint32Array {\n      try {\n        if (signed) {\n          const tempVect = Vector()\n          const instance = _instance.decodeInt32(plainText.instance, pool)\n          tempVect.unsafeInject(instance)\n          tempVect.setType('Int32Array')\n          const tempArr = tempVect.toArray() as Int32Array\n          tempVect.delete()\n          return tempArr\n        }\n        const tempVect = Vector()\n        const instance = _instance.decodeUint32(plainText.instance, pool)\n        tempVect.unsafeInject(instance)\n        tempVect.setType('Uint32Array')\n        const tempArr = tempVect.toArray() as Uint32Array\n        tempVect.delete()\n        return tempArr\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Performs the same function as the 32-bit decode, but supports true\n     * 64-bit values encapsulated by a BigInt.\n     *\n     * There's no official support for sending a BigInt64Array/BigUint64Array\n     * from C++ to JS, therefore this function uses string conversion to\n     * marshal data which is noticably slower. Use this function if you\n     * absolutely need to marshal values larger than 32 bits.\n     *\n     * @see {@link BatchEncoder#decode} for more information about decode.\n     * @function\n     * @name BatchEncoder#decodeBigInt\n     * @param {PlainText} plainText Data to decode\n     * @param {boolean} [signed=true] By default, decode as an BigInt64Array. If false, decode as an BigUint64Array\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}]\n     * @returns {BigInt64Array|BigUint64Array} TypedArray containing the decoded data\n     * @example\n     * import SEAL from 'node-seal'\n     * const seal = await SEAL()\n     * ...\n     * const batchEncoder = seal.BatchEncoder(context)\n     *\n     * const plainText = batchEncoder.encode(BigInt64Array.from([1n, -2n, 3n]))\n     * const plainTextU = batchEncoder.encode(BigUint64Array.from([1n, 2n, 3n]))\n     *\n     * const result = batchEncoder.decodeBigInt(plainText)\n     * const resultU = batchEncoder.decodeBigInt(plainTextU, false) // To decode as an BigUint64Array\n     */\n    decodeBigInt(\n      plainText: PlainText,\n      signed = true,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): BigInt64Array | BigUint64Array {\n      try {\n        if (signed) {\n          const instance = _instance.decodeBigInt(\n            plainText.instance,\n            true,\n            pool\n          )\n          return BigInt64Array.from(instance)\n        }\n        const instance = _instance.decodeBigInt(plainText.instance, false, pool)\n        return BigUint64Array.from(instance)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * The total number of batching slots available to hold data\n     *\n     * @readonly\n     * @name BatchEncoder#slotCount\n     * @type {number}\n     */\n    get slotCount() {\n      return _instance.slotCount()\n    }\n  }\n}\n\nexport const BatchEncoderInit = ({\n  loader\n}: LoaderOptions): BatchEncoderDependencies => {\n  const library: Library = loader.library\n  return BatchEncoderConstructor(library)\n}\n","export const INSTANCE_DELETED = 'Instance was deleted'\nexport const UNSUPPORTED_VECTOR_TYPE = 'Unsupported vector type'\nexport const UNSUPPORTED_BITSIZES_TYPE =\n  'Unsupported argument type! `bitSizes` must be an Int32Array'\nexport const UNSUPPORTED_BATCH_ENCODE_ARRAY_TYPE =\n  'Unsupported array type! `array` must be of type Int32Array, Uint32Array, BigInt64Array, or BigUint64Array.'\nexport const UNSUPPORTED_CKKS_ENCODE_ARRAY_TYPE =\n  'Unsupported array type! `array` must be of type Float64Array.'\nexport const INVALID_PLAIN_CONSRUCTOR_OPTIONS =\n  'Must specify a (coeffCount), (coeffCount, capacity)'\nexport const INVALID_CIPHER_CONSTRUCTOR_OPTIONS =\n  'Must specify a (context), (context, parmsId), or (context, parmsId, sizeCapacity)'\n","import { ComprModeType } from './compr-mode-type'\nimport { Context } from './context'\nimport { LoaderOptions, Library, Instance } from './seal'\nimport { Exception } from './exception'\nimport { MemoryPoolHandle } from './memory-pool-handle'\nimport { ParmsIdType, ParmsIdTypeConstructorOptions } from './parms-id-type'\nimport { VectorConstructorOptions } from './vector'\nimport { INVALID_CIPHER_CONSTRUCTOR_OPTIONS } from './constants'\nexport type CipherTextDependencyOptions = {\n  readonly Exception: Exception\n  readonly ComprModeType: ComprModeType\n  readonly ParmsIdType: ParmsIdTypeConstructorOptions\n  readonly MemoryPoolHandle: MemoryPoolHandle\n  readonly Vector: VectorConstructorOptions\n}\n\nexport type CipherTextDependencies = {\n  ({\n    Exception,\n    ComprModeType,\n    ParmsIdType,\n    MemoryPoolHandle,\n    Vector\n  }: CipherTextDependencyOptions): CipherTextConstructorOptions\n}\n\nexport type CipherTextConstructorOptions = {\n  ({\n    context,\n    parmsId,\n    sizeCapacity,\n    pool\n  }?: {\n    context?: Context\n    parmsId?: ParmsIdType\n    sizeCapacity?: number\n    pool?: MemoryPoolHandle\n  }): CipherText\n}\n\nexport type CipherText = {\n  readonly instance: Instance\n  readonly unsafeInject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly reserve: (context: Context, capacity: number) => void\n  readonly resize: (size: number) => void\n  readonly release: () => void\n  readonly coeffModulusSize: number\n  readonly polyModulusDegree: number\n  readonly size: number\n  readonly sizeCapacity: number\n  readonly isTransparent: boolean\n  readonly isNttForm: boolean\n  readonly parmsId: ParmsIdType\n  readonly scale: number\n  readonly setScale: (scale: number) => void\n  readonly pool: MemoryPoolHandle\n  readonly save: (compression?: ComprModeType) => string\n  readonly saveArray: (compression?: ComprModeType) => Uint8Array\n  readonly load: (context: Context, encoded: string) => void\n  readonly loadArray: (context: Context, array: Uint8Array) => void\n  readonly copy: (cipher: CipherText) => void\n  readonly clone: () => CipherText\n  readonly move: (cipher: CipherText) => void\n}\n\nconst CipherTextConstructor = (library: Library): CipherTextDependencies => ({\n  Exception,\n  ComprModeType,\n  ParmsIdType,\n  MemoryPoolHandle,\n  Vector\n}: CipherTextDependencyOptions): CipherTextConstructorOptions => ({\n  context,\n  parmsId,\n  sizeCapacity,\n  pool = MemoryPoolHandle.global\n} = {}): CipherText => {\n  // Static methods\n  const Constructor = library.Ciphertext\n\n  let _instance = construct({\n    context,\n    parmsId,\n    sizeCapacity,\n    pool\n  })\n\n  function construct({\n    context,\n    parmsId,\n    sizeCapacity,\n    pool = MemoryPoolHandle.global\n  }: {\n    context?: Context\n    parmsId?: ParmsIdType\n    sizeCapacity?: number\n    pool?: MemoryPoolHandle\n  }) {\n    try {\n      if (!context && !parmsId && sizeCapacity === undefined) {\n        return new Constructor(pool)\n      } else if (context && !parmsId && sizeCapacity === undefined) {\n        return new Constructor(context.instance, pool)\n      } else if (context && parmsId && sizeCapacity === undefined) {\n        return new Constructor(context.instance, parmsId.instance, pool)\n      } else if (context && parmsId && sizeCapacity !== undefined) {\n        return new Constructor(\n          context.instance,\n          parmsId.instance,\n          sizeCapacity,\n          pool\n        )\n      } else {\n        throw new Error(INVALID_CIPHER_CONSTRUCTOR_OPTIONS)\n      }\n    } catch (e) {\n      throw Exception.safe(e)\n    }\n  }\n  /**\n   * @implements CipherText\n   */\n\n  /**\n   * @interface CipherText\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name CipherText#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance. No type checking is performed.\n     *\n     * @private\n     * @function\n     * @name CipherText#unsafeInject\n     * @param {Instance} instance WASM instance\n     */\n    unsafeInject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = instance\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name CipherText#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * Allocates enough memory to accommodate the backing array of a ciphertext\n     * with given capacity. In addition to the capacity, the allocation size is\n     * determined by the current encryption parameters.\n     *\n     * @function\n     * @name CipherText#reserve\n     * @param {Context} context The SEAL Context\n     * @param {number} capacity The capacity to reserve\n     */\n    reserve(context: Context, capacity: number) {\n      try {\n        return _instance.reserve(context.instance, capacity)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Resizes the CipherText to given size, reallocating if the capacity\n     * of the CipherText is too small.\n     *\n     * This function is mainly intended for internal use and is called\n     * automatically by functions such as Evaluator.multiply and\n     * Evaluator.relinearize. A normal user should never have a reason\n     * to manually resize a CipherText.\n     *\n     * @function\n     * @name CipherText#resize\n     * @param {number} size The new size\n     */\n    resize(size: number) {\n      try {\n        return _instance.resize(size)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Resets the CipherText. This function releases any memory allocated\n     * by the CipherText, returning it to the memory pool. It also sets all\n     * encryption parameter specific size information to zero.\n     *\n     * @function\n     * @name CipherText#release\n     */\n    release() {\n      _instance.release()\n    },\n\n    /**\n     * The number of primes in the coefficient modulus of the\n     * associated encryption parameters. This directly affects the\n     * allocation size of the CipherText.\n     *\n     * @readonly\n     * @name CipherText#coeffModulusSize\n     * @type {number}\n     */\n    get coeffModulusSize() {\n      return _instance.coeffModulusSize()\n    },\n\n    /**\n     * The degree of the polynomial modulus of the associated\n     * encryption parameters. This directly affects the allocation size\n     * of the CipherText.\n     *\n     * @readonly\n     * @name CipherText#polyModulusDegree\n     * @type {number}\n     */\n    get polyModulusDegree() {\n      return _instance.polyModulusDegree()\n    },\n\n    /**\n     * The size of the CipherText.\n     *\n     * @readonly\n     * @name CipherText#size\n     * @type {number}\n     */\n    get size() {\n      return _instance.size()\n    },\n\n    /**\n     * The capacity of the allocation. This means the largest size\n     * of the CipherText that can be stored in the current allocation with\n     * the current encryption parameters.\n     *\n     * @readonly\n     * @name CipherText#sizeCapacity\n     * @type {number}\n     */\n    get sizeCapacity() {\n      return _instance.sizeCapacity()\n    },\n\n    /**\n     * Whether the current CipherText is transparent, i.e. does not require\n     * a secret key to decrypt. In typical security models such transparent\n     * CipherTexts would not be considered to be valid. Starting from the second\n     * polynomial in the current CipherText, this function returns true if all\n     * following coefficients are identically zero. Otherwise, returns false.\n     *\n     * @readonly\n     * @name CipherText#isTransparent\n     * @type {boolean}\n     */\n    get isTransparent() {\n      return _instance.isTransparent()\n    },\n\n    /**\n     * Whether the CipherText is in NTT form.\n     *\n     * @readonly\n     * @name CipherText#isNttForm\n     * @type {boolean}\n     */\n    get isNttForm() {\n      return _instance.isNttForm()\n    },\n\n    /**\n     * The reference to parmsId.\n     * @see {@link EncryptionParameters} for more information about parmsId.\n     *\n     * @readonly\n     * @name CipherText#parmsId\n     * @type {ParmsIdType}\n     */\n    get parmsId() {\n      const parms = ParmsIdType()\n      parms.inject(_instance.parmsId())\n      return parms\n    },\n\n    /**\n     * The reference to the scale. This is only needed when using the\n     * CKKS encryption scheme. The user should have little or no reason to ever\n     * change the scale by hand.\n     *\n     * @readonly\n     * @name CipherText#scale\n     * @type {number}\n     */\n    get scale() {\n      return _instance.scale()\n    },\n\n    /**\n     * Sets the CipherText scale. This is only needed when using the\n     * CKKS encryption scheme. The user should have little or no reason to ever\n     * change the scale by hand.\n     *\n     * @function\n     * @name CipherText#setScale\n     * @param {number} scale The scale to set\n     */\n    setScale(scale: number) {\n      _instance.setScale(scale)\n    },\n\n    /**\n     * The currently used MemoryPoolHandle.\n     *\n     * @readonly\n     * @name CipherText#pool\n     * @type {MemoryPoolHandle}\n     */\n    get pool() {\n      return _instance.pool()\n    },\n\n    /**\n     * Save the CipherText to a base64 string\n     *\n     * @function\n     * @name CipherText#save\n     * @param {ComprModeType} [compression={@link ComprModeType.zstd}] The compression mode to use\n     * @returns {string} Base64 encoded string\n     */\n    save(compression: ComprModeType = ComprModeType.zstd): string {\n      return _instance.saveToString(compression)\n    },\n\n    /**\n     * Save the CipherText as a binary Uint8Array\n     *\n     * @function\n     * @name CipherText#saveArray\n     * @param {ComprModeType} [compression={@link ComprModeType.zstd}] The compression mode to use\n     * @returns {Uint8Array} A byte array containing the CipherText in binary form\n     */\n    saveArray(compression: ComprModeType = ComprModeType.zstd): Uint8Array {\n      const tempVect = Vector()\n      const instance = _instance.saveToArray(compression)\n      tempVect.unsafeInject(instance)\n      tempVect.setType('Uint8Array')\n      const tempArr = tempVect.toArray() as Uint8Array\n      tempVect.delete()\n      return tempArr\n    },\n\n    /**\n     * Load a CipherText from a base64 string\n     *\n     * @function\n     * @name CipherText#load\n     * @param {Context} context Encryption context to enforce\n     * @param {string} encoded Base64 encoded string\n     */\n    load(context: Context, encoded: string) {\n      try {\n        _instance.loadFromString(context.instance, encoded)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Load a CipherText from an Uint8Array holding binary data\n     *\n     * @function\n     * @name CipherText#loadArray\n     * @param {Context} context Encryption context to enforce\n     * @param {Uint8Array} array TypedArray containing binary data\n     */\n    loadArray(context: Context, array: Uint8Array) {\n      try {\n        _instance.loadFromArray(context.instance, array)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Copy an existing CipherText and overwrite this instance\n     *\n     * @function\n     * @name CipherText#copy\n     * @param {CipherText} cipher CipherText to copy\n     * @example\n     * const cipherTextA = seal.CipherText()\n     * // ... after encoding some data ...\n     * const cipherTextB = seal.CipherText()\n     * cipherTextB.copy(cipherTextA)\n     * // cipherTextB holds a copy of cipherTextA\n     */\n    copy(cipher: CipherText) {\n      try {\n        _instance.copy(cipher.instance)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Clone and return a new instance of this CipherText\n     *\n     * @function\n     * @name CipherText#clone\n     * @returns {CipherText}\n     * @example\n     * const cipherTextA = seal.CipherText()\n     * // ... after encoding some data ...\n     * const cipherTextB = cipherTextA.clone()\n     * // cipherTextB holds a copy of cipherTextA\n     */\n    clone(): CipherText {\n      try {\n        const clonedInstance = _instance.clone()\n        const cipher = CipherTextConstructor(library)({\n          Exception,\n          ComprModeType,\n          ParmsIdType,\n          MemoryPoolHandle,\n          Vector\n        })()\n        cipher.unsafeInject(clonedInstance)\n        return cipher\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Move a CipherText into this one and delete the old reference\n     *\n     * @function\n     * @name CipherText#move\n     * @param {CipherText} cipher CipherText to move\n     * @example\n     * const cipherTextA = seal.CipherText()\n     * // ... after encoding some data ...\n     * const cipherTextB = seal.CipherText()\n     * cipherTextB.move(cipherTextA)\n     * // cipherTextB holds a the instance of cipherTextA.\n     * // cipherTextA no longer holds an instance\n     */\n    move(cipher: CipherText) {\n      try {\n        _instance.move(cipher.instance)\n        // TODO: find optimization\n        // This method results in a copy instead of a real move.\n        // Therefore, we need to delete the old instance.\n        cipher.delete()\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    }\n  }\n}\n\nexport const CipherTextInit = ({\n  loader\n}: LoaderOptions): CipherTextDependencies => {\n  const library: Library = loader.library\n  return CipherTextConstructor(library)\n}\n","import { LoaderOptions, Library, Instance } from './seal'\nimport { Exception } from './exception'\nimport { VectorConstructorOptions } from './vector'\nimport { MemoryPoolHandle } from './memory-pool-handle'\nimport { PlainText, PlainTextConstructorOptions } from './plain-text'\nimport { Context } from './context'\nimport { UNSUPPORTED_CKKS_ENCODE_ARRAY_TYPE } from './constants'\n\nexport type CKKSEncoderDependencyOptions = {\n  readonly Exception: Exception\n  readonly MemoryPoolHandle: MemoryPoolHandle\n  readonly PlainText: PlainTextConstructorOptions\n  readonly Vector: VectorConstructorOptions\n}\n\nexport type CKKSEncoderDependencies = {\n  ({\n    Exception,\n    MemoryPoolHandle,\n    PlainText,\n    Vector\n  }: CKKSEncoderDependencyOptions): CKKSEncoderConstructorOptions\n}\n\nexport type CKKSEncoderConstructorOptions = {\n  (context: Context): CKKSEncoder\n}\n\nexport type CKKSEncoderTypes = Float64Array\n\nexport type CKKSEncoder = {\n  readonly instance: Instance\n  readonly unsafeInject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly encode: (\n    array: CKKSEncoderTypes,\n    scale: number,\n    plainText?: PlainText,\n    pool?: MemoryPoolHandle\n  ) => PlainText | void\n  readonly decode: (\n    plainText: PlainText,\n    pool?: MemoryPoolHandle\n  ) => CKKSEncoderTypes\n  readonly slotCount: number\n}\n\nconst CKKSEncoderConstructor = (library: Library): CKKSEncoderDependencies => ({\n  Exception,\n  MemoryPoolHandle,\n  PlainText,\n  Vector\n}: CKKSEncoderDependencyOptions): CKKSEncoderConstructorOptions => (\n  context\n): CKKSEncoder => {\n  const Constructor = library.CKKSEncoder\n  let _instance: Instance\n  try {\n    _instance = new Constructor(context.instance)\n  } catch (e) {\n    throw Exception.safe(e)\n  }\n  /**\n   * @implements CKKSEncoder\n   */\n\n  /**\n   * @interface CKKSEncoder\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name CKKSEncoder#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance. No type checking is performed.\n     *\n     * @private\n     * @function\n     * @name CKKSEncoder#unsafeInject\n     * @param {Instance} instance WASM instance\n     */\n    unsafeInject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = instance\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name CKKSEncoder#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * Encodes a vector of double-precision floating-point real numbers\n     * into a plaintext polynomial. Append zeros if vector size is less than N/2.\n     * Dynamic memory allocations in the process are allocated from the memory\n     * pool pointed to by the given MemoryPoolHandle.\n     *\n     * @function\n     * @name CKKSEncoder#encode\n     * @param {Float64Array} array Data to encode\n     * @param {number} scale Scaling parameter defining encoding precision\n     * @param {PlainText} [plainText] Destination to store the encoded result\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {PlainText|void} A new PlainText holding the encoded data or void if one was provided\n     * @example\n     * import SEAL from 'node-seal'\n     * const seal = await SEAL()\n     * ...\n     * const ckksEncoder = seal.CKKSEncoder(context)\n     *\n     * const plainText = ckksEncoder.encode(Float64Array.from([1.11, -2.222, 3.333]), Math.pow(2, 20))\n     */\n    encode(\n      array: Float64Array,\n      scale: number,\n      plainText?: PlainText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): PlainText | void {\n      try {\n        if (array.constructor === Float64Array) {\n          if (plainText) {\n            _instance.encode(array, scale, plainText.instance, pool)\n            return\n          }\n          const plain = PlainText()\n          _instance.encode(array, scale, plain.instance, pool)\n          return plain\n        } else {\n          throw new Error(UNSUPPORTED_CKKS_ENCODE_ARRAY_TYPE)\n        }\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Decodes a plaintext polynomial into double-precision floating-point\n     * real numbers. Dynamic memory allocations in the process are\n     * allocated from the memory pool pointed to by the given MemoryPoolHandle.\n     *\n     * @function\n     * @name CKKSEncoder#decode\n     * @param {PlainText} plainText Data to decode\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {Float64Array} TypedArray containing the decoded data\n     * @example\n     * import SEAL from 'node-seal'\n     * const seal = await SEAL()\n     * ...\n     * const ckksEncoder = seal.CKKSEncoder(context)\n     *\n     * const plainText = ckksEncoder.encode(Float64Array.from([1, 2, 3]))\n     *\n     * const result = ckksEncoder.decode(plainText)\n     */\n    decode(\n      plainText: PlainText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): Float64Array {\n      try {\n        const tempVect = Vector()\n        const instance = _instance.decodeDouble(plainText.instance, pool)\n        tempVect.unsafeInject(instance)\n        tempVect.setType('Float64Array')\n        const tempArr = tempVect.toArray() as Float64Array\n        tempVect.delete()\n        return tempArr\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * The total number of CKKS slots available to hold data\n     *\n     * @readonly\n     * @name CKKSEncoder#slotCount\n     * @type {number}\n     */\n    get slotCount() {\n      return _instance.slotCount()\n    }\n  }\n}\n\nexport const CKKSEncoderInit = ({\n  loader\n}: LoaderOptions): CKKSEncoderDependencies => {\n  const library: Library = loader.library\n  return CKKSEncoderConstructor(library)\n}\n","import { LoaderOptions, Library } from './seal'\nimport { Exception } from './exception'\nimport { SecurityLevel } from './security-level'\nimport { Vector, VectorConstructorOptions } from './vector'\nimport { UNSUPPORTED_BITSIZES_TYPE } from './constants'\n\nexport type CoeffModulusDependencyOptions = {\n  readonly Exception: Exception\n  readonly SecurityLevel: SecurityLevel\n  readonly Vector: VectorConstructorOptions\n}\n\nexport type CoeffModulusDependencies = {\n  ({\n    Exception,\n    SecurityLevel,\n    Vector\n  }: CoeffModulusDependencyOptions): CoeffModulusConstructorOptions\n}\n\nexport type CoeffModulusConstructorOptions = {\n  (): CoeffModulus\n}\n\nexport type CoeffModulus = {\n  readonly MaxBitCount: (\n    polyModulusDegree: number,\n    securityLevel?: SecurityLevel\n  ) => number\n  readonly BFVDefault: (\n    polyModulusDegree: number,\n    securityLevel?: SecurityLevel\n  ) => Vector\n  readonly Create: (polyModulusDegree: number, bitSizes: Int32Array) => Vector\n}\n\nconst CoeffModulusConstructor = (\n  library: Library\n): CoeffModulusDependencies => ({\n  Exception,\n  SecurityLevel,\n  Vector\n}: CoeffModulusDependencyOptions): CoeffModulusConstructorOptions => (): CoeffModulus => {\n  // Static methods\n  const _MaxBitCount = library.CoeffModulus.MaxBitCount\n  const _BFVDefault = library.CoeffModulus.BFVDefault\n  const _CreateFromArray = library.CoeffModulus.CreateFromArray\n\n  /**\n   * @implements CoeffModulus\n   */\n\n  /**\n   * @interface CoeffModulus\n   */\n  return {\n    /**\n     * Returns the Maximum Bit Count for the specified polyModulusDegree and securityLevel\n     *\n     * @function\n     * @name CoeffModulus.MaxBitCount\n     * @param {number} polyModulusDegree Degree of the polynomial modulus\n     * @param {SecurityLevel} [securityLevel={@link SecurityLevel.tc128}] Security Level\n     * @returns {number} Maximum bit count\n     */\n    MaxBitCount(\n      polyModulusDegree: number,\n      securityLevel: SecurityLevel = SecurityLevel.tc128\n    ): number {\n      return _MaxBitCount(polyModulusDegree, securityLevel)\n    },\n\n    /**\n     * Returns a default vector of primes for the BFV CoeffModulus parameter\n     *\n     * @function\n     * @name CoeffModulus.BFVDefault\n     * @param {number} polyModulusDegree Degree of the polynomial modulus\n     * @param {SecurityLevel} [securityLevel={@link SecurityLevel.tc128}] Security Level\n     * @returns {Vector} Vector containing Modulus primes\n     */\n    BFVDefault(\n      polyModulusDegree: number,\n      securityLevel: SecurityLevel = SecurityLevel.tc128\n    ): Vector {\n      try {\n        const vectorModulus = Vector()\n        const instance = _BFVDefault(polyModulusDegree, securityLevel)\n        vectorModulus.unsafeInject(instance)\n        vectorModulus.setType('Modulus')\n        return vectorModulus\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Creates a vector of primes for a given polyModulusDegree and bitSizes\n     *\n     * @function\n     * @name CoeffModulus.Create\n     * @param {number} polyModulusDegree Degree of the polynomial modulus\n     * @param {Int32Array} bitSizes Int32Array containing values representing\n     * bit-sizes of primes\n     * @returns {Vector} Vector containing Modulus primes\n     */\n    Create(polyModulusDegree: number, bitSizes: Int32Array): Vector {\n      try {\n        if (bitSizes.constructor !== Int32Array) {\n          throw new Error(UNSUPPORTED_BITSIZES_TYPE)\n        }\n        const vectorModulus = Vector()\n        const instance = _CreateFromArray(polyModulusDegree, bitSizes)\n        vectorModulus.unsafeInject(instance)\n        vectorModulus.setType('Modulus')\n        return vectorModulus\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    }\n  }\n}\n\nexport const CoeffModulusInit = ({\n  loader\n}: LoaderOptions): CoeffModulusDependencies => {\n  const library: Library = loader.library\n  return CoeffModulusConstructor(library)\n}\n","import { LoaderOptions, Library } from './seal'\n\nexport type ComprModeTypeDependencies = {\n  (): ComprModeTypeConstructorOptions\n}\n\nexport type ComprModeTypeConstructorOptions = {\n  (): ComprModeType\n}\n\nexport type ComprModeType = {\n  readonly none: any\n  readonly zlib: any\n  readonly zstd: any\n}\n\nconst ComprModeTypeConstructor = (\n  library: Library\n): ComprModeTypeDependencies => (): ComprModeTypeConstructorOptions => (): ComprModeType => {\n  // Static methods\n  const _none = library.ComprModeType.none\n  const _zlib = library.ComprModeType.zlib\n  const _zstd = library.ComprModeType.zstd\n\n  /**\n   * @implements ComprModeType\n   */\n\n  /**\n   * @interface ComprModeType\n   */\n  return {\n    /**\n     * The `none` Compression Mode Type\n     *\n     * @readonly\n     * @name ComprModeType.none\n     * @type {ComprModeType.none}\n     */\n    get none() {\n      /**\n       * @typedef {ComprModeType.none} ComprModeType.none\n       */\n      return _none\n    },\n\n    /**\n     * The `zlib` Compression Mode Type\n     *\n     * @readonly\n     * @name ComprModeType.zlib\n     * @type {ComprModeType.zlib}\n     */\n    get zlib() {\n      /**\n       * @typedef {ComprModeType.zlib} ComprModeType.zlib\n       */\n      return _zlib\n    },\n\n    /**\n     * The `zstd` Compression Mode Type\n     *\n     * @readonly\n     * @name ComprModeType.zstd\n     * @type {ComprModeType.zstd}\n     */\n    get zstd() {\n      /**\n       * @typedef {ComprModeType.zstd} ComprModeType.zstd\n       */\n      return _zstd\n    }\n  }\n}\n\nexport const ComprModeTypeInit = ({\n  loader\n}: LoaderOptions): ComprModeTypeDependencies => {\n  const library: Library = loader.library\n  return ComprModeTypeConstructor(library)\n}\n","import { LoaderOptions, Library, Instance } from './seal'\nimport { Exception } from './exception'\nimport {\n  EncryptionParameters,\n  EncryptionParametersConstructorOptions\n} from './encryption-parameters'\nimport { ParmsIdType, ParmsIdTypeConstructorOptions } from './parms-id-type'\nimport {\n  EncryptionParameterQualifiers,\n  EncryptionParameterQualifiersConstructorOptions\n} from './encryption-parameter-qualifiers'\n\nexport type ContextDataDependencyOptions = {\n  readonly Exception: Exception\n  readonly EncryptionParameters: EncryptionParametersConstructorOptions\n  readonly ParmsIdType: ParmsIdTypeConstructorOptions\n  readonly EncryptionParameterQualifiers: EncryptionParameterQualifiersConstructorOptions\n}\n\nexport type ContextDataDependencies = {\n  ({\n    Exception,\n    EncryptionParameters,\n    ParmsIdType,\n    EncryptionParameterQualifiers\n  }: ContextDataDependencyOptions): ContextDataConstructorOptions\n}\n\nexport type ContextDataConstructorOptions = {\n  (): ContextData\n}\n\nexport type ContextData = {\n  readonly instance: Instance\n  readonly unsafeInject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly parms: EncryptionParameters\n  readonly parmsId: ParmsIdType\n  readonly qualifiers: EncryptionParameterQualifiers\n  readonly totalCoeffModulusBitCount: number\n  readonly prevContextData: ContextData\n  readonly nextContextData: ContextData\n  readonly chainIndex: number\n}\n\nconst ContextDataConstructor = (library: Library): ContextDataDependencies => ({\n  Exception,\n  EncryptionParameters,\n  ParmsIdType,\n  EncryptionParameterQualifiers\n}: ContextDataDependencyOptions): ContextDataConstructorOptions => (): ContextData => {\n  let _instance: Instance\n  /**\n   * @implements ContextData\n   */\n\n  /**\n   * @interface ContextData\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name ContextData#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance. No type checking is performed.\n     *\n     * @private\n     * @function\n     * @name ContextData#unsafeInject\n     * @param {Instance} instance WASM instance\n     */\n    unsafeInject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = instance\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name ContextData#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * Returns a const reference to the underlying encryption parameters.\n     *\n     * @readonly\n     * @name ContextData#parms\n     * @type {EncryptionParameters}\n     */\n    get parms() {\n      const instance = _instance.parms()\n      const encryptionParameters = EncryptionParameters()\n      encryptionParameters.unsafeInject(instance)\n      return encryptionParameters\n    },\n\n    /**\n     * Returns the parmsId of the current parameters.\n     *\n     * @readonly\n     * @name ContextData#parmsId\n     * @type {ParmsIdType}\n     */\n    get parmsId() {\n      const parms = ParmsIdType()\n      parms.inject(_instance.parmsId())\n      return parms\n    },\n\n    /**\n     * Returns a copy of EncryptionParameterQualifiers corresponding to the\n     * current encryption parameters. Note that to change the qualifiers it is\n     * necessary to create a new instance of SEALContext once appropriate changes\n     * to the encryption parameters have been made.\n     *\n     * @readonly\n     * @name ContextData#qualifiers\n     * @type {EncryptionParameterQualifiers}\n     */\n    get qualifiers() {\n      const encParmQualifiers = EncryptionParameterQualifiers()\n      encParmQualifiers.unsafeInject(_instance.qualifiers())\n      return encParmQualifiers\n    },\n\n    /**\n     * Returns the significant bit count of the total coefficient modulus.\n     *\n     * @readonly\n     * @name ContextData#totalCoeffModulusBitCount\n     * @type {number}\n     */\n    get totalCoeffModulusBitCount() {\n      return _instance.totalCoeffModulusBitCount()\n    },\n\n    /**\n     * Returns a shared_ptr to the context data corresponding to the previous parameters\n     * in the modulus switching chain. If the current data is the first one in the\n     * chain, then the result is nullptr.\n     *\n     * @readonly\n     * @name ContextData#prevContextData\n     * @type {ContextData}\n     */\n    get prevContextData() {\n      const cxtData = ContextDataConstructor(library)({\n        Exception,\n        EncryptionParameters,\n        ParmsIdType,\n        EncryptionParameterQualifiers\n      })()\n      cxtData.unsafeInject(_instance.prevContextData())\n      return cxtData\n    },\n\n    /**\n     * Returns a shared_ptr to the context data corresponding to the next parameters\n     * in the modulus switching chain. If the current data is the last one in the\n     * chain, then the result is nullptr.\n     *\n     * @readonly\n     * @name ContextData#nextContextData\n     * @type {ContextData}\n     */\n    get nextContextData() {\n      const cxtData = ContextDataConstructor(library)({\n        Exception,\n        EncryptionParameters,\n        ParmsIdType,\n        EncryptionParameterQualifiers\n      })()\n      cxtData.unsafeInject(_instance.nextContextData())\n      return cxtData\n    },\n\n    /**\n     * Returns the index of the parameter set in a chain. The initial parameters\n     * have index 0 and the index increases sequentially in the parameter chain.\n     *\n     * @readonly\n     * @name EncryptionParameterQualifiers#chainIndex\n     * @type {number}\n     */\n    get chainIndex() {\n      return _instance.chainIndex()\n    }\n  }\n}\n\nexport const ContextDataInit = ({\n  loader\n}: LoaderOptions): ContextDataDependencies => {\n  const library: Library = loader.library\n  return ContextDataConstructor(library)\n}\n","import { LoaderOptions, Library, Instance } from './seal'\nimport { ParmsIdType, ParmsIdTypeConstructorOptions } from './parms-id-type'\nimport { ContextData, ContextDataConstructorOptions } from './context-data'\nimport { EncryptionParameters } from './encryption-parameters'\nimport { SecurityLevel } from './security-level'\n\nexport type ContextDependencyOptions = {\n  readonly ParmsIdType: ParmsIdTypeConstructorOptions\n  readonly ContextData: ContextDataConstructorOptions\n  readonly SecurityLevel: SecurityLevel\n}\n\nexport type ContextDependencies = {\n  ({\n    ParmsIdType,\n    ContextData,\n    SecurityLevel\n  }: ContextDependencyOptions): ContextConstructorOptions\n}\n\nexport type ContextConstructorOptions = {\n  (\n    encryptionParams: EncryptionParameters,\n    expandModChain?: boolean,\n    securityLevel?: SecurityLevel\n  ): Context\n}\n\nexport type Context = {\n  readonly instance: Instance\n  readonly unsafeInject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly toHuman: () => string\n  readonly getContextData: (parmsId: ParmsIdType) => ContextData\n  readonly keyContextData: ContextData\n  readonly firstContextData: ContextData\n  readonly lastContextData: ContextData\n  readonly parametersSet: () => boolean\n  readonly keyParmsId: ParmsIdType\n  readonly firstParmsId: ParmsIdType\n  readonly lastParmsId: ParmsIdType\n  readonly usingKeyswitching: boolean\n}\n\nconst ContextConstructor = (library: Library): ContextDependencies => ({\n  ParmsIdType,\n  ContextData,\n  SecurityLevel\n}: ContextDependencyOptions): ContextConstructorOptions => (\n  encryptionParams,\n  expandModChain = true,\n  securityLevel = SecurityLevel.tc128\n): Context => {\n  // Static methods\n  const Constructor = library.SEALContext\n\n  let _instance = new Constructor(\n    encryptionParams.instance,\n    expandModChain,\n    securityLevel\n  ) as Instance\n\n  /**\n   * @implements Context\n   */\n\n  /**\n   * @interface Context\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name Context#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance. No type checking is performed.\n     *\n     * @private\n     * @function\n     * @name Context#unsafeInject\n     * @param {Instance} instance WASM instance\n     */\n    unsafeInject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = instance\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name Context#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * Returns the context parameters in a human readable string format.\n     *\n     * @private\n     * @function\n     * @name Context#toString\n     * @returns {string} Context details as a string\n     */\n    toHuman(): string {\n      return _instance.toHuman()\n    },\n\n    /**\n     * Returns the ContextData corresponding to encryption parameters with a given\n     * parmsId. If parameters with the given parmsId are not found then the\n     * function returns nullptr.\n     *\n     * @function\n     * @name Context#getContextData\n     * @param {ParmsIdType} parmsId Specific id to return ContextData for\n     * @returns {ContextData} ContextData corresponding to encryption parameters\n     */\n    getContextData(parmsId: ParmsIdType): ContextData {\n      const instance = _instance.getContextData(parmsId.instance)\n      const contextData = ContextData()\n      contextData.unsafeInject(instance)\n      return contextData\n    },\n\n    /**\n     * The ContextData corresponding to encryption parameters that are used for keys.\n     *\n     * @readonly\n     * @name Context#keyContextData\n     * @type {ContextData}\n     */\n    get keyContextData() {\n      const instance = _instance.keyContextData()\n      const contextData = ContextData()\n      contextData.unsafeInject(instance)\n      return contextData\n    },\n\n    /**\n     * The ContextData corresponding to the first encryption parameters that are used for data.\n     *\n     * @readonly\n     * @name Context#firstContextData\n     * @type {ContextData}\n     */\n    get firstContextData() {\n      const instance = _instance.firstContextData()\n      const contextData = ContextData()\n      contextData.unsafeInject(instance)\n      return contextData\n    },\n\n    /**\n     * Returns the ContextData corresponding to the last encryption parameters that are used for data.\n     *\n     * @readonly\n     * @name Context#lastContextData\n     * @type {ContextData}\n     */\n    get lastContextData() {\n      const instance = _instance.lastContextData()\n      const contextData = ContextData()\n      contextData.unsafeInject(instance)\n      return contextData\n    },\n\n    /**\n     * Whether the encryption parameters are set in a way that is considered valid by\n     * Microsoft SEAL, the variable parameters_set is set to true.\n     *\n     * @function\n     * @name Context#parametersSet\n     * @type {boolean}\n     */\n    parametersSet() {\n      return _instance.parametersSet()\n    },\n\n    /**\n     * Returns a ParmsIdType corresponding to the set of encryption parameters that are used for keys.\n     *\n     * @readonly\n     * @name Context#keyParmsId\n     * @type {ParmsIdType}\n     */\n    get keyParmsId() {\n      const instance = _instance.keyParmsId()\n      const parmsId = ParmsIdType()\n      parmsId.inject(instance)\n      return parmsId\n    },\n\n    /**\n     * Returns a ParmsIdType corresponding to the first encryption parameters that are used for data.\n     *\n     * @readonly\n     * @name Context#firstParmsId\n     * @type {ParmsIdType}\n     */\n    get firstParmsId() {\n      const instance = _instance.firstParmsId()\n      const parmsId = ParmsIdType()\n      parmsId.inject(instance)\n      return parmsId\n    },\n\n    /**\n     * The ParmsIdType corresponding to the last encryption parameters that are used for data.\n     *\n     * @readonly\n     * @name Context#lastParmsId\n     * @type {ParmsIdType}\n     */\n    get lastParmsId() {\n      const instance = _instance.lastParmsId()\n      const parmsId = ParmsIdType()\n      parmsId.inject(instance)\n      return parmsId\n    },\n\n    /**\n     * Whether the coefficient modulus supports keyswitching. In practice,\n     * support for keyswitching is required by Evaluator.relinearize,\n     * Evaluator.applyGalois, and all rotation and conjugation operations. For\n     * keyswitching to be available, the coefficient modulus parameter must consist\n     * of at least two prime number factors.\n     *\n     * @readonly\n     * @name Context#usingKeyswitching\n     * @type {boolean}\n     */\n    get usingKeyswitching() {\n      return _instance.usingKeyswitching()\n    }\n  }\n}\n\nexport const ContextInit = ({ loader }: LoaderOptions): ContextDependencies => {\n  const library: Library = loader.library\n  return ContextConstructor(library)\n}\n","import { LoaderOptions, Library, Instance } from './seal'\nimport { Exception } from './exception'\nimport { CipherText } from './cipher-text'\nimport { Context } from './context'\nimport { SecretKey } from './secret-key'\nimport { PlainText, PlainTextConstructorOptions } from './plain-text'\n\nexport type DecryptorDependencyOptions = {\n  readonly Exception: Exception\n  readonly PlainText: PlainTextConstructorOptions\n}\n\nexport type DecryptorDependencies = {\n  ({\n    Exception,\n    PlainText\n  }: DecryptorDependencyOptions): DecryptorConstructorOptions\n}\n\nexport type DecryptorConstructorOptions = {\n  (context: Context, secretKey: SecretKey): Decryptor\n}\n\nexport type Decryptor = {\n  readonly instance: Instance\n  readonly unsafeInject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly decrypt: (\n    cipherText: CipherText,\n    plainText?: PlainText\n  ) => PlainText | void\n  readonly invariantNoiseBudget: (cipherText: CipherText) => number\n}\n\nconst DecryptorConstructor = (library: Library): DecryptorDependencies => ({\n  Exception,\n  PlainText\n}: DecryptorDependencyOptions): DecryptorConstructorOptions => (\n  context,\n  secretKey\n): Decryptor => {\n  const Constructor = library.Decryptor\n  let _instance: Instance\n  try {\n    _instance = new Constructor(context.instance, secretKey.instance)\n  } catch (e) {\n    throw Exception.safe(e)\n  }\n  /**\n   * @implements Decryptor\n   */\n\n  /**\n   * @interface Decryptor\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name Decryptor#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance. No type checking is performed.\n     *\n     * @private\n     * @function\n     * @name Decryptor#unsafeInject\n     * @param {Instance} instance WASM instance\n     */\n    unsafeInject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = instance\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name Decryptor#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * Decrypts a CipherText and stores the result in the destination parameter.\n     *\n     * @function\n     * @name Decryptor#decrypt\n     * @param {CipherText} cipherText CipherText to decrypt\n     * @param {PlainText} [plainText] PlainText destination to store the decrypted result\n     * @returns {PlainText|void} Returns undefined if a PlainText was specified. Otherwise returns a\n     * PlainText containng the decrypted result\n     */\n    decrypt(cipherText: CipherText, plainText?: PlainText): PlainText | void {\n      try {\n        if (plainText) {\n          _instance.decrypt(cipherText.instance, plainText.instance)\n          return\n        }\n        const plain = PlainText()\n        _instance.decrypt(cipherText.instance, plain.instance)\n        return plain\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Computes the invariant noise budget (in bits) of a CipherText. The invariant\n     * noise budget measures the amount of room there is for the noise to grow while\n     * ensuring correct decryptions. This function works only with the BFV scheme.\n     *\n     * @par Invariant Noise Budget\n     * The invariant noise polynomial of a CipherText is a rational coefficient\n     * polynomial, such that a CipherText decrypts correctly as long as the\n     * coefficients of the invariantnoise polynomial are of absolute value less\n     * than 1/2. Thus, we call the infinity-norm of the invariant noise polynomial\n     * the invariant noise, and for correct decryption requireit to be less than\n     * 1/2. If v denotes the invariant noise, we define the invariant noise budget\n     * as -log2(2v). Thus, the invariant noise budget starts from some initial\n     * value, which depends on the encryption parameters, and decreases when\n     * computations are performed. When the budget reaches zero, the CipherText\n     * becomes too noisy to decrypt correctly.\n     *\n     * @function\n     * @name Decryptor#invariantNoiseBudget\n     * @param {CipherText} cipherText CipherText to measure\n     * @returns {number} Invariant noise budget (in bits)\n     */\n    invariantNoiseBudget(cipherText: CipherText): number {\n      try {\n        return _instance.invariantNoiseBudget(cipherText.instance)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    }\n  }\n}\n\nexport const DecryptorInit = ({\n  loader\n}: LoaderOptions): DecryptorDependencies => {\n  const library: Library = loader.library\n  return DecryptorConstructor(library)\n}\n","import { LoaderOptions, Library, Instance } from './seal'\nimport { Vector, VectorConstructorOptions } from './vector'\nimport { ComprModeType } from './compr-mode-type'\nimport { SchemeType } from './scheme-type'\nimport { Exception } from './exception'\nimport { Modulus, ModulusConstructorOptions } from './modulus'\n\nexport type EncryptionParametersDependencyOptions = {\n  readonly Exception: Exception\n  readonly ComprModeType: ComprModeType\n  readonly Modulus: ModulusConstructorOptions\n  readonly SchemeType: SchemeType\n  readonly Vector: VectorConstructorOptions\n}\n\nexport type EncryptionParametersDependencies = {\n  ({\n    Exception,\n    ComprModeType,\n    Modulus,\n    SchemeType,\n    Vector\n  }: EncryptionParametersDependencyOptions): EncryptionParametersConstructorOptions\n}\n\nexport type EncryptionParametersConstructorOptions = {\n  (schemeType?: SchemeType): EncryptionParameters\n}\n\nexport type EncryptionParameters = {\n  readonly instance: Instance\n  readonly unsafeInject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly setPolyModulusDegree: (polyModulusDegree: number) => void\n  readonly setCoeffModulus: (coeffModulus: Vector) => void\n  readonly setPlainModulus: (plainModulus: Modulus) => void\n  readonly scheme: SchemeType\n  readonly polyModulusDegree: number\n  readonly coeffModulus: BigUint64Array\n  readonly plainModulus: Modulus\n  readonly save: (compression?: ComprModeType) => string\n  readonly saveArray: (compression?: ComprModeType) => Uint8Array\n  readonly load: (encoded: string) => void\n  readonly loadArray: (array: Uint8Array) => void\n}\n\nconst EncryptionParametersConstructor = (\n  library: Library\n): EncryptionParametersDependencies => ({\n  Exception,\n  ComprModeType,\n  Modulus,\n  SchemeType,\n  Vector\n}: EncryptionParametersDependencyOptions): EncryptionParametersConstructorOptions => (\n  schemeType: SchemeType = SchemeType.none\n): EncryptionParameters => {\n  const Constructor = library.EncryptionParameters\n  let _instance = new Constructor(schemeType)\n\n  /**\n   * @implements EncryptionParameters\n   */\n\n  /**\n   * @interface EncryptionParameters\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name EncryptionParameters#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance. No type checking is performed.\n     *\n     * @private\n     * @function\n     * @name EncryptionParameters#unsafeInject\n     * @param {Instance} instance WASM instance\n     */\n    unsafeInject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = instance\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name EncryptionParameters#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * Sets the degree of the polynomial modulus parameter to the specified value.\n     * The polynomial modulus directly affects the number of coefficients in\n     * PlainText polynomials, the size of CipherText elements, the computational\n     * performance of the scheme (bigger is worse), and the security level (bigger\n     * is better). In Microsoft SEAL the degree of the polynomial modulus must be a power\n     * of 2 (e.g.  1024, 2048, 4096, 8192, 16384, or 32768).\n     *\n     * @function\n     * @name EncryptionParameters#setPolyModulusDegree\n     * @param {number} polyModulusDegree The degree of the polynomial modulus\n     */\n    setPolyModulusDegree(polyModulusDegree: number) {\n      try {\n        _instance.setPolyModulusDegree(polyModulusDegree)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Sets the coefficient modulus parameter. The coefficient modulus consists\n     * of a list of distinct prime numbers, and is represented by a vector of\n     * Modulus objects. The coefficient modulus directly affects the size\n     * of CipherText elements, the amount of computation that the scheme can perform\n     * (bigger is better), and the security level (bigger is worse). In Microsoft SEAL each\n     * of the prime numbers in the coefficient modulus must be at most 60 bits,\n     * and must be congruent to 1 modulo 2*degree(poly_modulus).\n     *\n     * @function\n     * @name EncryptionParameters#setCoeffModulus\n     * @param {Vector} coeffModulus Vector of Modulus primes\n     */\n    setCoeffModulus(coeffModulus: Vector) {\n      try {\n        _instance.setCoeffModulus(coeffModulus.instance)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Sets the PlainText modulus parameter. The PlainText modulus is an integer\n     * modulus represented by the Modulus class. The PlainText modulus\n     * determines the largest coefficient that PlainText polynomials can represent.\n     * It also affects the amount of computation that the scheme can perform\n     * (bigger is worse). In Microsoft SEAL the PlainText modulus can be at most 60 bits\n     * long, but can otherwise be any integer. Note, however, that some features\n     * (e.g. batching) require the PlainText modulus to be of a particular form.\n     *\n     * @function\n     * @name EncryptionParameters#setPlainModulus\n     * @param {Modulus} plainModulus PlainText modulus parameter\n     */\n    setPlainModulus(plainModulus: Modulus) {\n      try {\n        _instance.setPlainModulus(plainModulus.instance)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * The encryption scheme type.\n     *\n     * @readonly\n     * @name EncryptionParameters#scheme\n     * @type {SchemeType.none|SchemeType.bfv|SchemeType.ckks}\n     */\n    get scheme() {\n      return _instance.scheme()\n    },\n\n    /**\n     * The degree of the polynomial modulus parameter.\n     *\n     * @readonly\n     * @name EncryptionParameters#polyModulusDegree\n     * @type {number}\n     */\n    get polyModulusDegree() {\n      return _instance.polyModulusDegree()\n    },\n\n    /**\n     * Returns the currently set coefficient modulus parameter.\n     *\n     * @readonly\n     * @name EncryptionParameters#coeffModulus\n     * @type {BigUint64Array}\n     */\n    get coeffModulus() {\n      const tempVect = Vector()\n      const instance = _instance.coeffModulus()\n      tempVect.unsafeInject(instance)\n      tempVect.setType('Modulus')\n      const tempArr = tempVect.toArray() as BigUint64Array\n      tempVect.delete()\n      return tempArr\n    },\n\n    /**\n     * Returns the currently set PlainText modulus parameter.\n     *\n     * @readonly\n     * @name EncryptionParameters#plainModulus\n     * @type {Modulus}\n     */\n    get plainModulus() {\n      const instance = _instance.plainModulus()\n      const smallModulus = Modulus(BigInt(0))\n      smallModulus.inject(instance)\n      return smallModulus\n    },\n\n    /**\n     * Save the Encryption Parameters to a base64 string\n     *\n     * @function\n     * @name EncryptionParameters#save\n     * @param {ComprModeType} [compression={@link ComprModeType.zstd}] The compression mode to use\n     * @returns {string} base64 encoded string\n     */\n    save(compression: ComprModeType = ComprModeType.zstd): string {\n      return _instance.saveToString(compression)\n    },\n\n    /**\n     * Save the Encryption Parameters as a binary Uint8Array\n     *\n     * @function\n     * @name EncryptionParameters#saveArray\n     * @param {ComprModeType} [compression={@link ComprModeType.zstd}] The compression mode to use\n     * @returns {Uint8Array} A byte array containing the CipherText in binary form\n     */\n    saveArray(compression: ComprModeType = ComprModeType.zstd): Uint8Array {\n      const tempVect = Vector()\n      const instance = _instance.saveToArray(compression)\n      tempVect.unsafeInject(instance)\n      tempVect.setType('Uint8Array')\n      const tempArr = tempVect.toArray() as Uint8Array\n      tempVect.delete()\n      return tempArr\n    },\n\n    /**\n     * Load the Encryption Parameters from a base64 string\n     *\n     * @function\n     * @name EncryptionParameters#load\n     * @param {string} encoded base64 encoded string\n     */\n    load(encoded: string) {\n      try {\n        _instance.loadFromString(encoded)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Load the Encryption Parameters from an Uint8Array holding binary data\n     *\n     * @function\n     * @name EncryptionParameters#loadArray\n     * @param {Uint8Array} array TypedArray containing binary data\n     */\n    loadArray(array: Uint8Array) {\n      try {\n        _instance.loadFromArray(array)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    }\n  }\n}\n\nexport const EncryptionParametersInit = ({\n  loader\n}: LoaderOptions): EncryptionParametersDependencies => {\n  const library: Library = loader.library\n  return EncryptionParametersConstructor(library)\n}\n","import { LoaderOptions, Library, Instance } from './seal'\nimport { Exception } from './exception'\nimport { MemoryPoolHandle } from './memory-pool-handle'\nimport { CipherText, CipherTextConstructorOptions } from './cipher-text'\nimport { Context } from './context'\nimport { Serializable, SerializableConstructorOptions } from './serializable'\nimport { PublicKey } from './public-key'\nimport { SecretKey } from './secret-key'\nimport { PlainText } from './plain-text'\n\nexport type EncryptorDependencyOptions = {\n  readonly Exception: Exception\n  readonly MemoryPoolHandle: MemoryPoolHandle\n  readonly CipherText: CipherTextConstructorOptions\n  readonly Serializable: SerializableConstructorOptions\n}\n\nexport type EncryptorDependencies = {\n  ({\n    Exception,\n    MemoryPoolHandle,\n    CipherText,\n    Serializable\n  }: EncryptorDependencyOptions): EncryptorConstructorOptions\n}\n\nexport type EncryptorConstructorOptions = {\n  (context: Context, publicKey: PublicKey, secretKey?: SecretKey): Encryptor\n}\n\nexport type Encryptor = {\n  readonly instance: Instance\n  readonly unsafeInject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly encrypt: (\n    plainText: PlainText,\n    cipherText?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n  readonly encryptSerializable: (\n    plainText: PlainText,\n    pool?: MemoryPoolHandle\n  ) => Serializable\n  readonly encryptSymmetric: (\n    plainText: PlainText,\n    cipherText?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n  readonly encryptSymmetricSerializable: (\n    plainText: PlainText,\n    pool?: MemoryPoolHandle\n  ) => Serializable\n  readonly encryptZero: (\n    cipherText?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n  readonly encryptZeroSerializable: (pool?: MemoryPoolHandle) => Serializable\n}\n\nconst EncryptorConstructor = (library: Library): EncryptorDependencies => ({\n  Exception,\n  MemoryPoolHandle,\n  CipherText,\n  Serializable\n}: EncryptorDependencyOptions): EncryptorConstructorOptions => (\n  context,\n  publicKey,\n  secretKey\n): Encryptor => {\n  const Constructor = library.Encryptor\n  let _instance = constructInstance(context, publicKey, secretKey)\n\n  function constructInstance(\n    context: Context,\n    publicKey: PublicKey,\n    secretKey?: SecretKey\n  ) {\n    try {\n      if (secretKey) {\n        return new Constructor(\n          context.instance,\n          publicKey.instance,\n          secretKey.instance\n        )\n      }\n      return new Constructor(context.instance, publicKey.instance)\n    } catch (e) {\n      throw Exception.safe(e)\n    }\n  }\n  /**\n   * @implements Encryptor\n   */\n\n  /**\n   * @interface Encryptor\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name Encryptor#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance. No type checking is performed.\n     *\n     * @private\n     * @function\n     * @name Encryptor#unsafeInject\n     * @param {Instance} instance WASM instance\n     */\n    unsafeInject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = instance\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name Encryptor#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * Encrypts a PlainText and stores the result in the destination parameter.\n     * Dynamic memory allocations in the process are allocated from the memory\n     * pool pointed to by the given MemoryPoolHandle.\n     *\n     * @function\n     * @name Encryptor#encrypt\n     * @param {PlainText} plainText PlainText to encrypt\n     * @param {CipherText} [cipherText] CipherText destination to store the encrypted result\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText|void} Returns undefined if a CipherText was specified. Otherwise returns a\n     * CipherText containing the encrypted result\n     */\n    encrypt(\n      plainText: PlainText,\n      cipherText?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (cipherText) {\n          _instance.encrypt(plainText.instance, cipherText.instance, pool)\n          return\n        }\n        const cipher = CipherText()\n        _instance.encrypt(plainText.instance, cipher.instance, pool)\n        return cipher\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Encrypts a PlainText and returns a CipherText as a Serializable object.\n     * Dynamic memory allocations in the process are allocated from the memory\n     * pool pointed to by the given MemoryPoolHandle.\n     *\n     * @function\n     * @name Encryptor#encryptSerializable\n     * @param {PlainText} plainText PlainText to encrypt\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {Serializable<CipherText>} A Serializable containing the encrypted result\n     */\n    encryptSerializable(\n      plainText: PlainText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): Serializable {\n      try {\n        const temp = Serializable()\n        const instance = _instance.encryptSerializable(plainText.instance, pool)\n        temp.unsafeInject(instance)\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Encrypts a PlainText with the secret key and stores the result in\n     * destination.\n     *\n     * The encryption parameters for the resulting CipherText\n     * correspond to:\n     * 1) in BFV, the highest (data) level in the modulus switching chain,\n     * 2) in CKKS, the encryption parameters of the plaintext.\n     * Dynamic memory allocations in the process are allocated from the memory\n     * pool pointed to by the given MemoryPoolHandle.\n     *\n     * @function\n     * @name Encryptor#encryptSymmetric\n     * @param {PlainText} plainText PlainText to encrypt\n     * @param {CipherText} [cipherText] CipherText destination to store the encrypted result.\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText|void} Returns undefined if a CipherText was specified. Otherwise returns a\n     * CipherText containing the encrypted result\n     */\n    encryptSymmetric(\n      plainText: PlainText,\n      cipherText?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (cipherText) {\n          _instance.encryptSymmetric(\n            plainText.instance,\n            cipherText.instance,\n            pool\n          )\n          return\n        }\n        const cipher = CipherText()\n        _instance.encryptSymmetric(plainText.instance, cipher.instance, pool)\n        return cipher\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Encrypts a plaintext with the secret key and returns the ciphertext as\n     * a serializable object.\n     *\n     * The encryption parameters for the resulting CipherText\n     * correspond to:\n     * 1) in BFV, the highest (data) level in the modulus switching chain,\n     * 2) in CKKS, the encryption parameters of the plaintext.\n     * Dynamic memory allocations in the process are allocated from the memory\n     * pool pointed to by the given MemoryPoolHandle.\n     *\n     * Half of the ciphertext data is pseudo-randomly generated from a seed to\n     * reduce the object size. The resulting serializable object cannot be used\n     * directly and is meant to be serialized for the size reduction to have an\n     * impact.\n     *\n     * @function\n     * @name Encryptor#encryptSymmetricSerializable\n     * @param {PlainText} plainText PlainText to encrypt\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {Serializable<CipherText>} Returns a Serializable containing the encrypted result\n     */\n    encryptSymmetricSerializable(\n      plainText: PlainText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): Serializable {\n      try {\n        const serialized = Serializable()\n        const instance = _instance.encryptSymmetricSerializable(\n          plainText.instance,\n          pool\n        )\n        serialized.unsafeInject(instance)\n        return serialized\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     *\n     * Encrypts a zero plaintext with the public key and returns the ciphertext\n     * as a serializable object.\n     *\n     * The encryption parameters for the resulting ciphertext correspond to the\n     * highest (data) level in the modulus switching chain. Dynamic memory\n     * allocations in the process are allocated from the memory pool pointed to\n     * by the given MemoryPoolHandle.\n     *\n     * @function\n     * @name Encryptor#encryptZero\n     * @param {CipherText} [cipherText] A CipherText to overwrite.\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText|void} Returns undefined if a CipherText was specified. Otherwise returns a\n     * CipherText containing the encrypted result\n     */\n    encryptZero(\n      cipherText?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (cipherText) {\n          _instance.encryptZero(cipherText.instance, pool)\n          return\n        }\n        const cipher = CipherText()\n        _instance.encryptZero(cipher.instance, pool)\n        return cipher\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     *\n     * Encrypts a zero plaintext with the public key and stores the result in\n     * destination.\n     *\n     * The encryption parameters for the resulting ciphertext correspond to the\n     * highest (data) level in the modulus switching chain. Dynamic memory\n     * allocations in the process are allocated from the memory pool pointed to\n     * by the given MemoryPoolHandle.\n     *\n     * @function\n     * @name Encryptor#encryptZeroSerializable\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {Serializable<CipherText>} A CipherText as a serialized object containing the encrypted result\n     */\n    encryptZeroSerializable(\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): Serializable {\n      try {\n        const serialized = Serializable()\n        const instance = _instance.encryptZeroSerializable(pool)\n        serialized.unsafeInject(instance)\n        return serialized\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    }\n  }\n}\n\nexport const EncryptorInit = ({\n  loader\n}: LoaderOptions): EncryptorDependencies => {\n  const library: Library = loader.library\n  return EncryptorConstructor(library)\n}\n","import { LoaderOptions, Library, Instance } from './seal'\nimport { Exception } from './exception'\nimport { CipherText, CipherTextConstructorOptions } from './cipher-text'\nimport { Context } from './context'\nimport { PlainText, PlainTextConstructorOptions } from './plain-text'\nimport { MemoryPoolHandle } from './memory-pool-handle'\nimport { RelinKeys } from './relin-keys'\nimport { ParmsIdType } from './parms-id-type'\nimport { GaloisKeys } from './galois-keys'\nimport { SchemeType } from './scheme-type'\n\nexport type EvaluatorDependencyOptions = {\n  readonly Exception: Exception\n  readonly MemoryPoolHandle: MemoryPoolHandle\n  readonly CipherText: CipherTextConstructorOptions\n  readonly PlainText: PlainTextConstructorOptions\n}\n\nexport type EvaluatorDependencies = {\n  ({\n    Exception,\n    MemoryPoolHandle,\n    CipherText,\n    PlainText\n  }: EvaluatorDependencyOptions): EvaluatorConstructorOptions\n}\n\nexport type EvaluatorConstructorOptions = {\n  (context: Context): Evaluator\n}\n\nexport type Evaluator = {\n  readonly instance: Instance\n  readonly unsafeInject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly negate: (\n    encrypted: CipherText,\n    destination?: CipherText\n  ) => CipherText | void\n  readonly add: (\n    a: CipherText,\n    b: CipherText,\n    destination?: CipherText\n  ) => CipherText | void\n  readonly sub: (\n    a: CipherText,\n    b: CipherText,\n    destination?: CipherText\n  ) => CipherText | void\n  readonly multiply: (\n    a: CipherText,\n    b: CipherText,\n    destination?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n  readonly square: (\n    encrypted: CipherText,\n    destination?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n  readonly relinearize: (\n    encrypted: CipherText,\n    relinKeys: RelinKeys,\n    destination?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n  readonly cipherModSwitchToNext: (\n    encrypted: CipherText,\n    destination?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n  readonly cipherModSwitchTo: (\n    encrypted: CipherText,\n    parmsId: ParmsIdType,\n    destination?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n  readonly plainModSwitchToNext: (\n    plain: PlainText,\n    destination?: PlainText\n  ) => PlainText | void\n  readonly plainModSwitchTo: (\n    plain: PlainText,\n    parmsId: ParmsIdType,\n    destination?: PlainText\n  ) => PlainText | void\n  readonly rescaleToNext: (\n    encrypted: CipherText,\n    destination?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n  readonly rescaleTo: (\n    encrypted: CipherText,\n    parmsId: ParmsIdType,\n    destination?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n  readonly exponentiate: (\n    encrypted: CipherText,\n    exponent: number,\n    relinKeys: RelinKeys,\n    destination?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n  readonly addPlain: (\n    encrypted: CipherText,\n    plain: PlainText,\n    destination?: CipherText\n  ) => CipherText | void\n  readonly subPlain: (\n    encrypted: CipherText,\n    plain: PlainText,\n    destination?: CipherText\n  ) => CipherText | void\n  readonly multiplyPlain: (\n    encrypted: CipherText,\n    plain: PlainText,\n    destination?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n  readonly plainTransformToNtt: (\n    plain: PlainText,\n    parmsId: ParmsIdType,\n    destinationNtt?: PlainText,\n    pool?: MemoryPoolHandle\n  ) => PlainText | void\n  readonly cipherTransformToNtt: (\n    encrypted: CipherText,\n    destinationNtt?: CipherText\n  ) => CipherText | void\n  readonly cipherTransformFromNtt: (\n    encryptedNtt: CipherText,\n    destination?: CipherText\n  ) => CipherText | void\n  readonly applyGalois: (\n    encrypted: CipherText,\n    galoisElt: number,\n    galoisKeys: GaloisKeys,\n    destination?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n  readonly rotateRows: (\n    encrypted: CipherText,\n    steps: number,\n    galoisKeys: GaloisKeys,\n    destination?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n  readonly rotateColumns: (\n    encrypted: CipherText,\n    galoisKeys: GaloisKeys,\n    destination?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n  readonly rotateVector: (\n    encrypted: CipherText,\n    steps: number,\n    galoisKeys: GaloisKeys,\n    destination?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n  readonly complexConjugate: (\n    encrypted: CipherText,\n    galoisKeys: GaloisKeys,\n    destination?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n  readonly sumElements: (\n    encrypted: CipherText,\n    galoisKeys: GaloisKeys,\n    scheme: SchemeType,\n    destination?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n  readonly dotProduct: (\n    a: CipherText,\n    b: CipherText,\n    relinKeys: RelinKeys,\n    galoisKeys: GaloisKeys,\n    scheme: SchemeType,\n    destination?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n  readonly dotProductPlain: (\n    a: CipherText,\n    b: PlainText,\n    galoisKeys: GaloisKeys,\n    scheme: SchemeType,\n    destination?: CipherText,\n    pool?: MemoryPoolHandle\n  ) => CipherText | void\n}\n\nconst EvaluatorConstructor = (library: Library): EvaluatorDependencies => ({\n  Exception,\n  MemoryPoolHandle,\n  CipherText,\n  PlainText\n}: EvaluatorDependencyOptions): EvaluatorConstructorOptions => (\n  context\n): Evaluator => {\n  const Constructor = library.Evaluator\n  let _instance: Instance\n  try {\n    _instance = new Constructor(context.instance)\n  } catch (e) {\n    throw Exception.safe(e)\n  }\n  /**\n   * @implements Evaluator\n   */\n\n  /**\n   * @interface Evaluator\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name Evaluator#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance. No type checking is performed.\n     *\n     * @private\n     * @function\n     * @name Evaluator#unsafeInject\n     * @param {Instance} instance WASM instance\n     */\n    unsafeInject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = instance\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name Evaluator#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * Negates a CipherText and stores the result in the destination parameter.\n     *\n     * @function\n     * @name Evaluator#negate\n     * @param {CipherText} encrypted CipherText to negate\n     * @param {CipherText} [destination] CipherText to store the negated results\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const cipherText = seal.CipherText()\n     * // ... after encrypting some data ...\n     * const resultCipher = evaluator.negate(cipherText)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.negate(encrypted, cipherDest)\n     */\n    negate(encrypted: CipherText, destination?: CipherText): CipherText | void {\n      try {\n        if (destination) {\n          _instance.negate(encrypted.instance, destination.instance)\n          return\n        }\n        const temp = CipherText()\n        _instance.negate(encrypted.instance, temp.instance)\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Adds two CipherTexts. This function adds together a and b\n     * and stores the result in the destination parameter.\n     *\n     * @function\n     * @name Evaluator#add\n     * @param {CipherText} a CipherText operand A\n     * @param {CipherText} b CipherText operand B\n     * @param {CipherText} [destination] CipherText destination to store the sum\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const cipherTextA = seal.CipherText()\n     * const cipherTextB = seal.CipherText()\n     * // ... after encrypting some data ...\n     * const resultCipher = evaluator.add(cipherTextA, cipherTextB)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.add(cipherTextA, cipherTextB, cipherDest)\n     */\n    add(\n      a: CipherText,\n      b: CipherText,\n      destination?: CipherText\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.add(a.instance, b.instance, destination.instance)\n          return\n        }\n        const temp = CipherText()\n        _instance.add(a.instance, b.instance, temp.instance)\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Subtracts two CipherTexts. This function computes the difference of a\n     * and b and stores the result in the destination parameter.\n     *\n     * @function\n     * @name Evaluator#sub\n     * @param {CipherText} a CipherText operand A\n     * @param {CipherText} b CipherText operand B\n     * @param {CipherText} [destination] CipherText destination to store the difference\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const cipherTextA = seal.CipherText()\n     * const cipherTextB = seal.CipherText()\n     * // ... after encrypting some data ...\n     * const resultCipher = evaluator.sub(cipherTextA, cipherTextB)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.sub(cipherTextA, cipherTextB, cipherDest)\n     */\n    sub(\n      a: CipherText,\n      b: CipherText,\n      destination?: CipherText\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.sub(a.instance, b.instance, destination.instance)\n          return\n        }\n        const temp = CipherText()\n        _instance.sub(a.instance, b.instance, temp.instance)\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Multiplies two CipherTexts. This functions computes the product of a\n     * and b and stores the result in the destination parameter. Dynamic\n     * memory allocations in the process are allocated from the memory pool pointed\n     * to by the given MemoryPoolHandle.\n     *\n     * @function\n     * @name Evaluator#multiply\n     * @param {CipherText} a CipherText operand A\n     * @param {CipherText} b CipherText operand B\n     * @param {CipherText} [destination] CipherText destination to store the product\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const cipherTextA = seal.CipherText()\n     * const cipherTextB = seal.CipherText()\n     * // ... after encrypting some data ...\n     * const resultCipher = evaluator.multiply(cipherTextA, cipherTextB)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.multiply(cipherTextA, cipherTextB, cipherDest)\n     */\n    multiply(\n      a: CipherText,\n      b: CipherText,\n      destination?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.multiply(a.instance, b.instance, destination.instance, pool)\n          return\n        }\n        const temp = CipherText()\n        _instance.multiply(a.instance, b.instance, temp.instance, pool)\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Squares a CipherText. This functions computes the square of encrypted and\n     * stores the result in the destination parameter. Dynamic memory allocations\n     * in the process are allocated from the memory pool pointed to by the given\n     * MemoryPoolHandle.\n     *\n     * @function\n     * @name Evaluator#square\n     * @param {CipherText} encrypted CipherText to square\n     * @param {CipherText} [destination] CipherText destination to store the squared result\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const cipherTextA = seal.CipherText()\n     * // ... after encrypting some data ...\n     * const resultCipher = evaluator.square(cipherTextA, cipherTextB)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.square(cipherTextA, cipherDest)\n     */\n    square(\n      encrypted: CipherText,\n      destination?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.square(encrypted.instance, destination.instance, pool)\n          return\n        }\n        const temp = CipherText()\n        _instance.square(encrypted.instance, temp.instance, pool)\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Relinearizes a CipherText. This functions relinearizes encrypted, reducing\n     * its size down to 2, and stores the result in the destination parameter.\n     * If the size of encrypted is K+1, the given relinearization keys need to\n     * have size at least K-1. Dynamic memory allocations in the process are allocated\n     * from the memory pool pointed to by the given MemoryPoolHandle.\n     *\n     * @function\n     * @name Evaluator#relinearize\n     * @param {CipherText} encrypted CipherText to relinearize\n     * @param {RelinKeys} relinKeys RelinKey used to perform relinearization\n     * @param {CipherText} [destination] CipherText destination to store the relinearized result\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const relinKeys = keyGenerator.createRelinKeys()\n     * const cipherTextA = seal.CipherText()\n     * // ... after encrypting some data ...\n     * const resultCipher = evaluator.relinearize(cipherTextA, relinKeys)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.relinearize(cipherTextA, relinKeys, cipherDest)\n     */\n    relinearize(\n      encrypted: CipherText,\n      relinKeys: RelinKeys,\n      destination?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.relinearize(\n            encrypted.instance,\n            relinKeys.instance,\n            destination.instance,\n            pool\n          )\n          return\n        }\n        const temp = CipherText()\n        _instance.relinearize(\n          encrypted.instance,\n          relinKeys.instance,\n          temp.instance,\n          pool\n        )\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Given a CipherText encrypted modulo q_1...q_k, this function switches the\n     * modulus down to q_1...q_{k-1} and stores the result in the destination\n     * parameter. Dynamic memory allocations in the process are allocated from\n     * the memory pool pointed to by the given MemoryPoolHandle.\n     *\n     * @function\n     * @name Evaluator#cipherModSwitchToNext\n     * @param {CipherText} encrypted CipherText to switch its modulus down\n     * @param {CipherText} [destination] CipherText destination to store the switched result\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const cipherTextA = seal.CipherText()\n     * // ... after encrypting some data ...\n     * const resultCipher = evaluator.cipherModSwitchToNext(cipherTextA)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.cipherModSwitchToNext(cipherTextA, cipherDest)\n     */\n    cipherModSwitchToNext(\n      encrypted: CipherText,\n      destination?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.cipherModSwitchToNext(\n            encrypted.instance,\n            destination.instance,\n            pool\n          )\n          return\n        }\n        const temp = CipherText()\n        _instance.cipherModSwitchToNext(encrypted.instance, temp.instance, pool)\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Given a CipherText encrypted modulo q_1...q_k, this function switches the\n     * modulus down until the parameters reach the given parmsId and stores the\n     * result in the destination parameter. Dynamic memory allocations in the process\n     * are allocated from the memory pool pointed to by the given MemoryPoolHandle.\n     *\n     * @function\n     * @name Evaluator#cipherModSwitchTo\n     * @param {CipherText} encrypted CipherText to switch its modulus down\n     * @param {ParmsIdType} parmsId Target parmsId to switch to\n     * @param {CipherText} [destination] CipherText destination to store the switched result\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const context = seal.Context(encParms, true)\n     * const cipherTextA = seal.CipherText()\n     * // ... after encrypting some data ...\n     * const parmsId = context.lastParmsId\n     * const resultCipher = evaluator.cipherModSwitchTo(cipherTextA, parmsId)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.cipherModSwitchTo(cipherTextA, parmsId, cipherDest)\n     */\n    cipherModSwitchTo(\n      encrypted: CipherText,\n      parmsId: ParmsIdType,\n      destination?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.cipherModSwitchTo(\n            encrypted.instance,\n            parmsId.instance,\n            destination.instance,\n            pool\n          )\n          return\n        }\n        const temp = CipherText()\n        _instance.cipherModSwitchTo(\n          encrypted.instance,\n          parmsId.instance,\n          temp.instance,\n          pool\n        )\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Modulus switches an NTT transformed PlainText from modulo q_1...q_k down\n     * to modulo q_1...q_{k-1} and stores the result in the destination parameter.\n     *\n     * @function\n     * @name Evaluator#plainModSwitchToNext\n     * @param {PlainText} plain PlainText to switch its modulus down\n     * @param {PlainText} [destination] PlainText destination to store the switched result\n     * @returns {PlainText|void} PlainText containing the result or void if a destination was supplied\n     * @example\n     * const plainTextA = seal.PlainText()\n     * // ... after encoding some data ...\n     * const resultCipher = evaluator.plainModSwitchToNext(plainTextA)\n     * // or\n     * const plainDest = seal.PlainText()\n     * evaluator.plainModSwitchToNext(plainTextA, plainDest)\n     */\n    plainModSwitchToNext(\n      plain: PlainText,\n      destination?: PlainText\n    ): PlainText | void {\n      try {\n        if (destination) {\n          _instance.plainModSwitchToNext(plain.instance, destination.instance)\n          return\n        }\n        const temp = PlainText()\n        _instance.plainModSwitchToNext(plain.instance, temp.instance)\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Given an NTT transformed PlainText modulo q_1...q_k, this function switches\n     * the modulus down until the parameters reach the given parmsId and stores\n     * the result in the destination parameter.\n     *\n     * @function\n     * @name Evaluator#plainModSwitchTo\n     * @param {PlainText} plain PlainText to switch its modulus down\n     * @param {ParmsIdType} parmsId Target parmsId to switch to\n     * @param {PlainText} [destination] PlainText destination to store the switched result\n     * @returns {PlainText|void} PlainText containing the result or void if a destination was supplied\n     * @example\n     * const context = seal.Context(encParms, true)\n     * const plainTextA = seal.PlainText()\n     * // ... after encoding some data ...\n     * const parmsId = context.lastParmsId\n     * const resultCipher = evaluator.plainModSwitchTo(plainTextA, parmsId)\n     * // or\n     * const plainDest = seal.PlainText()\n     * evaluator.plainModSwitchTo(plainTextA, parmsId, plainDest)\n     */\n    plainModSwitchTo(\n      plain: PlainText,\n      parmsId: ParmsIdType,\n      destination?: PlainText\n    ): PlainText | void {\n      try {\n        if (destination) {\n          _instance.plainModSwitchTo(\n            plain.instance,\n            parmsId.instance,\n            destination.instance\n          )\n          return\n        }\n        const temp = PlainText()\n        _instance.plainModSwitchTo(\n          plain.instance,\n          parmsId.instance,\n          temp.instance\n        )\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Given a CipherText encrypted modulo q_1...q_k, this function switches the\n     * modulus down to q_1...q_{k-1}, scales the message down accordingly, and\n     * stores the result in the destination parameter. Dynamic memory allocations\n     * in the process are allocated from the memory pool pointed to by the given\n     * MemoryPoolHandle.\n     *\n     * @function\n     * @name Evaluator#rescaleToNext\n     * @param {CipherText} encrypted CipherText to rescale\n     * @param {CipherText} [destination] CipherText destination to store the rescaled result\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const cipherTextA = seal.CipherText()\n     * // ... after encrypting some data ...\n     * const resultCipher = evaluator.rescaleToNext(cipherTextA)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.rescaleToNext(cipherTextA, cipherDest)\n     */\n    rescaleToNext(\n      encrypted: CipherText,\n      destination?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.rescaleToNext(\n            encrypted.instance,\n            destination.instance,\n            pool\n          )\n          return\n        }\n        const temp = CipherText()\n        _instance.rescaleToNext(encrypted.instance, temp.instance, pool)\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Given a CipherText encrypted modulo q_1...q_k, this function switches the\n     * modulus down until the parameters reach the given parmsId, scales the message\n     * down accordingly, and stores the result in the destination parameter. Dynamic\n     * memory allocations in the process are allocated from the memory pool pointed\n     * to by the given MemoryPoolHandle.\n     *\n     * @function\n     * @name Evaluator#rescaleTo\n     * @param {CipherText} encrypted CipherText to rescale\n     * @param {ParmsIdType} parmsId Target parmsId to rescale to\n     * @param {CipherText} [destination] CipherText destination to store the rescaled result\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const context = seal.Context(encParms, true)\n     * const cipherTextA = seal.CipherText()\n     * // ... after encrypting some data ...\n     * const parmsId = context.lastParmsId\n     * const resultCipher = evaluator.rescaleTo(cipherTextA, parmsId)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.rescaleTo(cipherTextA, parmsId, cipherDest)\n     */\n    rescaleTo(\n      encrypted: CipherText,\n      parmsId: ParmsIdType,\n      destination?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.rescaleTo(\n            encrypted.instance,\n            parmsId.instance,\n            destination.instance,\n            pool\n          )\n          return\n        }\n        const temp = CipherText()\n        _instance.rescaleTo(\n          encrypted.instance,\n          parmsId.instance,\n          temp.instance,\n          pool\n        )\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Exponentiates a CipherText. This functions raises encrypted to a power and\n     * stores the result in the destination parameter. Dynamic memory allocations\n     * in the process are allocated from the memory pool pointed to by the given\n     * MemoryPoolHandle. The exponentiation is done in a depth-optimal order, and\n     * relinearization is performed automatically after every multiplication in\n     * the process. In relinearization the given relinearization keys are used.\n     *\n     * @function\n     * @name Evaluator#exponentiate\n     * @param {CipherText} encrypted CipherText to exponentiate\n     * @param {number} exponent Positive integer to exponentiate the CipherText\n     * @param {RelinKeys} relinKeys RelinKeys used to perform relinearization after each exponentiation\n     * @param {CipherText} [destination] CipherText destination to store the exponentiated result\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const relinKeys = keyGenerator.createRelinKeys()\n     * const cipherTextA = seal.CipherText()\n     * // ... after encrypting some data ...\n     * const resultCipher = evaluator.exponentiate(cipherTextA, 3, relinKeys)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.exponentiate(cipherTextA, 3, relinKeys, cipherDest)\n     */\n    exponentiate(\n      encrypted: CipherText,\n      exponent: number,\n      relinKeys: RelinKeys,\n      destination?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.exponentiate(\n            encrypted.instance,\n            exponent,\n            relinKeys.instance,\n            destination.instance,\n            pool\n          )\n          return\n        }\n        const temp = CipherText()\n        _instance.exponentiate(\n          encrypted.instance,\n          exponent,\n          relinKeys.instance,\n          temp.instance,\n          pool\n        )\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Adds a CipherText and a PlainText. This function adds a CipherText and\n     * a PlainText and stores the result in the destination parameter. The PlainText\n     * must be valid for the current encryption parameters.\n     *\n     * @function\n     * @name Evaluator#addPlain\n     * @param {CipherText} encrypted CipherText operand A\n     * @param {PlainText} plain PlainText operand B\n     * @param {CipherText} [destination] CipherText destination to store the sum\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const cipherTextA = seal.CipherText()\n     * const plainTextB = seal.PlainText()\n     * // ... after encrypting/encoding some data ...\n     * const resultCipher = evaluator.addPlain(cipherTextA, plainTextB)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.addPlain(cipherTextA, plainTextB, cipherDest)\n     */\n    addPlain(\n      encrypted: CipherText,\n      plain: PlainText,\n      destination?: CipherText\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.addPlain(\n            encrypted.instance,\n            plain.instance,\n            destination.instance\n          )\n          return\n        }\n        const temp = CipherText()\n        _instance.addPlain(encrypted.instance, plain.instance, temp.instance)\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Subtracts a PlainText from a CipherText. This function subtracts a PlainText\n     * from a CipherText and stores the result in the destination parameter. The\n     * PlainText must be valid for the current encryption parameters.\n     *\n     * @function\n     * @name Evaluator#subPlain\n     * @param {CipherText} encrypted CipherText operand A\n     * @param {PlainText} plain PlainText operand B\n     * @param {CipherText} [destination] CipherText destination to store the difference\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const cipherTextA = seal.CipherText()\n     * const plainTextB = seal.PlainText()\n     * // ... after encrypting/encoding some data ...\n     * const resultCipher = evaluator.subPlain(cipherTextA, plainTextB)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.subPlain(cipherTextA, plainTextB, cipherDest)\n     */\n    subPlain(\n      encrypted: CipherText,\n      plain: PlainText,\n      destination?: CipherText\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.subPlain(\n            encrypted.instance,\n            plain.instance,\n            destination.instance\n          )\n          return\n        }\n        const temp = CipherText()\n        _instance.subPlain(encrypted.instance, plain.instance, temp.instance)\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Multiplies a CipherText with a PlainText. This function multiplies\n     * a CipherText with a PlainText and stores the result in the destination\n     * parameter. The PlainText must be a valid for the current encryption parameters,\n     * and cannot be identially 0. Dynamic memory allocations in the process are\n     * allocated from the memory pool pointed to by the given MemoryPoolHandle.\n     *\n     * @function\n     * @name Evaluator#multiplyPlain\n     * @param {CipherText} encrypted CipherText operand A\n     * @param {PlainText} plain PlainText operand B\n     * @param {CipherText} [destination] CipherText destination to store the product\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText?} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const cipherTextA = seal.CipherText()\n     * const plainTextB = seal.PlainText()\n     * // ... after encrypting/encoding some data ...\n     * const resultCipher = evaluator.multiplyPlain(cipherTextA, plainTextB)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.multiplyPlain(cipherTextA, plainTextB, cipherDest)\n     */\n    multiplyPlain(\n      encrypted: CipherText,\n      plain: PlainText,\n      destination?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.multiplyPlain(\n            encrypted.instance,\n            plain.instance,\n            destination.instance,\n            pool\n          )\n          return\n        }\n        const temp = CipherText()\n        _instance.multiplyPlain(\n          encrypted.instance,\n          plain.instance,\n          temp.instance,\n          pool\n        )\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Transforms a PlainText to NTT domain. This functions applies the number\n     * Theoretic Transform to a PlainText by first embedding integers modulo the\n     * PlainText modulus to integers modulo the coefficient modulus and then\n     * performing David Harvey's NTT on the resulting polynomial. The transformation\n     * is done with respect to encryption parameters corresponding to a given\n     * parmsId. The result is stored in the destinationNtt parameter. For the\n     * operation to be valid, the PlainText must have degree less than PolyModulusDegree\n     * and each coefficient must be less than the PlainText modulus, i.e., the PlainText\n     * must be a valid PlainText under the current encryption parameters. Dynamic\n     * memory allocations in the process are allocated from the memory pool pointed\n     * to by the given MemoryPoolHandle.\n     *\n     * @function\n     * @name Evaluator#plainTransformToNtt\n     * @param {PlainText} plain PlainText to transform\n     * @param {ParmsIdType} parmsId target parmsId to perform NTT transformation\n     * @param {PlainText} [destinationNtt] PlainText destination to store the transformed result\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {PlainText|void} PlainText containing the result or void if a destination was supplied\n     * @example\n     * const context = seal.Context(encParms, true)\n     * const plainTextA = seal.PlainText()\n     * // ... after encoding some data ...\n     * const parmsId = context.lastParmsId\n     * const resultCipher = evaluator.plainTransformToNtt(plainTextA, parmsId)\n     * // or\n     * const plainDest = seal.PlainText()\n     * evaluator.plainTransformToNtt(plainTextA, parmsId, plainDest)\n     */\n    plainTransformToNtt(\n      plain: PlainText,\n      parmsId: ParmsIdType,\n      destinationNtt?: PlainText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): PlainText | void {\n      try {\n        if (destinationNtt) {\n          _instance.plainTransformToNtt(\n            plain.instance,\n            parmsId.instance,\n            destinationNtt.instance,\n            pool\n          )\n          return\n        }\n        const temp = PlainText()\n        _instance.plainTransformToNtt(\n          plain.instance,\n          parmsId.instance,\n          temp.instance,\n          pool\n        )\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Transforms a CipherText to NTT domain. This functions applies David Harvey's\n     * number Theoretic Transform separately to each polynomial of a CipherText.\n     * The result is stored in the destinationNtt parameter.\n     *\n     * @function\n     * @name Evaluator#cipherTransformToNtt\n     * @param {CipherText} encrypted CipherText to transform\n     * @param {CipherText} [destinationNtt] CipherText destination to store the transformed result\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const cipherTextA = seal.CipherText()\n     * // ... after encrypting some data ...\n     * const resultCipher = evaluator.cipherTransformToNtt(cipherTextA)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.cipherTransformToNtt(cipherTextA, cipherDest)\n     */\n    cipherTransformToNtt(\n      encrypted: CipherText,\n      destinationNtt?: CipherText\n    ): CipherText | void {\n      try {\n        if (destinationNtt) {\n          _instance.cipherTransformToNtt(\n            encrypted.instance,\n            destinationNtt.instance\n          )\n          return\n        }\n        const temp = CipherText()\n        _instance.cipherTransformToNtt(encrypted.instance, temp.instance)\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Transforms a CipherText back from NTT domain. This functions applies the\n     * inverse of David Harvey's number Theoretic Transform separately to each\n     * polynomial of a CipherText. The result is stored in the destination parameter.\n     *\n     * @function\n     * @name Evaluator#cipherTransformFromNtt\n     * @param {CipherText} encryptedNtt CipherText to transform\n     * @param {CipherText} [destination] CipherText destination to store the transformed result\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * // ... after cipherTransformToNtt ...\n     * const resultCipher = evaluator.cipherTransformFromNtt(cipherTextANtt)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.cipherTransformFromNtt(cipherTextANtt, cipherDest)\n     */\n    cipherTransformFromNtt(\n      encryptedNtt: CipherText,\n      destination?: CipherText\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.cipherTransformFromNtt(\n            encryptedNtt.instance,\n            destination.instance\n          )\n          return\n        }\n        const temp = CipherText()\n        _instance.cipherTransformFromNtt(encryptedNtt.instance, temp.instance)\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Applies a Galois automorphism to a CipherText and writes the result to the\n     * destination parameter. To evaluate the Galois automorphism, an appropriate\n     * set of Galois keys must also be provided. Dynamic memory allocations in\n     * the process are allocated from the memory pool pointed to by the given\n     * MemoryPoolHandle.\n     *\n     * The desired Galois automorphism is given as a Galois element, and must be\n     * an odd integer in the interval [1, M-1], where M = 2*N, and N = degree(poly_modulus).\n     * Used with batching, a Galois element 3^i % M corresponds to a cyclic row\n     * rotation i steps to the left, and a Galois element 3^(N/2-i) % M corresponds\n     * to a cyclic row rotation i steps to the right. The Galois element M-1 corresponds\n     * to a column rotation (row swap) in BFV, and complex conjugation in CKKS.\n     * In the polynomial view (not batching), a Galois automorphism by a Galois\n     * element p changes Enc(plain(x)) to Enc(plain(x^p)).\n     *\n     * @function\n     * @name Evaluator#applyGalois\n     * @param {CipherText} encrypted CipherText to apply the automorphism\n     * @param {number} galoisElt number representing the Galois element\n     * @param {GaloisKeys} galoisKeys GaloisKeys used to perform rotations\n     * @param {CipherText} [destination] CipherText destination to store the result\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * ...\n     * const evaluator = seal.Evaluator(context)\n     * const arr = Int32Array.from({ length: encoder.slotCount }, (_, i) => i)\n     * const plain = encoder.encode(arr)\n     * const cipher = encryptor.encrypt(plain)\n     * const cipherDest = seal.CipherText()\n     * const galElt = 2 * parms.polyModulusDegree - 1\n     * evaluator.applyGalois(cipher, galElt, galoisKeys, cipherDest)\n     */\n    applyGalois(\n      encrypted: CipherText,\n      galoisElt: number,\n      galoisKeys: GaloisKeys,\n      destination?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.applyGalois(\n            encrypted.instance,\n            galoisElt,\n            galoisKeys.instance,\n            destination.instance,\n            pool\n          )\n          return\n        }\n        const temp = CipherText()\n        _instance.applyGalois(\n          encrypted.instance,\n          galoisElt,\n          galoisKeys.instance,\n          temp.instance,\n          pool\n        )\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Rotates PlainText matrix rows cyclically. When batching is used with the\n     * BFV scheme, this function rotates the encrypted PlainText matrix rows\n     * cyclically to the left (steps > 0) or to the right (steps < 0) and writes\n     * the result to the destination parameter. Since the size of the batched\n     * matrix is 2-by-(N/2), where N is the degree of the polynomial modulus,\n     * the number of steps to rotate must have absolute value at most N/2-1. Dynamic\n     * memory allocations in the process are allocated from the memory pool pointed\n     * to by the given MemoryPoolHandle.\n     *\n     * @function\n     * @name Evaluator#rotateRows\n     * @param {CipherText} encrypted CipherText to rotate rows\n     * @param {number} steps Int representing steps to rotate (negative = right, positive = left)\n     * @param {GaloisKeys} galoisKeys GaloisKeys used to perform rotations\n     * @param {CipherText} [destination] CipherText destination to store the rotated result\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const galoisKeys = keyGenerator.createGaloisKeys()\n     * const cipherTextA = seal.CipherText()\n     * // ... after encrypting some data ...\n     * const resultCipher = evaluator.rotateRows(cipherTextA, 3, galoisKeys)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.rotateRows(cipherTextA, 3, galoisKeys, cipherDest)\n     */\n    rotateRows(\n      encrypted: CipherText,\n      steps: number,\n      galoisKeys: GaloisKeys,\n      destination?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.rotateRows(\n            encrypted.instance,\n            steps,\n            galoisKeys.instance,\n            destination.instance,\n            pool\n          )\n          return\n        }\n        const temp = CipherText()\n        _instance.rotateRows(\n          encrypted.instance,\n          steps,\n          galoisKeys.instance,\n          temp.instance,\n          pool\n        )\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Rotates PlainText matrix columns cyclically. When batching is used with\n     * the BFV scheme, this function rotates the encrypted PlainText matrix columns\n     * cyclically, and writes the result to the destination parameter. Since the\n     * size of the batched matrix is 2-by-(N/2), where N is the degree of the\n     * polynomial modulus, this means simply swapping the two rows. Dynamic memory\n     * allocations in the process are allocated from the memory pool pointed to\n     * by the given MemoryPoolHandle.\n     *\n     * @function\n     * @name Evaluator#rotateColumns\n     * @param {CipherText} encrypted CipherText to rotate columns\n     * @param {GaloisKeys} galoisKeys GaloisKeys used to perform rotations\n     * @param {CipherText} [destination] CipherText destination to store the rotated result\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const galoisKeys = keyGenerator.createGaloisKeys()\n     * const cipherTextA = seal.CipherText()\n     * // ... after encrypting some data ...\n     * const resultCipher = evaluator.rotateColumns(cipherTextA, galoisKeys)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.rotateColumns(cipherTextA, galoisKeys, cipherDest)\n     */\n    rotateColumns(\n      encrypted: CipherText,\n      galoisKeys: GaloisKeys,\n      destination?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.rotateColumns(\n            encrypted.instance,\n            galoisKeys.instance,\n            destination.instance,\n            pool\n          )\n          return\n        }\n        const temp = CipherText()\n        _instance.rotateColumns(\n          encrypted.instance,\n          galoisKeys.instance,\n          temp.instance,\n          pool\n        )\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Rotates PlainText vector cyclically. When using the CKKS scheme, this function\n     * rotates the encrypted PlainText vector cyclically to the left (steps > 0)\n     * or to the right (steps < 0) and writes the result to the destination parameter.\n     * Since the size of the batched matrix is 2-by-(N/2), where N is the degree\n     * of the polynomial modulus, the number of steps to rotate must have absolute\n     * value at most N/2-1. Dynamic memory allocations in the process are allocated\n     * from the memory pool pointed to by the given MemoryPoolHandle.\n     *\n     * @function\n     * @name Evaluator#rotateVector\n     * @param {CipherText} encrypted CipherText to rotate the entire vector\n     * @param {number} steps Int representing steps to rotate (negative = right, positive = left)\n     * @param {GaloisKeys} galoisKeys GaloisKeys used to perform rotations\n     * @param {CipherText} [destination] CipherText destination to store the rotated result\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const galoisKeys = keyGenerator.createGaloisKeys()\n     * const cipherTextA = seal.CipherText()\n     * // ... after encrypting some data ...\n     * const resultCipher = evaluator.rotateVector(cipherTextA, 3, galoisKeys)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.rotateVector(cipherTextA, 3, galoisKeys, cipherDest)\n     */\n    rotateVector(\n      encrypted: CipherText,\n      steps: number,\n      galoisKeys: GaloisKeys,\n      destination?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.rotateVector(\n            encrypted.instance,\n            steps,\n            galoisKeys.instance,\n            destination.instance,\n            pool\n          )\n          return\n        }\n        const temp = CipherText()\n        _instance.rotateVector(\n          encrypted.instance,\n          steps,\n          galoisKeys.instance,\n          temp.instance,\n          pool\n        )\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Complex conjugates PlainText slot values. When using the CKKS scheme, this\n     * function complex conjugates all values in the underlying PlainText, and\n     * writes the result to the destination parameter. Dynamic memory allocations\n     * in the process are allocated from the memory pool pointed to by the given\n     * MemoryPoolHandle.\n     *\n     * @function\n     * @name Evaluator#complexConjugate\n     * @param {CipherText} encrypted CipherText to complex conjugate\n     * @param {GaloisKeys} galoisKeys GaloisKeys used to perform rotations\n     * @param {CipherText} [destination] CipherText destination to store the conjugated result\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const galoisKeys = keyGenerator.createGaloisKeys()\n     * const cipherTextA = seal.CipherText()\n     * // ... after encrypting some data ...\n     * const resultCipher = evaluator.complexConjugate(cipherTextA, galoisKeys)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.complexConjugate(cipherTextA, galoisKeys, cipherDest)\n     */\n    complexConjugate(\n      encrypted: CipherText,\n      galoisKeys: GaloisKeys,\n      destination?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.complexConjugate(\n            encrypted.instance,\n            galoisKeys.instance,\n            destination.instance,\n            pool\n          )\n          return\n        }\n        const temp = CipherText()\n        _instance.complexConjugate(\n          encrypted.instance,\n          galoisKeys.instance,\n          temp.instance,\n          pool\n        )\n        return temp\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Sum all elements in the encrypted CipherText. The resulting CipherText contains the sum in every element.\n     *\n     * @function\n     * @name Evaluator#sumElements\n     * @param {CipherText} encrypted CipherText to sum elements\n     * @param {GaloisKeys} galoisKeys GaloisKeys used to perform rotations\n     * @param {SchemeType} scheme Scheme that was used for encryption\n     * @param {CipherText} [destination] CipherText destination to store the result\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const galoisKeys = keyGenerator.createGaloisKeys()\n     * const cipherTextA = seal.CipherText()\n     * // ... after encrypting some data ...\n     * const resultCipher = evaluator.sumElements(cipherTextA, galoisKeys, seal.SchemeTypes.BFV)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.sumElements(cipherTextA, galoisKeys, seal.SchemeTypes.BFV, cipherDest)\n     */\n    sumElements(\n      encrypted: CipherText,\n      galoisKeys: GaloisKeys,\n      scheme: SchemeType,\n      destination?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.sumElements(\n            encrypted.instance,\n            galoisKeys.instance,\n            scheme,\n            destination.instance,\n            pool\n          )\n          return\n        }\n\n        const newDest = CipherText()\n        _instance.sumElements(\n          encrypted.instance,\n          galoisKeys.instance,\n          scheme,\n          newDest.instance,\n          pool\n        )\n        return newDest\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Perform the dot product (A.B) of two CipherTexts The resulting CipherText contains the dot product in every\n     * element.\n     *\n     * @function\n     * @name Evaluator#dotProduct\n     * @param {CipherText} a CipherText operand A\n     * @param {CipherText} b CipherText operand B\n     * @param {RelinKeys} relinKeys RelinKeys used to perform relinearization after multiplication\n     * @param {GaloisKeys} galoisKeys GaloisKeys used to perform rotations\n     * @param {SchemeType} scheme Scheme that was used for encryption\n     * @param {CipherText} [destination] CipherText destination to store the result\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const relinKeys = keyGenerator.createRelinKeys()\n     * const galoisKeys = keyGenerator.createGaloisKeys()\n     * const cipherTextA = seal.CipherText()\n     * const cipherTextB = seal.CipherText()\n     * // ... after encrypting some data ...\n     * const resultCipher = evaluator.dotProduct(cipherTextA, cipherTextB, relinKeys, galoisKeys, seal.SchemeTypes.BFV)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.dotProduct(cipherTextA, cipherTextB, relinKeys, galoisKeys, seal.SchemeTypes.BFV, cipherDest)\n     */\n    dotProduct(\n      a: CipherText,\n      b: CipherText,\n      relinKeys: RelinKeys,\n      galoisKeys: GaloisKeys,\n      scheme: SchemeType,\n      destination?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.multiply(a.instance, b.instance, destination.instance, pool)\n          _instance.relinearize(\n            destination.instance,\n            relinKeys.instance,\n            destination.instance,\n            pool\n          )\n          _instance.sumElements(\n            destination.instance,\n            galoisKeys.instance,\n            scheme,\n            destination.instance,\n            pool\n          )\n          return\n        }\n\n        const newDest = CipherText()\n        _instance.multiply(a.instance, b.instance, newDest.instance, pool)\n        _instance.relinearize(\n          newDest.instance,\n          relinKeys.instance,\n          newDest.instance,\n          pool\n        )\n        _instance.sumElements(\n          newDest.instance,\n          galoisKeys.instance,\n          scheme,\n          newDest.instance,\n          pool\n        )\n        return newDest\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Perform the dot product (A.B) of CipherText (A) and PlainText (B). The resulting CipherText contains the dot\n     * product in every element.\n     *\n     * @function\n     * @name Evaluator#dotProductPlain\n     * @param {CipherText} a CipherText operand A\n     * @param {PlainText} b PlainText operand B\n     * @param {GaloisKeys} galoisKeys GaloisKeys used to perform rotations\n     * @param {SchemeType} scheme Scheme that was used for encryption\n     * @param {CipherText} [destination] CipherText destination to store the result\n     * @param {MemoryPoolHandle} [pool={@link MemoryPoolHandle.global}] MemoryPool to use\n     * @returns {CipherText|void} CipherText containing the result or void if a destination was supplied\n     * @example\n     * const galoisKeys = keyGenerator.createGaloisKeys()\n     * const cipherTextA = seal.CipherText()\n     * const plainTextB = seal.PlainText()\n     * // ... after encoding / encrypting some data ...\n     * const resultCipher = evaluator.dotProductPlain(cipherTextA, plainTextB, galoisKeys, seal.SchemeTypes.BFV)\n     * // or\n     * const cipherDest = seal.CipherText()\n     * evaluator.dotProductPlain(cipherTextA, plainTextB, galoisKeys, seal.SchemeTypes.BFV, cipherDest)\n     */\n    dotProductPlain(\n      a: CipherText,\n      b: PlainText,\n      galoisKeys: GaloisKeys,\n      scheme: SchemeType,\n      destination?: CipherText,\n      pool: MemoryPoolHandle = MemoryPoolHandle.global\n    ): CipherText | void {\n      try {\n        if (destination) {\n          _instance.multiplyPlain(\n            a.instance,\n            b.instance,\n            destination.instance,\n            pool\n          )\n          _instance.sumElements(\n            destination.instance,\n            galoisKeys.instance,\n            scheme,\n            destination.instance,\n            pool\n          )\n          return\n        }\n\n        const newDest = CipherText()\n        _instance.multiplyPlain(a.instance, b.instance, newDest.instance, pool)\n        _instance.sumElements(\n          newDest.instance,\n          galoisKeys.instance,\n          scheme,\n          newDest.instance,\n          pool\n        )\n        return newDest\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    }\n  }\n}\n\nexport const EvaluatorInit = ({\n  loader\n}: LoaderOptions): EvaluatorDependencies => {\n  const library: Library = loader.library\n  return EvaluatorConstructor(library)\n}\n","import { LoaderOptions, Library } from './seal'\n\nexport type ExceptionDependencies = {\n  (): ExceptionConstructorOptions\n}\n\nexport type ExceptionConstructorOptions = {\n  (): Exception\n}\n\nexport type Exception = {\n  readonly safe: (error: number | Error | string) => Error\n}\n\nconst ExceptionConstructor = (\n  library: Library\n): ExceptionDependencies => (): ExceptionConstructorOptions => (): Exception => {\n  // Static methods\n  const _getException = library.getException\n\n  /**\n   * @implements Exception\n   */\n\n  /**\n   * @interface Exception\n   */\n  return {\n    /**\n     * Takes a caught exception in SEAL library and gets a safe error string\n     *\n     * @function\n     * @name Exception.safe\n     * @param {(number|Error|string)} error Unsafe error to normalize\n     * @returns {Error}\n     */\n    safe(error: number | Error | string): Error {\n      if (typeof error === 'number') {\n        return new Error(_getException(error))\n      }\n\n      if (error instanceof Error) {\n        return error\n      }\n      return new Error(error || 'Unknown Error!')\n    }\n  }\n}\n\nexport const ExceptionInit = ({\n  loader\n}: LoaderOptions): ExceptionDependencies => {\n  const library: Library = loader.library\n  return ExceptionConstructor(library)\n}\n","import { LoaderOptions, Library, Instance } from './seal'\nimport { Exception } from './exception'\nimport { VectorConstructorOptions } from './vector'\nimport { ComprModeType } from './compr-mode-type'\nimport { Context } from './context'\n\nexport type GaloisKeysDependencyOptions = {\n  readonly Exception: Exception\n  readonly ComprModeType: ComprModeType\n  readonly Vector: VectorConstructorOptions\n}\n\nexport type GaloisKeysDependencies = {\n  ({\n    Exception,\n    ComprModeType,\n    Vector\n  }: GaloisKeysDependencyOptions): GaloisKeysConstructorOptions\n}\n\nexport type GaloisKeysConstructorOptions = {\n  (): GaloisKeys\n}\n\nexport type GaloisKeys = {\n  readonly instance: Instance\n  readonly inject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly size: number\n  readonly getIndex: (galoisElt: number) => number\n  readonly hasKey: (galoisElt: number) => boolean\n  readonly save: (compression?: ComprModeType) => string\n  readonly saveArray: (compression?: ComprModeType) => Uint8Array\n  readonly load: (context: Context, encoded: string) => void\n  readonly loadArray: (context: Context, array: Uint8Array) => void\n  readonly copy: (key: GaloisKeys) => void\n  readonly clone: () => GaloisKeys\n  readonly move: (key: GaloisKeys) => void\n}\n\nconst GaloisKeysConstructor = (library: Library): GaloisKeysDependencies => ({\n  Exception,\n  ComprModeType,\n  Vector\n}: GaloisKeysDependencyOptions): GaloisKeysConstructorOptions => (): GaloisKeys => {\n  const Constructor = library.GaloisKeys\n  let _instance = new Constructor()\n\n  /**\n   * @implements GaloisKeys\n   */\n\n  /**\n   * @interface GaloisKeys\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name GaloisKeys#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance\n     *\n     * @private\n     * @function\n     * @name GaloisKeys#inject\n     * @param {Instance} instance WASM instance\n     */\n    inject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = new Constructor(instance)\n      instance.delete()\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name GaloisKeys#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * Returns the current number of keyswitching keys. Only keys that are\n     * non-empty are counted.\n     *\n     * @readonly\n     * @name GaloisKeys#size\n     * @type {number}\n     */\n    get size() {\n      return _instance.size()\n    },\n\n    /**\n     * Returns the index of a Galois key in the backing KSwitchKeys instance that\n     * corresponds to the given Galois element, assuming that it exists in the\n     * backing KSwitchKeys.\n     *\n     * @function\n     * @name GaloisKeys#getIndex\n     * @param {number} galoisElt The Galois element\n     * @returns {number} The index of the galois element\n     */\n    getIndex(galoisElt: number): number {\n      try {\n        return _instance.getIndex(galoisElt)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Returns whether a Galois key corresponding to a given Galois element exists.\n     *\n     * @function\n     * @name GaloisKeys#hasKey\n     * @param {number} galoisElt The Galois element\n     * @returns {boolean} True if the key exists\n     */\n    hasKey(galoisElt: number): boolean {\n      try {\n        return _instance.hasKey(galoisElt)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n    /**\n     * Save the Encryption Parameters to a base64 string\n     *\n     * @function\n     * @name GaloisKeys#save\n     * @param {ComprModeType} [compression={@link ComprModeType.zstd}] The compression mode to use\n     * @returns {string} Base64 encoded string\n     */\n    save(compression: ComprModeType = ComprModeType.zstd): string {\n      try {\n        return _instance.saveToString(compression)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Save the GaloisKeys as a binary Uint8Array\n     *\n     * @function\n     * @name GaloisKeys#saveArray\n     * @param {ComprModeType} [compression={@link ComprModeType.zstd}] The compression mode to use\n     * @returns {Uint8Array} A byte array containing the GaloisKeys in binary form\n     */\n    saveArray(compression: ComprModeType = ComprModeType.zstd): Uint8Array {\n      const tempVect = Vector()\n      const instance = _instance.saveToArray(compression)\n      tempVect.unsafeInject(instance)\n      tempVect.setType('Uint8Array')\n      const tempArr = tempVect.toArray() as Uint8Array\n      tempVect.delete()\n      return tempArr\n    },\n\n    /**\n     * Load a GaloisKeys from a base64 string\n     *\n     * @function\n     * @name GaloisKeys#load\n     * @param {Context} context Encryption context to enforce\n     * @param {string} encoded Base64 encoded string\n     */\n    load(context: Context, encoded: string) {\n      try {\n        _instance.loadFromString(context.instance, encoded)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Load a GaloisKeys from an Uint8Array holding binary data\n     *\n     * @function\n     * @name GaloisKeys#loadArray\n     * @param {Context} context Encryption context to enforce\n     * @param {Uint8Array} array TypedArray containing binary data\n     */\n    loadArray(context: Context, array: Uint8Array) {\n      try {\n        _instance.loadFromArray(context.instance, array)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Copy an existing GaloisKeys and overwrite this instance\n     *\n     * @function\n     * @name GaloisKeys#copy\n     * @param {GaloisKeys} key GaloisKeys to copy\n     * @example\n     * const keyA = keyGenerator.createGaloisKeys()\n     * const keyB = seal.GaloisKeys()\n     * keyB.copy(keyA)\n     * // keyB holds a copy of keyA\n     */\n    copy(key: GaloisKeys) {\n      try {\n        _instance.copy(key.instance)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Clone and return a new instance of this GaloisKeys\n     *\n     * @function\n     * @name GaloisKeys#clone\n     * @returns {GaloisKeys}\n     * @example\n     * const keyA = keyGenerator.createGaloisKeys()\n     * const keyB = keyA.clone()\n     * // keyB holds a copy of keyA\n     */\n    clone(): GaloisKeys {\n      try {\n        const clonedInstance = _instance.clone()\n        const key = GaloisKeysConstructor(library)({\n          Exception,\n          ComprModeType,\n          Vector\n        })()\n        key.inject(clonedInstance)\n        return key\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Move a GaloisKeys into this one and delete the old reference\n     *\n     * @function\n     * @name GaloisKeys#move\n     * @param {GaloisKeys} key GaloisKeys to move\n     * @example\n     * const keyA = keyGenerator.createGaloisKeys()\n     * const keyB = seal.GaloisKeys()\n     * keyB.move(keyA)\n     * // keyB holds a the instance of keyA.\n     * // keyA no longer holds an instance\n     */\n    move(key: GaloisKeys) {\n      try {\n        _instance.move(key.instance)\n        // TODO: find optimization\n        // This method results in a copy instead of a real move.\n        // Therefore, we need to delete the old instance.\n        key.delete()\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    }\n  }\n}\n\nexport const GaloisKeysInit = ({\n  loader\n}: LoaderOptions): GaloisKeysDependencies => {\n  const library: Library = loader.library\n  return GaloisKeysConstructor(library)\n}\n","import { LoaderOptions, Library, Instance } from './seal'\nimport { Exception } from './exception'\nimport { Context } from './context'\nimport { SecretKey, SecretKeyConstructorOptions } from './secret-key'\nimport { RelinKeys, RelinKeysConstructorOptions } from './relin-keys'\nimport { Serializable, SerializableConstructorOptions } from './serializable'\nimport { PublicKey, PublicKeyConstructorOptions } from './public-key'\nimport { GaloisKeys, GaloisKeysConstructorOptions } from './galois-keys'\n\nexport type KeyGeneratorDependencyOptions = {\n  readonly Exception: Exception\n  readonly PublicKey: PublicKeyConstructorOptions\n  readonly SecretKey: SecretKeyConstructorOptions\n  readonly RelinKeys: RelinKeysConstructorOptions\n  readonly GaloisKeys: GaloisKeysConstructorOptions\n  readonly Serializable: SerializableConstructorOptions\n}\n\nexport type KeyGeneratorDependencies = {\n  ({\n    Exception,\n    PublicKey,\n    SecretKey,\n    RelinKeys,\n    GaloisKeys,\n    Serializable\n  }: KeyGeneratorDependencyOptions): KeyGeneratorConstructorOptions\n}\n\nexport type KeyGeneratorConstructorOptions = {\n  (context: Context, secretKey?: SecretKey): KeyGenerator\n}\n\nexport type KeyGenerator = {\n  readonly instance: Instance\n  readonly unsafeInject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly secretKey: () => SecretKey\n  readonly createPublicKeySerializable: () => Serializable\n  readonly createPublicKey: () => PublicKey\n  readonly createRelinKeysSerializable: () => Serializable\n  readonly createRelinKeys: () => RelinKeys\n  readonly createGaloisKeysSerializable: (steps?: Int32Array) => Serializable\n  readonly createGaloisKeys: (steps?: Int32Array) => GaloisKeys\n}\n\nconst KeyGeneratorConstructor = (\n  library: Library\n): KeyGeneratorDependencies => ({\n  Exception,\n  PublicKey,\n  SecretKey,\n  RelinKeys,\n  GaloisKeys,\n  Serializable\n}: KeyGeneratorDependencyOptions): KeyGeneratorConstructorOptions => (\n  context,\n  secretKey\n): KeyGenerator => {\n  const Constructor = library.KeyGenerator\n  let _instance = constructInstance(context, secretKey)\n\n  function constructInstance(context: Context, secretKey?: SecretKey) {\n    try {\n      if (secretKey) {\n        return new Constructor(context.instance, secretKey.instance)\n      }\n      return new Constructor(context.instance)\n    } catch (e) {\n      throw Exception.safe(e)\n    }\n  }\n  /**\n   * @implements KeyGenerator\n   */\n\n  /**\n   * @interface KeyGenerator\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name KeyGenerator#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance. No type checking is performed.\n     *\n     * @private\n     * @function\n     * @name KeyGenerator#unsafeInject\n     * @param {Instance} instance WASM instance\n     */\n    unsafeInject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = instance\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name KeyGenerator#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * Return the generated SecretKey\n     *\n     * @function\n     * @name KeyGenerator#secretKey\n     * @returns {SecretKey} The secret key that was generated upon instantiation of this KeyGenerator\n     */\n    secretKey(): SecretKey {\n      try {\n        const key = SecretKey()\n        const instance = _instance.secretKey()\n        key.inject(instance)\n        return key\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Create a new PublicKey instance\n     *\n     * @function\n     * @name KeyGenerator#createPublicKey\n     * @returns {PublicKey} A new PublicKey instance\n     */\n    createPublicKey(): PublicKey {\n      try {\n        const key = PublicKey()\n        _instance.createPublicKey(key.instance)\n        return key\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Create a new, Serializable PublicKey instance\n     *\n     * @function\n     * @name KeyGenerator#createPublicKeySerializable\n     * @returns {Serializable<PublicKey>} A new, serializable, PublicKey instance\n     */\n    createPublicKeySerializable(): Serializable {\n      try {\n        const serialized = Serializable()\n        const instance = _instance.createPublicKeySerializable()\n        serialized.unsafeInject(instance)\n        return serialized\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Generates and returns relinearization keys. This function returns\n     * relinearization keys in a fully expanded form and is meant to be used\n     * primarily for demo, testing, and debugging purposes.\n     *\n     * @function\n     * @name KeyGenerator#createRelinKeys\n     * @returns {RelinKeys} New RelinKeys from the KeyGenerator's internal secret key\n     */\n    createRelinKeys(): RelinKeys {\n      try {\n        const keys = RelinKeys()\n        _instance.createRelinKeys(keys.instance)\n        return keys\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Generates and returns relinearization keys as a serializable object.\n     *\n     * Half of the key data is pseudo-randomly generated from a seed to reduce\n     * the object size. The resulting serializable object cannot be used\n     * directly and is meant to be serialized for the size reduction to have an\n     * impact.\n     *\n     *\n     * @function\n     * @name KeyGenerator#createRelinKeysSerializable\n     * @returns {Serializable<RelinKeys>} New, serializable RelinKeys from the KeyGenerator's internal secret key\n     */\n    createRelinKeysSerializable(): Serializable {\n      try {\n        const serialized = Serializable()\n        const instance = _instance.createRelinKeysSerializable()\n        serialized.unsafeInject(instance)\n        return serialized\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Generates and returns Galois keys. This function returns Galois keys in\n     * a fully expanded form and is meant to be used primarily for demo, testing,\n     * and debugging purposes. The user can optionally give an input a vector of desired\n     * Galois rotation step counts, where negative step counts correspond to\n     * rotations to the right and positive step counts correspond to rotations to\n     * the left. A step count of zero can be used to indicate a column rotation\n     * in the BFV scheme complex conjugation in the CKKS scheme.\n     *\n     * @function\n     * @name KeyGenerator#createGaloisKeys\n     * @param {Int32Array} [steps=Int32Array.from([])] Specific Galois Elements to generate\n     * @returns {GaloisKeys} New GaloisKeys from the KeyGenerator's internal secret key\n     */\n    createGaloisKeys(steps: Int32Array = Int32Array.from([])): GaloisKeys {\n      try {\n        const keys = GaloisKeys()\n        _instance.createGaloisKeys(steps, keys.instance)\n        return keys\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Generates and returns Galois keys as a serializable object. This function\n     * creates specific Galois keys that can be used to apply specific Galois\n     * automorphisms on encrypted data. The user can optionally give an input a vector\n     * of desired Galois rotation step counts, where negative step counts\n     * correspond to rotations to the right and positive step counts correspond\n     * to rotations to the left. A step count of zero can be used to indicate\n     * a column rotation in the BFV scheme complex conjugation in the CKKS scheme.\n     * Half of the key data is pseudo-randomly generated from a seed to reduce\n     * the object size. The resulting serializable object cannot be used\n     * directly and is meant to be serialized for the size reduction to have an\n     * impact.\n     *\n     * @function\n     * @name KeyGenerator#createGaloisKeysSerializable\n     * @param {Int32Array} [steps=Int32Array.from([])] Specific Galois Elements to generate\n     * @returns {Serializable<GaloisKeys>} Base64 encoded string\n     */\n    createGaloisKeysSerializable(\n      steps: Int32Array = Int32Array.from([])\n    ): Serializable {\n      try {\n        const serialized = Serializable()\n        const instance = _instance.createGaloisKeysSerializable(steps)\n        serialized.unsafeInject(instance)\n        return serialized\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    }\n  }\n}\n\nexport const KeyGeneratorInit = ({\n  loader\n}: LoaderOptions): KeyGeneratorDependencies => {\n  const library: Library = loader.library\n  return KeyGeneratorConstructor(library)\n}\n","import { LoaderOptions, Library } from './seal'\n\nexport type MemoryPoolHandleDependencies = {\n  (): MemoryPoolHandleConstructorOptions\n}\n\nexport type MemoryPoolHandleConstructorOptions = {\n  (): MemoryPoolHandle\n}\n\nexport type MemoryPoolHandle = {\n  readonly global: any\n  readonly threadLocal: any\n}\n\nconst MemoryPoolHandleConstructor = (\n  library: Library\n): MemoryPoolHandleDependencies => (): MemoryPoolHandleConstructorOptions => (): MemoryPoolHandle => {\n  // Static methods\n  const _global = library.MemoryPoolHandle.MemoryPoolHandleGlobal\n  const _threadLocal = library.MemoryPoolHandle.MemoryPoolHandleThreadLocal\n\n  /**\n   * @implements MemoryPoolHandle\n   */\n\n  /**\n   * @interface MemoryPoolHandle\n   */\n  return {\n    /**\n     * The MemoryPoolHandle pointing to the global memory pool.\n     *\n     * @readonly\n     * @name MemoryPoolHandle.global\n     * @type {MemoryPoolHandle.global}\n     */\n    get global() {\n      /**\n       * @typedef {MemoryPoolHandle.global} MemoryPoolHandle.global\n       */\n      return _global()\n    },\n\n    /**\n     * The MemoryPoolHandle pointing to the thread-local memory pool.\n     *\n     * @readonly\n     * @name MemoryPoolHandle.threadLocal\n     * @type {MemoryPoolHandle.threadLocal}\n     */\n    get threadLocal() {\n      /**\n       * @typedef {MemoryPoolHandle.threadLocal} MemoryPoolHandle.threadLocal\n       */\n      return _threadLocal()\n    }\n  }\n}\n\nexport const MemoryPoolHandleInit = ({\n  loader\n}: LoaderOptions): MemoryPoolHandleDependencies => {\n  const library: Library = loader.library\n  return MemoryPoolHandleConstructor(library)\n}\n","import { LoaderOptions, Library, Instance } from './seal'\nimport { Exception } from './exception'\nimport { VectorConstructorOptions } from './vector'\nimport { ComprModeType } from './compr-mode-type'\n\nexport type ModulusDependencyOptions = {\n  readonly Exception: Exception\n  readonly ComprModeType: ComprModeType\n  readonly Vector: VectorConstructorOptions\n}\n\nexport type ModulusDependencies = {\n  ({\n    Exception,\n    ComprModeType,\n    Vector\n  }: ModulusDependencyOptions): ModulusConstructorOptions\n}\n\nexport type ModulusConstructorOptions = {\n  (value: BigInt): Modulus\n}\n\nexport type Modulus = {\n  readonly instance: Instance\n  readonly inject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly setValue: (value: BigInt) => void\n  readonly value: BigInt\n  readonly bitCount: number\n  readonly isZero: boolean\n  readonly isPrime: boolean\n  readonly save: (compression?: ComprModeType) => string\n  readonly saveArray: (compression?: ComprModeType) => Uint8Array\n  readonly load: (encoded: string) => void\n  readonly loadArray: (array: Uint8Array) => void\n}\n\nconst ModulusConstructor = (library: Library): ModulusDependencies => ({\n  Exception,\n  ComprModeType,\n  Vector\n}: ModulusDependencyOptions): ModulusConstructorOptions => (\n  value: BigInt\n): Modulus => {\n  // Static methods\n  const Constructor = library.Modulus\n\n  let _instance = createModulus(value)\n\n  function createModulus(value: BigInt) {\n    try {\n      const inst = new Constructor()\n      inst.setValue(value.toString())\n      return inst\n    } catch (e) {\n      throw Exception.safe(e)\n    }\n  }\n\n  /**\n   * @implements Modulus\n   */\n\n  /**\n   * @interface Modulus\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name Modulus#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance\n     *\n     * @private\n     * @function\n     * @name Modulus#inject\n     * @param {Instance} instance WASM instance\n     */\n    inject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = new Constructor(instance)\n      instance.delete()\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name Modulus#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * Loads a Modulus from a string representing an uint64 value.\n     *\n     * @function\n     * @name Modulus#setValue\n     * @param {BigInt} value BigInt value to set\n     */\n    setValue(value: BigInt) {\n      try {\n        _instance.setValue(value.toString())\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * The value of the current Modulus as a BigInt.\n     *\n     * @readonly\n     * @name Modulus#value\n     * @type {BigInt}\n     */\n    get value() {\n      // eslint-disable-next-line no-undef\n      return BigInt(_instance.value())\n    },\n\n    /**\n     * The significant bit count of the value of the current Modulus.\n     *\n     * @readonly\n     * @name Modulus#bitCount\n     * @type {number}\n     */\n    get bitCount() {\n      return _instance.bitCount()\n    },\n\n    /**\n     * Whether the value of the current Modulus is zero.\n     *\n     * @readonly\n     * @name Modulus#isZero\n     * @type {boolean}\n     */\n    get isZero() {\n      return _instance.isZero()\n    },\n\n    /**\n     * Whether the value of the current Modulus is a prime number.\n     *\n     * @readonly\n     * @name Modulus#isPrime\n     * @type {boolean}\n     */\n    get isPrime() {\n      return _instance.isPrime()\n    },\n\n    /**\n     * Save the Modulus as a base64 string\n     *\n     * @function\n     * @name Modulus#save\n     * @param {ComprModeType} [compression={@link ComprModeType.zstd}] The compression mode to use\n     * @returns {string} Base64 encoded string\n     */\n    save(compression: ComprModeType = ComprModeType.zstd): string {\n      return _instance.saveToString(compression)\n    },\n\n    /**\n     * Save the Modulus as a binary Uint8Array\n     *\n     * @function\n     * @name Modulus#saveArray\n     * @param {ComprModeType} [compression={@link ComprModeType.zstd}] The compression mode to use\n     * @returns {Uint8Array} A byte array containing the Modulus in binary form\n     */\n    saveArray(compression: ComprModeType = ComprModeType.zstd): Uint8Array {\n      const tempVect = Vector()\n      const instance = _instance.saveToArray(compression)\n      tempVect.unsafeInject(instance)\n      tempVect.setType('Uint8Array')\n      const tempArr = tempVect.toArray() as Uint8Array\n      tempVect.delete()\n      return tempArr\n    },\n\n    /**\n     * Load a Modulus from a base64 string\n     *\n     * @function\n     * @name SecretKey#load\n     * @param {string} encoded Base64 encoded string\n     */\n    load(encoded: string) {\n      try {\n        _instance.loadFromString(encoded)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Load a Modulus from an Uint8Array holding binary data\n     *\n     * @function\n     * @name SecretKey#loadArray\n     * @param {Uint8Array} array TypedArray containing binary data\n     */\n    loadArray(array: Uint8Array) {\n      try {\n        _instance.loadFromArray(array)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    }\n  }\n}\n\nexport const ModulusInit = ({ loader }: LoaderOptions): ModulusDependencies => {\n  const library: Library = loader.library\n  return ModulusConstructor(library)\n}\n","import { LoaderOptions, Instance, Library } from './seal'\nimport { Exception } from './exception'\n\nexport type ParmsIdTypeDependencyOptions = {\n  readonly Exception: Exception\n}\n\nexport type ParmsIdTypeDependencies = {\n  ({ Exception }: ParmsIdTypeDependencyOptions): ParmsIdTypeConstructorOptions\n}\n\nexport type ParmsIdTypeConstructorOptions = {\n  (): ParmsIdType\n}\n\nexport type ParmsIdType = {\n  readonly instance: Instance\n  readonly inject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly values: BigUint64Array\n}\n\nconst ParmsIdTypeConstructor = (library: Library): ParmsIdTypeDependencies => ({\n  Exception\n}: ParmsIdTypeDependencyOptions): ParmsIdTypeConstructorOptions => (): ParmsIdType => {\n  const Constructor = library.ParmsIdType\n\n  let _instance: Instance\n\n  /**\n   * @implements ParmsIdType\n   */\n\n  /**\n   * @interface ParmsIdType\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name ParmsIdType#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance\n     *\n     * @private\n     * @function\n     * @name ParmsIdType#inject\n     * @param {Instance} instance WASM instance\n     */\n    inject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = new Constructor(instance)\n      instance.delete()\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name ParmsIdType#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * The values of the current ParmsIdType as an Array of BigInts.\n     *\n     * @readonly\n     * @name ParmsIdType#values\n     * @type {BigUint64Array}\n     */\n    get values() {\n      try {\n        const instance = _instance.values()\n        return BigUint64Array.from(instance)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    }\n  }\n}\n\nexport const ParmsIdTypeInit = ({\n  loader\n}: LoaderOptions): ParmsIdTypeDependencies => {\n  const library: Library = loader.library\n  return ParmsIdTypeConstructor(library)\n}\n","import { ComprModeType } from './compr-mode-type'\nimport { Context } from './context'\nimport { LoaderOptions, Library, Instance } from './seal'\nimport { Exception } from './exception'\nimport { MemoryPoolHandle } from './memory-pool-handle'\nimport { ParmsIdType, ParmsIdTypeConstructorOptions } from './parms-id-type'\nimport { VectorConstructorOptions } from './vector'\nimport { INVALID_PLAIN_CONSRUCTOR_OPTIONS } from './constants'\nexport type PlainTextDependencyOptions = {\n  readonly Exception: Exception\n  readonly ComprModeType: ComprModeType\n  readonly ParmsIdType: ParmsIdTypeConstructorOptions\n  readonly MemoryPoolHandle: MemoryPoolHandle\n  readonly Vector: VectorConstructorOptions\n}\n\nexport type PlainTextDependencies = {\n  ({\n    Exception,\n    ComprModeType,\n    ParmsIdType,\n    MemoryPoolHandle,\n    Vector\n  }: PlainTextDependencyOptions): PlainTextConstructorOptions\n}\n\nexport type PlainTextConstructorOptions = {\n  ({\n    capacity,\n    coeffCount,\n    pool\n  }?: {\n    capacity?: number\n    coeffCount?: number\n    pool?: MemoryPoolHandle\n  }): PlainText\n}\n\nexport type PlainText = {\n  readonly instance: Instance\n  readonly unsafeInject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly reserve: (capacity: number) => void\n  readonly shrinkToFit: () => void\n  readonly release: () => void\n  readonly resize: (coeffCount: number) => void\n  readonly setZero: () => void\n  readonly isZero: boolean\n  readonly capacity: number\n  readonly coeffCount: number\n  readonly significantCoeffCount: number\n  readonly nonzeroCoeffCount: number\n  readonly toPolynomial: () => string\n  readonly isNttForm: boolean\n  readonly parmsId: ParmsIdType\n  readonly scale: number\n  readonly setScale: (scale: number) => void\n  readonly pool: MemoryPoolHandle\n  readonly save: (compression?: ComprModeType) => string\n  readonly saveArray: (compression?: ComprModeType) => Uint8Array\n  readonly load: (context: Context, encoded: string) => void\n  readonly loadArray: (context: Context, array: Uint8Array) => void\n  readonly copy: (plain: PlainText) => void\n  readonly clone: () => PlainText\n  readonly move: (plain: PlainText) => void\n}\n\nconst PlainTextConstructor = (library: Library): PlainTextDependencies => ({\n  Exception,\n  ComprModeType,\n  ParmsIdType,\n  MemoryPoolHandle,\n  Vector\n}: PlainTextDependencyOptions): PlainTextConstructorOptions => ({\n  capacity,\n  coeffCount,\n  pool = MemoryPoolHandle.global\n} = {}): PlainText => {\n  // Static methods\n  const Constructor = library.Plaintext\n\n  let _instance = construct({\n    capacity,\n    coeffCount,\n    pool\n  })\n\n  function construct({\n    capacity,\n    coeffCount,\n    pool = MemoryPoolHandle.global\n  }: {\n    capacity?: number\n    coeffCount?: number\n    pool?: MemoryPoolHandle\n  }) {\n    try {\n      if (capacity === undefined && coeffCount === undefined) {\n        return new Constructor(pool)\n      } else if (capacity === undefined && coeffCount !== undefined) {\n        return new Constructor(coeffCount, pool)\n      } else if (capacity !== undefined && coeffCount !== undefined) {\n        return new Constructor(capacity, coeffCount, pool)\n      } else {\n        throw new Error(INVALID_PLAIN_CONSRUCTOR_OPTIONS)\n      }\n    } catch (e) {\n      throw Exception.safe(e)\n    }\n  }\n  /**\n   * @implements PlainText\n   */\n\n  /**\n   * @interface PlainText\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name PlainText#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance. No type checking is performed.\n     *\n     * @private\n     * @function\n     * @name PlainText#unsafeInject\n     * @param {Instance} instance WASM instance\n     */\n    unsafeInject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = instance\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name PlainText#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * Allocates enough memory to accommodate the backing array of a plaintext\n     * with given capacity.\n     *\n     * @function\n     * @name PlainText#reserve\n     * @param {number} capacity The capacity to reserve\n     */\n    reserve(capacity: number) {\n      try {\n        return _instance.reserve(capacity)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Allocates enough memory to accommodate the backing array of the current\n     * PlainText and copies it over to the new location. This function is meant\n     * to reduce the memory use of the PlainText to smallest possible and can be\n     * particularly important after modulus switching.\n     *\n     * @function\n     * @name PlainText#shrinkToFit\n     */\n    shrinkToFit() {\n      _instance.shrinkToFit()\n    },\n\n    /**\n     * Resets the PlainText. This function releases any memory allocated by the\n     * PlainText, returning it to the memory pool.\n     *\n     * @function\n     * @name PlainText#release\n     */\n    release() {\n      _instance.release()\n    },\n\n    /**\n     * Resizes the PlainText to have a given coefficient count. The PlainText\n     * is automatically reallocated if the new coefficient count does not fit in\n     * the current capacity.\n     *\n     * @function\n     * @name PlainText#resize\n     * @param {number} coeffCount The number of coefficients in the plaintext polynomial\n     */\n    resize(coeffCount: number) {\n      try {\n        _instance.resize(coeffCount)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Sets the PlainText polynomial to zero.\n     *\n     * @function\n     * @name PlainText#setZero\n     */\n    setZero() {\n      _instance.setZero()\n    },\n\n    /**\n     * Whether the current PlainText polynomial has all zero coefficients.\n     *\n     * @readonly\n     * @name PlainText#isZero\n     * @type {boolean}\n     */\n    get isZero() {\n      return _instance.isZero()\n    },\n\n    /**\n     * The capacity of the current allocation.\n     *\n     * @readonly\n     * @name PlainText#capacity\n     * @type {number}\n     */\n    get capacity() {\n      return _instance.capacity()\n    },\n\n    /**\n     * The coefficient count of the current PlainText polynomial.\n     *\n     * @readonly\n     * @name PlainText#coeffCount\n     * @type {number}\n     */\n    get coeffCount() {\n      return _instance.coeffCount()\n    },\n\n    /**\n     * The significant coefficient count of the current PlainText polynomial.\n     *\n     * @readonly\n     * @name PlainText#significantCoeffCount\n     * @type {number}\n     */\n    get significantCoeffCount() {\n      return _instance.significantCoeffCount()\n    },\n\n    /**\n     * Returns the non-zero coefficient count of the current PlainText polynomial.\n     *\n     * @readonly\n     * @name PlainText#nonzeroCoeffCount\n     * @type {number}\n     */\n    get nonzeroCoeffCount() {\n      return _instance.nonzeroCoeffCount()\n    },\n\n    /**\n     * Returns a human-readable string description of the PlainText polynomial.\n     *\n     * The returned string is of the form \"7FFx^3 + 1x^1 + 3\" with a format\n     * summarized by the following:\n     * 1. Terms are listed in order of strictly decreasing exponent\n     * 2. Coefficient values are non-negative and in hexadecimal format (hexadecimal\n     * letters are in upper-case)\n     * 3. Exponents are positive and in decimal format\n     * 4. Zero coefficient terms (including the constant term) are omitted unless\n     * the polynomial is exactly 0 (see rule 9)\n     * 5. Term with the exponent value of one is written as x^1\n     * 6. Term with the exponent value of zero (the constant term) is written as\n     * just a hexadecimal number without x or exponent\n     * 7. Terms are separated exactly by <space>+<space>\n     * 8. Other than the +, no other terms have whitespace\n     * 9. If the polynomial is exactly 0, the string \"0\" is returned\n     *\n     * @function\n     * @name PlainText#toPolynomial\n     * @throws std::invalid_argument if the PlainText is in NTT transformed form\n     * @returns {string} Polynomial string\n     */\n    toPolynomial(): string {\n      try {\n        return _instance.toPolynomial()\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Whether the PlainText is in NTT form.\n     *\n     * @readonly\n     * @name PlainText#isNttForm\n     * @type {boolean}\n     */\n    get isNttForm() {\n      return _instance.isNttForm()\n    },\n\n    /**\n     * The reference to parmsId of the PlainText. The parmsId must remain zero unless the\n     * PlainText polynomial is in NTT form.\n     *\n     * @see {@link EncryptionParameters} for more information about parmsId.\n     *\n     * @readonly\n     * @name PlainText#parmsId\n     * @type {ParmsIdType}\n     */\n    get parmsId() {\n      const parms = ParmsIdType()\n      parms.inject(_instance.parmsId())\n      return parms\n    },\n\n    /**\n     * The reference to the scale. This is only needed when using the CKKS\n     * encryption scheme. The user should have little or no reason to ever change\n     * the scale by hand.\n     *\n     * @readonly\n     * @name PlainText#scale\n     * @type {number}\n     */\n    get scale() {\n      return _instance.scale()\n    },\n\n    /**\n     * Sets the PlainText scale. This is only needed when using the\n     * CKKS encryption scheme. The user should have little or no reason to ever\n     * change the scale by hand.\n     *\n     * @function\n     * @name PlainText#setScale\n     * @param {number} scale The scale to set\n     */\n    setScale(scale: number) {\n      _instance.setScale(scale)\n    },\n\n    /**\n     * The currently used MemoryPoolHandle.\n     *\n     * @readonly\n     * @name PlainText#pool\n     * @type {MemoryPoolHandle}\n     */\n    get pool() {\n      return _instance.pool()\n    },\n\n    /**\n     * Save the PlainText to a base64 string\n     *\n     * @function\n     * @name PlainText#save\n     * @param {ComprModeType} [compression={@link ComprModeType.zstd}] The compression mode to use\n     * @returns {string} Base64 encoded string\n     */\n    save(compression: ComprModeType = ComprModeType.zstd): string {\n      return _instance.saveToString(compression)\n    },\n\n    /**\n     * Save the PlainText as a binary Uint8Array\n     *\n     * @function\n     * @name PlainText#saveArray\n     * @param {ComprModeType} [compression={@link ComprModeType.zstd}] The compression mode to use\n     * @returns {Uint8Array} A byte array containing the PlainText in binary form\n     */\n    saveArray(compression: ComprModeType = ComprModeType.zstd): Uint8Array {\n      const tempVect = Vector()\n      const instance = _instance.saveToArray(compression)\n      tempVect.unsafeInject(instance)\n      tempVect.setType('Uint8Array')\n      const tempArr = tempVect.toArray() as Uint8Array\n      tempVect.delete()\n      return tempArr\n    },\n\n    /**\n     * Load a PlainText from a base64 string\n     *\n     * @function\n     * @name PlainText#load\n     * @param {Context} context Encryption context to enforce\n     * @param {string} encoded Base64 encoded string\n     */\n    load(context: Context, encoded: string) {\n      try {\n        _instance.loadFromString(context.instance, encoded)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Load a PlainText from an Uint8Array holding binary data\n     *\n     * @function\n     * @name PlainText#loadArray\n     * @param {Context} context Encryption context to enforce\n     * @param {Uint8Array} array TypedArray containing binary data\n     */\n    loadArray(context: Context, array: Uint8Array) {\n      try {\n        _instance.loadFromArray(context.instance, array)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Copy an existing PlainText and overwrite this instance\n     *\n     * @function\n     * @name PlainText#copy\n     * @param {PlainText} plain PlainText to copy\n     * @example\n     * const plainTextA = seal.PlainText()\n     * // ... after encoding some data ...\n     * const plainTextB = seal.PlainText()\n     * plainTextB.copy(plainTextA)\n     * // plainTextB holds a copy of plainTextA\n     */\n    copy(plain: PlainText) {\n      try {\n        _instance.copy(plain.instance)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Clone and return a new instance of this PlainText\n     *\n     * @function\n     * @name PlainText#clone\n     * @returns {PlainText}\n     * @example\n     * const plainTextA = seal.PlainText()\n     * // ... after encoding some data ...\n     * const plainTextB = plainTextA.clone()\n     * // plainTextB holds a copy of plainTextA\n     */\n    clone(): PlainText {\n      try {\n        const clonedInstance = _instance.clone()\n        const plain = PlainTextConstructor(library)({\n          Exception,\n          ComprModeType,\n          ParmsIdType,\n          MemoryPoolHandle,\n          Vector\n        })()\n        plain.unsafeInject(clonedInstance)\n        return plain\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Move a PlainText into this one and delete the old reference\n     *\n     * @function\n     * @name PlainText#move\n     * @param {PlainText} plain PlainText to move\n     * @example\n     * const plainTextA = seal.PlainText()\n     * // ... after encoding some data ...\n     * const plainTextB = seal.PlainText()\n     * plainTextB.move(plainTextA)\n     * // plainTextB holds a the instance of plainTextA.\n     * // plainTextA no longer holds an instance\n     */\n    move(plain: PlainText) {\n      try {\n        _instance.move(plain.instance)\n        // TODO: find optimization\n        // This method results in a copy instead of a real move.\n        // Therefore, we need to delete the old instance.\n        plain.delete()\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    }\n  }\n}\n\nexport const PlainTextInit = ({\n  loader\n}: LoaderOptions): PlainTextDependencies => {\n  const library: Library = loader.library\n  return PlainTextConstructor(library)\n}\n","import { LoaderOptions, Library } from './seal'\nimport { Exception } from './exception'\nimport { Modulus, ModulusConstructorOptions } from './modulus'\nimport { Vector, VectorConstructorOptions } from './vector'\n\nexport type PlainModulusDependencyOptions = {\n  readonly Exception: Exception\n  readonly Modulus: ModulusConstructorOptions\n  readonly Vector: VectorConstructorOptions\n}\n\nexport type PlainModulusDependencies = {\n  ({\n    Exception,\n    Modulus,\n    Vector\n  }: PlainModulusDependencyOptions): PlainModulusConstructorOptions\n}\n\nexport type PlainModulusConstructorOptions = {\n  (): PlainModulus\n}\n\nexport type PlainModulus = {\n  readonly Batching: (polyModulusDegree: number, bitSize: number) => Modulus\n  readonly BatchingVector: (\n    polyModulusDegree: number,\n    bitSizes: Int32Array\n  ) => Vector\n}\n\nconst PlainModulusConstructor = (\n  library: Library\n): PlainModulusDependencies => ({\n  Exception,\n  Modulus,\n  Vector\n}: PlainModulusDependencyOptions): PlainModulusConstructorOptions => (): PlainModulus => {\n  // Static methods\n  const _Batching = library.PlainModulus.Batching\n  const _BatchingVector = library.PlainModulus.BatchingVector\n\n  /**\n   * @implements PlainModulus\n   */\n\n  /**\n   * @interface PlainModulus\n   */\n  return {\n    /**\n     * Creates a prime number PlainModulus for use as plainPlainModulus encryption\n     * parameter that supports batching with a given polyPlainModulusDegree.\n     *\n     * @function\n     * @name PlainModulus.Batching\n     * @param {number} polyModulusDegree The degree of the polynomial modulus\n     * @param {number} bitSize The bit-size of the desired prime number\n     * @returns {Modulus} A PlainModulus containing the prime number\n     */\n    Batching(polyModulusDegree: number, bitSize: number): Modulus {\n      try {\n        const smallMod = Modulus(BigInt(0))\n        smallMod.inject(_Batching(polyModulusDegree, bitSize))\n        return smallMod\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Creates several prime number PlainModulus elements that can be used as\n     * plainPlainModulus encryption parameters, each supporting batching with a given\n     * polyPlainModulusDegree.\n     *\n     * @function\n     * @name PlainModulus.BatchingVector\n     * @param {Number} polyPlainModulusDegree The degree of the polynomial modulus\n     * @param {Int32Array} bitSizes Int32Array containing values representing bit-sizes of primes\n     * @returns {Vector} Vector of Modulus containing prime numbers\n     */\n    BatchingVector(\n      polyPlainModulusDegree: number,\n      bitSizes: Int32Array\n    ): Vector {\n      try {\n        const vectBitSizes = Vector()\n        vectBitSizes.from(bitSizes)\n        const vect = _BatchingVector(\n          polyPlainModulusDegree,\n          vectBitSizes.instance\n        )\n        vectBitSizes.delete()\n        return vect\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    }\n  }\n}\n\nexport const PlainModulusInit = ({\n  loader\n}: LoaderOptions): PlainModulusDependencies => {\n  const library: Library = loader.library\n  return PlainModulusConstructor(library)\n}\n","import { LoaderOptions, Library, Instance } from './seal'\nimport { Exception } from './exception'\nimport { VectorConstructorOptions } from './vector'\nimport { ComprModeType } from './compr-mode-type'\nimport { Context } from './context'\n\nexport type PublicKeyDependencyOptions = {\n  readonly Exception: Exception\n  readonly ComprModeType: ComprModeType\n  readonly Vector: VectorConstructorOptions\n}\n\nexport type PublicKeyDependencies = {\n  ({\n    Exception,\n    ComprModeType,\n    Vector\n  }: PublicKeyDependencyOptions): PublicKeyConstructorOptions\n}\n\nexport type PublicKeyConstructorOptions = {\n  (): PublicKey\n}\n\nexport type PublicKey = {\n  readonly instance: Instance\n  readonly inject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly save: (compression?: ComprModeType) => string\n  readonly saveArray: (compression?: ComprModeType) => Uint8Array\n  readonly load: (context: Context, encoded: string) => void\n  readonly loadArray: (context: Context, array: Uint8Array) => void\n  readonly copy: (key: PublicKey) => void\n  readonly clone: () => PublicKey\n  readonly move: (key: PublicKey) => void\n}\n\nconst PublicKeyConstructor = (library: Library): PublicKeyDependencies => ({\n  Exception,\n  ComprModeType,\n  Vector\n}: PublicKeyDependencyOptions): PublicKeyConstructorOptions => (): PublicKey => {\n  const Constructor = library.PublicKey\n  let _instance = new Constructor()\n\n  /**\n   * @implements PublicKey\n   */\n\n  /**\n   * @interface PublicKey\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name PublicKey#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance\n     *\n     * @private\n     * @function\n     * @name PublicKey#inject\n     * @param {Instance} instance WASM instance\n     */\n    inject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = new Constructor(instance)\n      instance.delete()\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name PublicKey#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * Save the Encryption Parameters to a base64 string\n     *\n     * @function\n     * @name PublicKey#save\n     * @param {ComprModeType} [compression={@link ComprModeType.zstd}] The compression mode to use\n     * @returns {string} Base64 encoded string\n     */\n    save(compression: ComprModeType = ComprModeType.zstd): string {\n      try {\n        return _instance.saveToString(compression)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Save the PublicKey as a binary Uint8Array\n     *\n     * @function\n     * @name PublicKey#saveArray\n     * @param {ComprModeType} [compression={@link ComprModeType.zstd}] The compression mode to use\n     * @returns {Uint8Array} A byte array containing the PublicKey in binary form\n     */\n    saveArray(compression: ComprModeType = ComprModeType.zstd): Uint8Array {\n      const tempVect = Vector()\n      const instance = _instance.saveToArray(compression)\n      tempVect.unsafeInject(instance)\n      tempVect.setType('Uint8Array')\n      const tempArr = tempVect.toArray() as Uint8Array\n      tempVect.delete()\n      return tempArr\n    },\n\n    /**\n     * Load a PublicKey from a base64 string\n     *\n     * @function\n     * @name PublicKey#load\n     * @param {Context} context Encryption context to enforce\n     * @param {string} encoded Base64 encoded string\n     */\n    load(context: Context, encoded: string) {\n      try {\n        _instance.loadFromString(context.instance, encoded)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Load a PublicKey from an Uint8Array holding binary data\n     *\n     * @function\n     * @name PublicKey#loadArray\n     * @param {Context} context Encryption context to enforce\n     * @param {Uint8Array} array TypedArray containing binary data\n     */\n    loadArray(context: Context, array: Uint8Array) {\n      try {\n        _instance.loadFromArray(context.instance, array)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Copy an existing PublicKey and overwrite this instance\n     *\n     * @function\n     * @name PublicKey#copy\n     * @param {PublicKey} key PublicKey to copy\n     * @example\n     * const keyA = keyGenerator.createPublicKey()\n     * const keyB = seal.PublicKey()\n     * keyB.copy(keyA)\n     * // keyB holds a copy of keyA\n     */\n    copy(key: PublicKey) {\n      try {\n        _instance.copy(key.instance)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Clone and return a new instance of this PublicKey\n     *\n     * @function\n     * @name PublicKey#clone\n     * @returns {PublicKey}\n     * @example\n     * const keyA = keyGenerator.createPublicKey()\n     * const keyB = keyA.clone()\n     * // keyB holds a copy of keyA\n     */\n    clone(): PublicKey {\n      try {\n        const clonedInstance = _instance.clone()\n        const key = PublicKeyConstructor(library)({\n          Exception,\n          ComprModeType,\n          Vector\n        })()\n        key.inject(clonedInstance)\n        return key\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Move a PublicKey into this one and delete the old reference\n     *\n     * @function\n     * @name PublicKey#move\n     * @param {PublicKey} key PublicKey to move\n     * @example\n     * const keyA = keyGenerator.createPublicKey()\n     * const keyB = seal.PublicKey()\n     * keyB.move(keyA)\n     * // keyB holds a the instance of keyA.\n     * // keyA no longer holds an instance\n     */\n    move(key: PublicKey) {\n      try {\n        _instance.move(key.instance)\n        // TODO: find optimization\n        // This method results in a copy instead of a real move.\n        // Therefore, we need to delete the old instance.\n        key.delete()\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    }\n  }\n}\n\nexport const PublicKeyInit = ({\n  loader\n}: LoaderOptions): PublicKeyDependencies => {\n  const library: Library = loader.library\n  return PublicKeyConstructor(library)\n}\n","import { LoaderOptions, Library, Instance } from './seal'\nimport { Exception } from './exception'\nimport { VectorConstructorOptions } from './vector'\nimport { ComprModeType } from './compr-mode-type'\nimport { Context } from './context'\n\nexport type RelinKeysDependencyOptions = {\n  readonly Exception: Exception\n  readonly ComprModeType: ComprModeType\n  readonly Vector: VectorConstructorOptions\n}\n\nexport type RelinKeysDependencies = {\n  ({\n    Exception,\n    ComprModeType,\n    Vector\n  }: RelinKeysDependencyOptions): RelinKeysConstructorOptions\n}\n\nexport type RelinKeysConstructorOptions = {\n  (): RelinKeys\n}\n\nexport type RelinKeys = {\n  readonly instance: Instance\n  readonly inject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly size: number\n  readonly getIndex: (keyPower: number) => number\n  readonly hasKey: (keyPower: number) => boolean\n  readonly save: (compression?: ComprModeType) => string\n  readonly saveArray: (compression?: ComprModeType) => Uint8Array\n  readonly load: (context: Context, encoded: string) => void\n  readonly loadArray: (context: Context, array: Uint8Array) => void\n  readonly copy: (key: RelinKeys) => void\n  readonly clone: () => RelinKeys\n  readonly move: (key: RelinKeys) => void\n}\n\nconst RelinKeysConstructor = (library: Library): RelinKeysDependencies => ({\n  Exception,\n  ComprModeType,\n  Vector\n}: RelinKeysDependencyOptions): RelinKeysConstructorOptions => (): RelinKeys => {\n  const Constructor = library.RelinKeys\n  let _instance = new Constructor()\n\n  /**\n   * @implements RelinKeys\n   */\n\n  /**\n   * @interface RelinKeys\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name RelinKeys#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance\n     *\n     * @private\n     * @function\n     * @name RelinKeys#inject\n     * @param {Instance} instance WASM instance\n     */\n    inject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = new Constructor(instance)\n      instance.delete()\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name RelinKeys#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * Returns the current number of keyswitching keys. Only keys that are\n     * non-empty are counted.\n     *\n     * @readonly\n     * @name RelinKeys#size\n     * @type {number}\n     */\n    get size() {\n      return _instance.size()\n    },\n\n    /**\n     * Returns the index of a relinearization key in the backing KSwitchKeys\n     * instance that corresponds to the given secret key power, assuming that\n     * it exists in the backing KSwitchKeys.\n     *\n     * @function\n     * @name RelinKeys#getIndex\n     * @param {number} keyPower The power of the secret key\n     * @returns {number} The index of the relin key\n     */\n    getIndex(keyPower: number): number {\n      try {\n        return _instance.getIndex(keyPower)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Returns whether a relinearization key corresponding to a given power of\n     * the secret key exists.\n     *\n     * @function\n     * @name RelinKeys#hasKey\n     * @param {number} keyPower The power of the secret key\n     * @returns {boolean} True if the power exists\n     */\n    hasKey(keyPower: number): boolean {\n      try {\n        return _instance.hasKey(keyPower)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Save the Encryption Parameters to a base64 string\n     *\n     * @function\n     * @name RelinKeys#save\n     * @param {ComprModeType} [compression={@link ComprModeType.zstd}] The compression mode to use\n     * @returns {string} Base64 encoded string\n     */\n    save(compression: ComprModeType = ComprModeType.zstd): string {\n      try {\n        return _instance.saveToString(compression)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Save the RelinKeys as a binary Uint8Array\n     *\n     * @function\n     * @name RelinKeys#saveArray\n     * @param {ComprModeType} [compression={@link ComprModeType.zstd}] The compression mode to use\n     * @returns {Uint8Array} A byte array containing the RelinKeys in binary form\n     */\n    saveArray(compression: ComprModeType = ComprModeType.zstd): Uint8Array {\n      const tempVect = Vector()\n      const instance = _instance.saveToArray(compression)\n      tempVect.unsafeInject(instance)\n      tempVect.setType('Uint8Array')\n      const tempArr = tempVect.toArray() as Uint8Array\n      tempVect.delete()\n      return tempArr\n    },\n\n    /**\n     * Load a RelinKeys from a base64 string\n     *\n     * @function\n     * @name RelinKeys#load\n     * @param {Context} context Encryption context to enforce\n     * @param {string} encoded Base64 encoded string\n     */\n    load(context: Context, encoded: string) {\n      try {\n        _instance.loadFromString(context.instance, encoded)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Load a RelinKeys from an Uint8Array holding binary data\n     *\n     * @function\n     * @name RelinKeys#loadArray\n     * @param {Context} context Encryption context to enforce\n     * @param {Uint8Array} array TypedArray containing binary data\n     */\n    loadArray(context: Context, array: Uint8Array) {\n      try {\n        _instance.loadFromArray(context.instance, array)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Copy an existing RelinKeys and overwrite this instance\n     *\n     * @function\n     * @name RelinKeys#copy\n     * @param {RelinKeys} key RelinKeys to copy\n     * @example\n     * const keyA = keyGenerator.createRelinKeys()\n     * const keyB = seal.RelinKeys()\n     * keyB.copy(keyA)\n     * // keyB holds a copy of keyA\n     */\n    copy(key: RelinKeys) {\n      try {\n        _instance.copy(key.instance)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Clone and return a new instance of this RelinKeys\n     *\n     * @function\n     * @name RelinKeys#clone\n     * @returns {RelinKeys}\n     * @example\n     * const keyA = keyGenerator.createRelinKeys()\n     * const keyB = keyA.clone()\n     * // keyB holds a copy of keyA\n     */\n    clone(): RelinKeys {\n      try {\n        const clonedInstance = _instance.clone()\n        const key = RelinKeysConstructor(library)({\n          Exception,\n          ComprModeType,\n          Vector\n        })()\n        key.inject(clonedInstance)\n        return key\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Move a RelinKeys into this one and delete the old reference\n     *\n     * @function\n     * @name RelinKeys#move\n     * @param {RelinKeys} key RelinKeys to move\n     * @example\n     * const keyA = keyGenerator.createRelinKeys()\n     * const keyB = seal.RelinKeys()\n     * keyB.move(keyA)\n     * // keyB holds a the instance of keyA.\n     * // keyA no longer holds an instance\n     */\n    move(key: RelinKeys) {\n      try {\n        _instance.move(key.instance)\n        // TODO: find optimization\n        // This method results in a copy instead of a real move.\n        // Therefore, we need to delete the old instance.\n        key.delete()\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    }\n  }\n}\n\nexport const RelinKeysInit = ({\n  loader\n}: LoaderOptions): RelinKeysDependencies => {\n  const library: Library = loader.library\n  return RelinKeysConstructor(library)\n}\n","import { LoaderOptions, Library } from './seal'\n\nexport type SchemeTypeDependencies = {\n  (): SchemeTypeConstructorOptions\n}\n\nexport type SchemeTypeConstructorOptions = {\n  (): SchemeType\n}\n\nexport type SchemeType = {\n  readonly none: any\n  readonly bfv: any\n  readonly ckks: any\n}\n\nconst SchemeTypeConstructor = (\n  library: Library\n): SchemeTypeDependencies => (): SchemeTypeConstructorOptions => (): SchemeType => {\n  // Static methods\n  const _none = library.SchemeType.none\n  const _bfv = library.SchemeType.bfv\n  const _ckks = library.SchemeType.ckks\n\n  /**\n   * @implements SchemeType\n   */\n\n  /**\n   * @interface SchemeType\n   */\n  return {\n    /**\n     * Return the 'none' scheme type\n     *\n     * @readonly\n     * @name SchemeType.none\n     * @type {SchemeType.none}\n     */\n    get none() {\n      /**\n       * @typedef {SchemeType.none} SchemeType.none\n       */\n      return _none\n    },\n\n    /**\n     * Return the 'bfv' scheme type\n     *\n     * @readonly\n     * @name SchemeType.bfv\n     * @type {SchemeType.bfv}\n     */\n    get bfv() {\n      /**\n       * @typedef {SchemeType.bfv} SchemeType.bfv\n       */\n      return _bfv\n    },\n\n    /**\n     * Return the 'ckks' scheme type\n     *\n     * @readonly\n     * @name SchemeType.ckks\n     * @type {SchemeType.ckks}\n     */\n    get ckks() {\n      /**\n       * @typedef {SchemeType.ckks} SchemeType.ckks\n       */\n      return _ckks\n    }\n  }\n}\n\nexport const SchemeTypeInit = ({\n  loader\n}: LoaderOptions): SchemeTypeDependencies => {\n  const library: Library = loader.library\n  return SchemeTypeConstructor(library)\n}\n","import { LoaderOptions, Library, Instance } from './seal'\nimport { Exception } from './exception'\nimport { VectorConstructorOptions } from './vector'\nimport { ComprModeType } from './compr-mode-type'\nimport { Context } from './context'\n\nexport type SecretKeyDependencyOptions = {\n  readonly Exception: Exception\n  readonly ComprModeType: ComprModeType\n  readonly Vector: VectorConstructorOptions\n}\n\nexport type SecretKeyDependencies = {\n  ({\n    Exception,\n    ComprModeType,\n    Vector\n  }: SecretKeyDependencyOptions): SecretKeyConstructorOptions\n}\n\nexport type SecretKeyConstructorOptions = {\n  (): SecretKey\n}\n\nexport type SecretKey = {\n  readonly instance: Instance\n  readonly inject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly save: (compression?: ComprModeType) => string\n  readonly saveArray: (compression?: ComprModeType) => Uint8Array\n  readonly load: (context: Context, encoded: string) => void\n  readonly loadArray: (context: Context, array: Uint8Array) => void\n  readonly copy: (key: SecretKey) => void\n  readonly clone: () => SecretKey\n  readonly move: (key: SecretKey) => void\n}\n\nconst SecretKeyConstructor = (library: Library): SecretKeyDependencies => ({\n  Exception,\n  ComprModeType,\n  Vector\n}: SecretKeyDependencyOptions): SecretKeyConstructorOptions => (): SecretKey => {\n  const Constructor = library.SecretKey\n  let _instance = new Constructor()\n\n  /**\n   * @implements SecretKey\n   */\n\n  /**\n   * @interface SecretKey\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name SecretKey#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance\n     *\n     * @private\n     * @function\n     * @name SecretKey#inject\n     * @param {Instance} instance WASM instance\n     */\n    inject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = new Constructor(instance)\n      instance.delete()\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name SecretKey#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * Save the Encryption Parameters to a base64 string\n     *\n     * @function\n     * @name SecretKey#save\n     * @param {ComprModeType} [compression={@link ComprModeType.zstd}] The compression mode to use\n     * @returns {string} Base64 encoded string\n     */\n    save(compression: ComprModeType = ComprModeType.zstd): string {\n      try {\n        return _instance.saveToString(compression)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Save the SecretKey as a binary Uint8Array\n     *\n     * @function\n     * @name SecretKey#saveArray\n     * @param {ComprModeType} [compression={@link ComprModeType.zstd}] The compression mode to use\n     * @returns {Uint8Array} A byte array containing the SecretKey in binary form\n     */\n    saveArray(compression: ComprModeType = ComprModeType.zstd): Uint8Array {\n      const tempVect = Vector()\n      const instance = _instance.saveToArray(compression)\n      tempVect.unsafeInject(instance)\n      tempVect.setType('Uint8Array')\n      const tempArr = tempVect.toArray() as Uint8Array\n      tempVect.delete()\n      return tempArr\n    },\n\n    /**\n     * Load a SecretKey from a base64 string\n     *\n     * @function\n     * @name SecretKey#load\n     * @param {Context} context Encryption context to enforce\n     * @param {string} encoded Base64 encoded string\n     */\n    load(context: Context, encoded: string) {\n      try {\n        _instance.loadFromString(context.instance, encoded)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Load a SecretKey from an Uint8Array holding binary data\n     *\n     * @function\n     * @name SecretKey#loadArray\n     * @param {Context} context Encryption context to enforce\n     * @param {Uint8Array} array TypedArray containing binary data\n     */\n    loadArray(context: Context, array: Uint8Array) {\n      try {\n        _instance.loadFromArray(context.instance, array)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Copy an existing SecretKey and overwrite this instance\n     *\n     * @function\n     * @name SecretKey#copy\n     * @param {SecretKey} key SecretKey to copy\n     * @example\n     * const keyA = keyGenerator.secretKey()\n     * const keyB = seal.SecretKey()\n     * keyB.copy(keyA)\n     * // keyB holds a copy of keyA\n     */\n    copy(key: SecretKey) {\n      try {\n        _instance.copy(key.instance)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Clone and return a new instance of this SecretKey\n     *\n     * @function\n     * @name SecretKey#clone\n     * @returns {SecretKey}\n     * @example\n     * const keyA = keyGenerator.secretKey()\n     * const keyB = keyA.clone()\n     * // keyB holds a copy of keyA\n     */\n    clone(): SecretKey {\n      try {\n        const clonedInstance = _instance.clone()\n        const key = SecretKeyConstructor(library)({\n          Exception,\n          ComprModeType,\n          Vector\n        })()\n        key.inject(clonedInstance)\n        return key\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Move a SecretKey into this one and delete the old reference\n     *\n     * @function\n     * @name SecretKey#move\n     * @param {SecretKey} key SecretKey to move\n     * @example\n     * const keyA = keyGenerator.secretKey()\n     * const keyB = seal.SecretKey()\n     * keyB.move(keyA)\n     * // keyB holds a the instance of keyA.\n     * // keyA no longer holds an instance\n     */\n    move(key: SecretKey) {\n      try {\n        _instance.move(key.instance)\n        // TODO: find optimization\n        // This method results in a copy instead of a real move.\n        // Therefore, we need to delete the old instance.\n        key.delete()\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    }\n  }\n}\n\nexport const SecretKeyInit = ({\n  loader\n}: LoaderOptions): SecretKeyDependencies => {\n  const library: Library = loader.library\n  return SecretKeyConstructor(library)\n}\n","import { LoaderOptions, Library } from './seal'\n\nexport type SecurityLevelDependencies = {\n  (): SecurityLevelConstructorOptions\n}\n\nexport type SecurityLevelConstructorOptions = {\n  (): SecurityLevel\n}\n\nexport type SecurityLevel = {\n  readonly none: any\n  readonly tc128: any\n  readonly tc192: any\n  readonly tc256: any\n}\n\nconst SecurityLevelConstructor = (\n  library: Library\n): SecurityLevelDependencies => (): SecurityLevelConstructorOptions => (): SecurityLevel => {\n  // Static methods\n  const _none = library.SecLevelType.none\n  const _tc128 = library.SecLevelType.tc128\n  const _tc192 = library.SecLevelType.tc192\n  const _tc256 = library.SecLevelType.tc256\n\n  /**\n   * @implements SecurityLevel\n   */\n\n  /**\n   * @interface SecurityLevel\n   */\n  return {\n    /**\n     * Returns the 'none' security level\n     *\n     * @readonly\n     * @name SecurityLevel.none\n     * @type {SecurityLevel.none}\n     */\n    get none() {\n      /**\n       * @typedef {SecurityLevel.none} SecurityLevel.none\n       */\n      return _none\n    },\n\n    /**\n     * Returns the '128' security level\n     *\n     * @readonly\n     * @name SecurityLevel.tc128\n     * @type {SecurityLevel.tc128}\n     */\n    get tc128() {\n      /**\n       * @typedef {SecurityLevel.tc128} SecurityLevel.tc128\n       */\n      return _tc128\n    },\n\n    /**\n     * Returns the '192' security level\n     *\n     * @readonly\n     * @name SecurityLevel.tc192\n     * @type {SecurityLevel.tc192}\n     */\n    get tc192() {\n      /**\n       * @typedef {SecurityLevel.tc192} SecurityLevel.tc192\n       */\n      return _tc192\n    },\n\n    /**\n     * Returns the '256' security level\n     *\n     * @readonly\n     * @name SecurityLevel.tc256\n     * @type {SecurityLevel.tc256}\n     */\n    get tc256() {\n      /**\n       * @typedef {SecurityLevel.tc256} SecurityLevel.tc256\n       */\n      return _tc256\n    }\n  }\n}\nexport const SecurityLevelInit = ({\n  loader\n}: LoaderOptions): SecurityLevelDependencies => {\n  const library: Library = loader.library\n  return SecurityLevelConstructor(library)\n}\n","import { LoaderOptions, Instance, Library } from './seal'\nimport { Exception } from './exception'\nimport { INSTANCE_DELETED, UNSUPPORTED_VECTOR_TYPE } from './constants'\n\nexport type VectorDependencyOptions = {\n  readonly Exception: Exception\n}\n\nexport type VectorDependencies = {\n  ({ Exception }: VectorDependencyOptions): VectorConstructorOptions\n}\n\nexport type VectorConstructorOptions = {\n  (): Vector\n}\n\nexport type Vector = {\n  readonly instance: Instance\n  readonly unsafeInject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly from: (array: VectorTypes, type?: StringTypes) => Instance\n  readonly type: string\n  readonly setType: (type: StringTypes) => void\n  readonly size: number\n  readonly getValue: (index: number) => number\n  readonly resize: (size: number, fill: number) => void\n  readonly toArray: () => VectorTypes\n}\n\nexport type VectorTypes =\n  | Uint8Array\n  | Int32Array\n  | Uint32Array\n  | Float64Array\n  | BigInt64Array\n  | BigUint64Array\n\nexport type StringTypes =\n  | 'Uint8Array'\n  | 'Int32Array'\n  | 'Uint32Array'\n  | 'Float64Array'\n  | 'BigInt64Array'\n  | 'BigUint64Array'\n  | 'Modulus'\n\nconst VectorConstructor = (library: Library): VectorDependencies => ({\n  Exception\n}: VectorDependencyOptions): VectorConstructorOptions => (): Vector => {\n  // Static methods\n  const _vecFromArrayUint8 = library.vecFromArrayUint8\n  const _vecFromArrayUint32 = library.vecFromArrayUint32\n  const _vecFromArrayInt32 = library.vecFromArrayInt32\n  const _vecFromArrayFloat64 = library.vecFromArrayFloat64\n  const _vecFromArrayBigInt64 = library.vecFromArrayBigInt64\n  const _vecFromArrayBigUint64 = library.vecFromArrayBigUint64\n  const _vecFromArrayModulus = library.vecFromArrayModulus\n  const _jsArrayUint8FromVec = library.jsArrayUint8FromVec\n  const _jsArrayUint32FromVec = library.jsArrayUint32FromVec\n  const _jsArrayInt32FromVec = library.jsArrayInt32FromVec\n  const _jsArrayFloat64FromVec = library.jsArrayFloat64FromVec\n  const _jsArrayStringFromVecInt64 = library.jsArrayStringFromVecInt64\n  const _jsArrayStringFromVecUint64 = library.jsArrayStringFromVecUint64\n  const _jsArrayStringFromVecModulus = library.jsArrayStringFromVecModulus\n\n  let _instance: Instance\n  let _type: StringTypes\n  /**\n   * @implements Vector\n   */\n\n  /**\n   * @interface Vector\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name Vector#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance. No type checking is performed.\n     *\n     * @private\n     * @function\n     * @name Vector#unsafeInject\n     * @param {Instance} instance WASM instance\n     */\n    unsafeInject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = instance\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name Vector#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * Converts a JS TypedArray into a vector\n     *\n     * @function\n     * @name Vector#from\n     * @param {VectorTypes} array The TypedArray to convert\n     * @param {StringTypes} [type] An optional type override - useful for 'Modulus' only\n     */\n    from(array: VectorTypes, type?: StringTypes) {\n      try {\n        _type = type ? type : (array.constructor.name as StringTypes)\n        switch (_type) {\n          case 'Uint8Array':\n            _instance = _vecFromArrayUint8(array)\n            break\n          case 'Int32Array':\n            _instance = _vecFromArrayInt32(array)\n            break\n          case 'Uint32Array':\n            _instance = _vecFromArrayUint32(array)\n            break\n          case 'Float64Array':\n            _instance = _vecFromArrayFloat64(array)\n            break\n          case 'BigInt64Array':\n            _instance = _vecFromArrayBigInt64(array.toString().split(','))\n            break\n          case 'BigUint64Array':\n            _instance = _vecFromArrayBigUint64(array.toString().split(','))\n            break\n          case 'Modulus':\n            _instance = _vecFromArrayModulus(array.toString().split(','))\n            break\n          default:\n            throw new Error(UNSUPPORTED_VECTOR_TYPE)\n        }\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * The Vector type\n     *\n     * @readonly\n     * @name Vector#type\n     */\n    get type(): StringTypes {\n      return _type\n    },\n\n    /**\n     * Set the Vector type\n     *\n     * @function\n     * @name Vector#setType\n     * @param {StringTypes} type the type of the vector\n     */\n    setType(type: StringTypes) {\n      _type = type\n    },\n\n    /**\n     * The vector size\n     *\n     * @readonly\n     * @name Vector#size\n     * @type {number}\n     */\n    get size(): number {\n      return _instance.size()\n    },\n\n    /**\n     * Get a value pointed to by the specified index\n     *\n     * @function\n     * @name Vector#getValue\n     * @param {number} index Index of the Vector\n     * @returns {number} Value of the element in the Vector pointed to by the index\n     */\n    getValue(index: number): number {\n      try {\n        return _instance.get(index)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Resizes a vector to the given size\n     *\n     * @function\n     * @name Vector#resize\n     * @param {number} size number of elements to resize\n     * @param {number} fill Data to fill the vector with\n     */\n    resize(size: number, fill: number) {\n      try {\n        _instance.resize(size, fill)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Copy a vector's data into a Typed Array\n     *\n     * Note: we cannot simply return a view on the underlying ArrayBuffer\n     * because WASM memory can grow and cause all the views to become\n     * neutered. We have to perform a hard copy to get data from WASM heap to JS.\n     *\n     * @function\n     * @name Vector#toArray\n     * @returns {VectorTypes} TypedArray containing values from the Vector\n     */\n    toArray(): VectorTypes {\n      if (!_instance) {\n        throw new Error(INSTANCE_DELETED)\n      }\n      switch (_type) {\n        case 'Uint8Array':\n          return Uint8Array.from(_jsArrayUint8FromVec(_instance))\n        case 'Int32Array':\n          return Int32Array.from(_jsArrayInt32FromVec(_instance))\n        case 'Uint32Array':\n          return Uint32Array.from(_jsArrayUint32FromVec(_instance))\n        case 'Float64Array':\n          return Float64Array.from(_jsArrayFloat64FromVec(_instance))\n        case 'BigInt64Array':\n          return BigInt64Array.from(_jsArrayStringFromVecInt64(_instance))\n        case 'BigUint64Array':\n          return BigUint64Array.from(_jsArrayStringFromVecUint64(_instance))\n        case 'Modulus':\n          return BigUint64Array.from(_jsArrayStringFromVecModulus(_instance))\n        default:\n          throw new Error(UNSUPPORTED_VECTOR_TYPE)\n      }\n    }\n  }\n}\n\nexport const VectorInit = ({ loader }: LoaderOptions): VectorDependencies => {\n  const library: Library = loader.library\n  return VectorConstructor(library)\n}\n","import { SEALLibrary } from './implementation/seal'\nimport sealLibrary from 'seal_throws_wasm_worker'\nimport { Loader, createLoader } from './main/loader'\nimport { SEAL } from './main/seal'\n/**\n * Export a function which loads the proper build\n */\nconst loader = async (): Promise<Loader> => createLoader(sealLibrary)\n\n/**\n * Main export for node-seal\n */\nexport default async (): Promise<SEALLibrary> => SEAL(loader)\n","import { SEALLibrary, SEALConstructor } from '../implementation/seal'\nimport { BatchEncoderInit } from '../implementation/batch-encoder'\nimport { CipherTextInit } from '../implementation/cipher-text'\nimport { CKKSEncoderInit } from '../implementation/ckks-encoder'\nimport { CoeffModulusInit } from '../implementation/coeff-modulus'\nimport { ComprModeTypeInit } from '../implementation/compr-mode-type'\nimport { ContextDataInit } from '../implementation/context-data'\nimport { ContextInit } from '../implementation/context'\nimport { DecryptorInit } from '../implementation/decryptor'\nimport { EncryptionParameterQualifiersInit } from '../implementation/encryption-parameter-qualifiers'\nimport { EncryptionParametersInit } from '../implementation/encryption-parameters'\nimport { EncryptorInit } from '../implementation/encryptor'\nimport { EvaluatorInit } from '../implementation/evaluator'\nimport { ExceptionInit } from '../implementation/exception'\nimport { GaloisKeysInit } from '../implementation/galois-keys'\nimport { KeyGeneratorInit } from '../implementation/key-generator'\nimport { MemoryPoolHandleInit } from '../implementation/memory-pool-handle'\nimport { ModulusInit } from '../implementation/modulus'\nimport { ParmsIdTypeInit } from '../implementation/parms-id-type'\nimport { PlainTextInit } from '../implementation/plain-text'\nimport { PlainModulusInit } from '../implementation/plain-modulus'\nimport { PublicKeyInit } from '../implementation/public-key'\nimport { RelinKeysInit } from '../implementation/relin-keys'\nimport { SchemeTypeInit } from '../implementation/scheme-type'\nimport { SecretKeyInit } from '../implementation/secret-key'\nimport { SecurityLevelInit } from '../implementation/security-level'\nimport { SerializableInit } from '../implementation/serializable'\nimport { VectorInit } from '../implementation/vector'\nimport { Loader } from './loader'\n\n/**\n * Main export for the library\n */\nexport const SEAL = async (\n  Loader: () => Promise<Loader>\n): Promise<SEALLibrary> => {\n  const loader = await Loader()\n  return SEALConstructor({\n    BatchEncoder: BatchEncoderInit({\n      loader\n    }),\n    CipherText: CipherTextInit({\n      loader\n    }),\n    CKKSEncoder: CKKSEncoderInit({\n      loader\n    }),\n    CoeffModulus: CoeffModulusInit({\n      loader\n    }),\n    ComprModeType: ComprModeTypeInit({\n      loader\n    }),\n    ContextData: ContextDataInit({\n      loader\n    }),\n    Context: ContextInit({\n      loader\n    }),\n    Decryptor: DecryptorInit({\n      loader\n    }),\n    EncryptionParameterQualifiers: EncryptionParameterQualifiersInit(),\n    EncryptionParameters: EncryptionParametersInit({\n      loader\n    }),\n    Encryptor: EncryptorInit({\n      loader\n    }),\n    Evaluator: EvaluatorInit({\n      loader\n    }),\n    Exception: ExceptionInit({\n      loader\n    }),\n    GaloisKeys: GaloisKeysInit({\n      loader\n    }),\n    KeyGenerator: KeyGeneratorInit({\n      loader\n    }),\n    MemoryPoolHandle: MemoryPoolHandleInit({\n      loader\n    }),\n    Modulus: ModulusInit({\n      loader\n    }),\n    ParmsIdType: ParmsIdTypeInit({\n      loader\n    }),\n    PlainText: PlainTextInit({\n      loader\n    }),\n    PlainModulus: PlainModulusInit({\n      loader\n    }),\n    PublicKey: PublicKeyInit({\n      loader\n    }),\n    RelinKeys: RelinKeysInit({\n      loader\n    }),\n    SchemeType: SchemeTypeInit({\n      loader\n    }),\n    SecretKey: SecretKeyInit({\n      loader\n    }),\n    SecurityLevel: SecurityLevelInit({\n      loader\n    }),\n    Serializable: SerializableInit(),\n    Vector: VectorInit({\n      loader\n    })\n  })\n}\n","import {\n  BatchEncoderConstructorOptions,\n  BatchEncoderDependencies\n} from './batch-encoder'\nimport {\n  CipherTextConstructorOptions,\n  CipherTextDependencies\n} from './cipher-text'\nimport {\n  CKKSEncoderConstructorOptions,\n  CKKSEncoderDependencies\n} from './ckks-encoder'\nimport { CoeffModulus, CoeffModulusDependencies } from './coeff-modulus'\nimport { ComprModeType, ComprModeTypeDependencies } from './compr-mode-type'\nimport {\n  ContextDataConstructorOptions,\n  ContextDataDependencies\n} from './context-data'\nimport { ContextConstructorOptions, ContextDependencies } from './context'\nimport { DecryptorConstructorOptions, DecryptorDependencies } from './decryptor'\nimport {\n  EncryptionParameterQualifiersConstructorOptions,\n  EncryptionParameterQualifiersDependencies\n} from './encryption-parameter-qualifiers'\nimport {\n  EncryptionParametersConstructorOptions,\n  EncryptionParametersDependencies\n} from './encryption-parameters'\nimport { EncryptorConstructorOptions, EncryptorDependencies } from './encryptor'\nimport { EvaluatorConstructorOptions, EvaluatorDependencies } from './evaluator'\nimport { Exception, ExceptionDependencies } from './exception'\nimport {\n  GaloisKeysConstructorOptions,\n  GaloisKeysDependencies\n} from './galois-keys'\nimport {\n  MemoryPoolHandle,\n  MemoryPoolHandleDependencies\n} from './memory-pool-handle'\nimport { ModulusConstructorOptions, ModulusDependencies } from './modulus'\nimport {\n  ParmsIdTypeConstructorOptions,\n  ParmsIdTypeDependencies\n} from './parms-id-type'\nimport {\n  PlainTextConstructorOptions,\n  PlainTextDependencies\n} from './plain-text'\nimport { PlainModulus, PlainModulusDependencies } from './plain-modulus'\nimport {\n  PublicKeyConstructorOptions,\n  PublicKeyDependencies\n} from './public-key'\nimport {\n  RelinKeysConstructorOptions,\n  RelinKeysDependencies\n} from './relin-keys'\nimport { SchemeType, SchemeTypeDependencies } from './scheme-type'\nimport {\n  SecretKeyConstructorOptions,\n  SecretKeyDependencies\n} from './secret-key'\nimport { SecurityLevel, SecurityLevelDependencies } from './security-level'\nimport {\n  SerializableConstructorOptions,\n  SerializableDependencies\n} from './serializable'\nimport { VectorConstructorOptions, VectorDependencies } from './vector'\nimport {\n  KeyGeneratorConstructorOptions,\n  KeyGeneratorDependencies\n} from './key-generator'\n\nexport type Instance = any\nexport type Loader = any\nexport type Library = any\nexport type Dependencies = any\nexport type LoaderOptions = {\n  readonly loader: Loader\n}\n\nexport type SEALLibrary = {\n  readonly BatchEncoder: BatchEncoderConstructorOptions\n  readonly CipherText: CipherTextConstructorOptions\n  readonly CKKSEncoder: CKKSEncoderConstructorOptions\n  readonly CoeffModulus: CoeffModulus\n  readonly ComprModeType: ComprModeType\n  readonly ContextData: ContextDataConstructorOptions\n  readonly Context: ContextConstructorOptions\n  readonly Decryptor: DecryptorConstructorOptions\n  readonly EncryptionParameterQualifiers: EncryptionParameterQualifiersConstructorOptions\n  readonly EncryptionParameters: EncryptionParametersConstructorOptions\n  readonly Encryptor: EncryptorConstructorOptions\n  readonly Evaluator: EvaluatorConstructorOptions\n  readonly Exception: Exception\n  readonly GaloisKeys: GaloisKeysConstructorOptions\n  readonly KeyGenerator: KeyGeneratorConstructorOptions\n  readonly MemoryPoolHandle: MemoryPoolHandle\n  readonly Modulus: ModulusConstructorOptions\n  readonly ParmsIdType: ParmsIdTypeConstructorOptions\n  readonly PlainText: PlainTextConstructorOptions\n  readonly PlainModulus: PlainModulus\n  readonly PublicKey: PublicKeyConstructorOptions\n  readonly RelinKeys: RelinKeysConstructorOptions\n  readonly SchemeType: SchemeType\n  readonly SecretKey: SecretKeyConstructorOptions\n  readonly SecurityLevel: SecurityLevel\n  readonly Serializable: SerializableConstructorOptions\n  readonly Vector: VectorConstructorOptions\n}\ntype SEALConstructorOptions = {\n  readonly BatchEncoder: BatchEncoderDependencies\n  readonly CipherText: CipherTextDependencies\n  readonly CKKSEncoder: CKKSEncoderDependencies\n  readonly CoeffModulus: CoeffModulusDependencies\n  readonly ComprModeType: ComprModeTypeDependencies\n  readonly ContextData: ContextDataDependencies\n  readonly Context: ContextDependencies\n  readonly Decryptor: DecryptorDependencies\n  readonly EncryptionParameterQualifiers: EncryptionParameterQualifiersDependencies\n  readonly EncryptionParameters: EncryptionParametersDependencies\n  readonly Encryptor: EncryptorDependencies\n  readonly Evaluator: EvaluatorDependencies\n  readonly Exception: ExceptionDependencies\n  readonly GaloisKeys: GaloisKeysDependencies\n  readonly KeyGenerator: KeyGeneratorDependencies\n  readonly MemoryPoolHandle: MemoryPoolHandleDependencies\n  readonly Modulus: ModulusDependencies\n  readonly ParmsIdType: ParmsIdTypeDependencies\n  readonly PlainText: PlainTextDependencies\n  readonly PlainModulus: PlainModulusDependencies\n  readonly PublicKey: PublicKeyDependencies\n  readonly RelinKeys: RelinKeysDependencies\n  readonly SchemeType: SchemeTypeDependencies\n  readonly SecretKey: SecretKeyDependencies\n  readonly SecurityLevel: SecurityLevelDependencies\n  readonly Serializable: SerializableDependencies\n  readonly Vector: VectorDependencies\n}\n\n/**\n * @implements SEAL\n */\nexport const SEALConstructor = ({\n  BatchEncoder,\n  CipherText,\n  CKKSEncoder,\n  CoeffModulus,\n  ComprModeType,\n  ContextData,\n  Context,\n  Decryptor,\n  EncryptionParameterQualifiers,\n  EncryptionParameters,\n  Encryptor,\n  Evaluator,\n  Exception,\n  GaloisKeys,\n  KeyGenerator,\n  MemoryPoolHandle,\n  Modulus,\n  ParmsIdType,\n  PlainText,\n  PlainModulus,\n  PublicKey,\n  RelinKeys,\n  SchemeType,\n  SecretKey,\n  SecurityLevel,\n  Serializable,\n  Vector\n}: SEALConstructorOptions): SEALLibrary => {\n  // Unfortunately, this library has nested depenencies\n  // so we need to load them in order.\n\n  // Define our singletons\n  const exception = Exception()()\n  const comprModeType = ComprModeType()()\n  const memoryPoolHandle = MemoryPoolHandle()()\n  const securityLevel = SecurityLevel()()\n  const schemeType = SchemeType()()\n\n  // Define our constructors (ORDER MATTERS)\n  const vector = Vector({ Exception: exception })\n  const coeffModulus = CoeffModulus({\n    Exception: exception,\n    SecurityLevel: securityLevel,\n    Vector: vector\n  })()\n  const modulus = Modulus({\n    Exception: exception,\n    ComprModeType: comprModeType,\n    Vector: vector\n  })\n  const plainModulus = PlainModulus({\n    Exception: exception,\n    Modulus: modulus,\n    Vector: vector\n  })()\n  const serializable = Serializable({\n    Exception: exception,\n    Vector: vector,\n    ComprModeType: comprModeType\n  })\n  const parmsIdType = ParmsIdType({ Exception: exception })\n  const plainText = PlainText({\n    Exception: exception,\n    ComprModeType: comprModeType,\n    ParmsIdType: parmsIdType,\n    MemoryPoolHandle: memoryPoolHandle,\n    Vector: vector\n  })\n  const cipherText = CipherText({\n    Exception: exception,\n    ComprModeType: comprModeType,\n    ParmsIdType: parmsIdType,\n    MemoryPoolHandle: memoryPoolHandle,\n    Vector: vector\n  })\n  const batchEncoder = BatchEncoder({\n    Exception: exception,\n    MemoryPoolHandle: memoryPoolHandle,\n    PlainText: plainText,\n    Vector: vector\n  })\n  const ckksEncoder = CKKSEncoder({\n    Exception: exception,\n    MemoryPoolHandle: memoryPoolHandle,\n    PlainText: plainText,\n    Vector: vector\n  })\n  const encryptionParameterQualifiers = EncryptionParameterQualifiers()\n  const encryptionParameters = EncryptionParameters({\n    Exception: exception,\n    ComprModeType: comprModeType,\n    Modulus: modulus,\n    SchemeType: schemeType,\n    Vector: vector\n  })\n  const contextData = ContextData({\n    Exception: exception,\n    EncryptionParameters: encryptionParameters,\n    ParmsIdType: parmsIdType,\n    EncryptionParameterQualifiers: encryptionParameterQualifiers\n  })\n  const context = Context({\n    ParmsIdType: parmsIdType,\n    ContextData: contextData,\n    SecurityLevel: securityLevel\n  })\n  const decryptor = Decryptor({\n    Exception: exception,\n    PlainText: plainText\n  })\n  const encryptor = Encryptor({\n    Exception: exception,\n    MemoryPoolHandle: memoryPoolHandle,\n    CipherText: cipherText,\n    Serializable: serializable\n  })\n  const evaluator = Evaluator({\n    Exception: exception,\n    MemoryPoolHandle: memoryPoolHandle,\n    CipherText: cipherText,\n    PlainText: plainText\n  })\n  const publicKey = PublicKey({\n    Exception: exception,\n    ComprModeType: comprModeType,\n    Vector: vector\n  })\n  const secretKey = SecretKey({\n    Exception: exception,\n    ComprModeType: comprModeType,\n    Vector: vector\n  })\n  const relinKeys = RelinKeys({\n    Exception: exception,\n    ComprModeType: comprModeType,\n    Vector: vector\n  })\n  const galoisKeys = GaloisKeys({\n    Exception: exception,\n    ComprModeType: comprModeType,\n    Vector: vector\n  })\n  const keyGenerator = KeyGenerator({\n    Exception: exception,\n    PublicKey: publicKey,\n    SecretKey: secretKey,\n    RelinKeys: relinKeys,\n    GaloisKeys: galoisKeys,\n    Serializable: serializable\n  })\n\n  /**\n   * @interface SEAL\n   */\n  return {\n    BatchEncoder: batchEncoder,\n    CipherText: cipherText,\n    CKKSEncoder: ckksEncoder,\n    CoeffModulus: coeffModulus, // Singleton\n    ComprModeType: comprModeType, // Singleton\n    ContextData: contextData,\n    Context: context,\n    Decryptor: decryptor,\n    EncryptionParameterQualifiers: encryptionParameterQualifiers,\n    EncryptionParameters: encryptionParameters,\n    Encryptor: encryptor,\n    Evaluator: evaluator,\n    Exception: exception, // Singleton\n    GaloisKeys: galoisKeys,\n    KeyGenerator: keyGenerator,\n    MemoryPoolHandle: memoryPoolHandle, // Singleton\n    Modulus: modulus,\n    ParmsIdType: parmsIdType,\n    PlainText: plainText,\n    PlainModulus: plainModulus, // Singleton\n    PublicKey: publicKey,\n    RelinKeys: relinKeys,\n    SchemeType: schemeType,\n    SecretKey: secretKey,\n    SecurityLevel: securityLevel, // Singleton\n    Serializable: serializable,\n    Vector: vector\n  }\n}\n","import { Instance } from './seal'\nimport { SecurityLevel } from './security-level'\n\nexport type EncryptionParameterQualifiersDependencies = {\n  (): EncryptionParameterQualifiersConstructorOptions\n}\n\nexport type EncryptionParameterQualifiersConstructorOptions = {\n  (): EncryptionParameterQualifiers\n}\n\nexport type EncryptionParameterQualifiers = {\n  readonly instance: Instance\n  readonly unsafeInject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly parametersSet: () => boolean\n  readonly usingFFT: boolean\n  readonly usingNTT: boolean\n  readonly usingBatching: boolean\n  readonly usingFastPlainLift: boolean\n  readonly usingDescendingModulusChain: boolean\n  readonly securityLevel: SecurityLevel\n}\n\nconst EncryptionParameterQualifiersConstructor = (): EncryptionParameterQualifiersDependencies => (): EncryptionParameterQualifiersConstructorOptions => (): EncryptionParameterQualifiers => {\n  let _instance: Instance\n  /**\n   * @implements EncryptionParameterQualifiers\n   */\n\n  /**\n   * @interface EncryptionParameterQualifiers\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name EncryptionParameterQualifiers#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance. No type checking is performed.\n     *\n     * @private\n     * @function\n     * @name EncryptionParameterQualifiers#unsafeInject\n     * @param {Instance} instance WASM instance\n     */\n    unsafeInject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = instance\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name EncryptionParameterQualifiers#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * If the encryption parameters are set in a way that is considered valid by\n     * Microsoft SEAL, the variable parameters_set is set to true.\n     *\n     * @function\n     * @name EncryptionParameterQualifiers#parametersSet\n     * @type {boolean}\n     */\n    parametersSet() {\n      return _instance.parametersSet()\n    },\n\n    /**\n     * Tells whether FFT can be used for polynomial multiplication. If the\n     * polynomial modulus is of the form X^N+1, where N is a power of two, then\n     * FFT can be used for fast multiplication of polynomials modulo the polynomial\n     * modulus. In this case the variable using_fft will be set to true. However,\n     * currently Microsoft SEAL requires this to be the case for the parameters\n     * to be valid. Therefore, parameters_set can only be true if using_fft is\n     * true.\n     *\n     * @readonly\n     * @name EncryptionParameterQualifiers#usingFFT\n     * @type {boolean}\n     */\n    get usingFFT() {\n      return _instance.usingFFT\n    },\n\n    /**\n     * Tells whether NTT can be used for polynomial multiplication. If the primes\n     * in the coefficient modulus are congruent to 1 modulo 2N, where X^N+1 is the\n     * polynomial modulus and N is a power of two, then the number-theoretic\n     * transform (NTT) can be used for fast multiplications of polynomials modulo\n     * the polynomial modulus and coefficient modulus. In this case the variable\n     * using_ntt will be set to true. However, currently Microsoft SEAL requires\n     * this to be the case for the parameters to be valid. Therefore, parameters_set\n     * can only be true if using_ntt is true.\n     *\n     * @readonly\n     * @name EncryptionParameterQualifiers#usingNTT\n     * @type {boolean}\n     */\n    get usingNTT() {\n      return _instance.usingNTT\n    },\n\n    /**\n     * Tells whether batching is supported by the encryption parameters. If the\n     * plaintext modulus is congruent to 1 modulo 2N, where X^N+1 is the polynomial\n     * modulus and N is a power of two, then it is possible to use the BatchEncoder\n     * class to view plaintext elements as 2-by-(N/2) matrices of integers modulo\n     * the plaintext modulus. This is called batching, and allows the user to\n     * operate on the matrix elements (slots) in a SIMD fashion, and rotate the\n     * matrix rows and columns. When the computation is easily vectorizable, using\n     * batching can yield a huge performance boost. If the encryption parameters\n     * support batching, the variable using_batching is set to true.\n     *\n     * @readonly\n     * @name EncryptionParameterQualifiers#usingBatching\n     * @type {boolean}\n     */\n    get usingBatching() {\n      return _instance.usingBatching\n    },\n\n    /**\n     * Tells whether fast plain lift is supported by the encryption parameters.\n     * A certain performance optimization in multiplication of a ciphertext by\n     * a plaintext (Evaluator::multiply_plain) and in transforming a plaintext\n     * element to NTT domain (Evaluator::transform_to_ntt) can be used when the\n     * plaintext modulus is smaller than each prime in the coefficient modulus.\n     * In this case the variable using_fast_plain_lift is set to true.\n     *\n     * @readonly\n     * @name EncryptionParameterQualifiers#usingFastPlainLift\n     * @type {boolean}\n     */\n    get usingFastPlainLift() {\n      return _instance.usingFastPlainLift\n    },\n\n    /**\n     * Tells whether the coefficient modulus consists of a set of primes that\n     * are in decreasing order. If this is true, certain modular reductions in\n     * base conversion can be omitted, improving performance.\n     *\n     * @readonly\n     * @name EncryptionParameterQualifiers#usingDescendingModulusChain\n     * @type {boolean}\n     */\n    get usingDescendingModulusChain() {\n      return _instance.usingDescendingModulusChain\n    },\n\n    /**\n     * Tells whether the encryption parameters are secure based on the standard\n     * parameters from HomomorphicEncryption.org security standard.\n     *\n     * @readonly\n     * @name EncryptionParameterQualifiers#securityLevel\n     * @type {(SecurityLevel.none|SecurityLevel.tc128|SecurityLevel.tc192|SecurityLevel.tc256)}\n     */\n    get securityLevel() {\n      return _instance.securityLevel\n    }\n  }\n}\n\nexport const EncryptionParameterQualifiersInit = (): EncryptionParameterQualifiersDependencies => {\n  return EncryptionParameterQualifiersConstructor()\n}\n","import { Instance } from './seal'\nimport { Exception } from './exception'\nimport { VectorConstructorOptions } from './vector'\nimport { ComprModeType } from './compr-mode-type'\n\nexport type SerializableDependencyOptions = {\n  readonly Exception: Exception\n  readonly Vector: VectorConstructorOptions\n  readonly ComprModeType: ComprModeType\n}\n\nexport type SerializableDependencies = {\n  ({\n    Exception,\n    Vector,\n    ComprModeType\n  }: SerializableDependencyOptions): SerializableConstructorOptions\n}\n\nexport type SerializableConstructorOptions = {\n  (): Serializable\n}\n\nexport type Serializable = {\n  readonly instance: Instance\n  readonly unsafeInject: (instance: Instance) => void\n  readonly delete: () => void\n  readonly save: (compression?: ComprModeType) => string\n  readonly saveArray: (compression?: ComprModeType) => Uint8Array\n}\n\nconst SerializableConstructor = (): SerializableDependencies => ({\n  Exception,\n  Vector,\n  ComprModeType\n}: SerializableDependencyOptions): SerializableConstructorOptions => (): Serializable => {\n  let _instance: Instance\n\n  /**\n   * @implements Serializable\n   */\n\n  /**\n   * @interface Serializable\n   */\n  return {\n    /**\n     * Get the underlying WASM instance\n     *\n     * @private\n     * @readonly\n     * @name Serializable#instance\n     * @type {Instance}\n     */\n    get instance() {\n      return _instance\n    },\n\n    /**\n     * Inject this object with a raw WASM instance. No type checking is performed.\n     *\n     * @private\n     * @function\n     * @name Serializable#unsafeInject\n     * @param {Instance} instance WASM instance\n     */\n    unsafeInject(instance: Instance) {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n      _instance = instance\n    },\n\n    /**\n     * Delete the underlying WASM instance.\n     *\n     * Should be called before dereferencing this object to prevent the\n     * WASM heap from growing indefinitely.\n     * @function\n     * @name Serializable#delete\n     */\n    delete() {\n      if (_instance) {\n        _instance.delete()\n        _instance = undefined\n      }\n    },\n\n    /**\n     * Save to a base64 string\n     *\n     * @function\n     * @name Serializable#save\n     * @param {ComprModeType} [compression={@link ComprModeType.zstd}] The compression mode to use\n     * @returns {string} Base64 encoded string\n     */\n    save(compression: ComprModeType = ComprModeType.zstd): string {\n      try {\n        return _instance.saveToString(compression)\n      } catch (e) {\n        throw Exception.safe(e)\n      }\n    },\n\n    /**\n     * Save as a binary Uint8Array\n     *\n     * @function\n     * @name Serializable#saveArray\n     * @param {ComprModeType} [compression={@link ComprModeType.zstd}] The compression mode to use\n     * @returns {Uint8Array} A byte array containing the Serializable object in binary form\n     */\n    saveArray(compression: ComprModeType = ComprModeType.zstd): Uint8Array {\n      const tempVect = Vector()\n      const instance = _instance.saveToArray(compression)\n      tempVect.unsafeInject(instance)\n      tempVect.setType('Uint8Array')\n      const tempArr = tempVect.toArray() as Uint8Array\n      tempVect.delete()\n      return tempArr\n    }\n  }\n}\n\nexport const SerializableInit = (): SerializableDependencies => {\n  return SerializableConstructor()\n}\n"],"names":["_scriptDir","Module","document","currentScript","src","undefined","f","aa","ba","ready","Promise","a","b","w","u","hasOwnProperty","ca","da","ea","x","self","location","href","indexOf","substr","lastIndexOf","XMLHttpRequest","open","responseType","send","Uint8Array","response","c","fa","A","z","printErr","console","warn","bind","thisProgram","quit","wasmBinary","noExitRuntime","WebAssembly","B","ha","ia","ka","TextDecoder","la","C","d","subarray","decode","e","h","String","fromCharCode","l","ma","length","charCodeAt","na","wa","F","D","qa","E","G","xa","ya","oa","pa","ra","sa","ta","ua","va","za","buffer","HEAP8","Int8Array","HEAP16","Int16Array","HEAP32","Int32Array","HEAPU8","HEAPU16","Uint16Array","HEAPU32","Uint32Array","HEAPF32","Float32Array","HEAPF64","Float64Array","Aa","Ba","Ca","Da","Ea","Fa","preRun","shift","unshift","I","Ha","onAbort","RuntimeError","preloadedImages","preloadedAudios","J","Ia","startsWith","Ja","locateFile","Ka","Ma","ab","get","Na","this","Va","Sa","Ta","Ra","Ua","La","Pa","TypeError","Qa","K","L","M","replace","Function","Error","name","message","stack","toString","prototype","Object","create","constructor","N","P","Wa","Q","k","m","R","forEach","Array","push","Xa","Ya","Za","$a","count","value","ja","FinalizationGroup","next","done","unregister","register","bb","cb","db","pop","S","eb","fb","ga","arguments","apply","gb","hb","Oa","ib","jb","T","kb","clone","U","lb","mb","fromWireType","nb","ob","qb","V","toWireType","rb","W","includes","concat","call","sb","tb","ub","vb","X","Y","map","join","wb","xb","yb","p","n","r","split","zb","Ab","Bb","Z","Cb","Db","Fb","Gb","Hb","Ib","Jb","Kb","Qb","Lb","Ob","Pb","USER","LOGNAME","PATH","PWD","HOME","LANG","navigator","languages","_","Tb","Ub","Vb","Wb","Xb","Date","getTime","getMonth","getFullYear","getDate","setDate","setMonth","setFullYear","Yb","g","q","v","H","y","getDay","%c","%D","%F","%h","%r","%R","%T","%x","%X","%Ec","%EC","%Ex","%EX","%Ey","%EY","%Od","%Oe","%OH","%OI","%Om","%OM","%OS","%Ou","%OU","%OV","%Ow","%OW","%Oy","RegExp","t","%a","substring","%A","%b","%B","%C","%d","%e","%g","%G","%H","%I","%j","%m","%M","%n","%p","%S","%t","%u","%U","Math","ceil","%V","%w","%W","%y","%Y","%z","abs","slice","%Z","%%","Zb","set","$b","ac","BindingError","InternalError","isAliasOf","getPrototypeOf","isDeleted","deleteLater","argPackAdvance","readValueFromPointer","deleteObject","pb","Ga","pointerType","getInheritedInstanceCount","keys","getLiveInheritedInstances","flushPendingDeletes","setDelayFunction","UnboundTypeError","count_emval_handles","get_first_emval","bc","atob","charAt","dc","cc","O","Eb","s","Symbol","enumerable","configurable","defineProperty","className","values","o","ArrayBuffer","Uint8ClampedArray","i","Nb","Mb","j","copyWithin","min","max","grow","byteLength","Sb","crypto","getRandomValues","Rb","asm","exports","monitorRunDependencies","instance","fetch","resolve","then","credentials","ok","arrayBuffer","catch","instantiate","instantiateWasm","instantiateStreaming","___wasm_call_ctors","_main","___getTypeName","___embind_register_native_and_builtin_types","ec","_malloc","_free","fc","status","hc","calledRun","onRuntimeInitialized","ic","onExit","postRun","setStatus","setTimeout","dynCall_viij","dynCall_viiij","dynCall_iiiij","dynCall_vij","dynCall_iij","dynCall_iiij","dynCall_iiiiij","dynCall_iiiiijj","$","dynCall_iiiiiijj","dynCall_viijii","gc","run","preInit","noInitialRun","BatchEncoderInit","loader","library","Exception","MemoryPoolHandle","PlainText","Vector","context","Constructor","BatchEncoder","_instance","safe","[object Object]","delete","array","plainText","encode","plain","BigInt64Array","stringArray","BigUint64Array","signed","pool","global","tempVect","decodeInt32","unsafeInject","setType","tempArr","toArray","decodeUint32","decodeBigInt","from","slotCount","BatchEncoderConstructor","CipherTextConstructor","ComprModeType","ParmsIdType","parmsId","sizeCapacity","Ciphertext","construct","capacity","reserve","size","resize","release","coeffModulusSize","polyModulusDegree","isTransparent","isNttForm","parms","inject","scale","setScale","save","compression","zstd","saveToString","saveToArray","encoded","loadFromString","loadFromArray","cipher","copy","clonedInstance","move","CipherTextInit","CKKSEncoderInit","CKKSEncoder","decodeDouble","CKKSEncoderConstructor","CoeffModulusInit","SecurityLevel","_MaxBitCount","CoeffModulus","MaxBitCount","_BFVDefault","BFVDefault","_CreateFromArray","CreateFromArray","securityLevel","tc128","vectorModulus","bitSizes","CoeffModulusConstructor","ComprModeTypeInit","_none","none","_zlib","zlib","_zstd","ComprModeTypeConstructor","ContextDataConstructor","EncryptionParameters","EncryptionParameterQualifiers","encryptionParameters","qualifiers","encParmQualifiers","totalCoeffModulusBitCount","prevContextData","cxtData","nextContextData","chainIndex","ContextDataInit","ContextInit","ContextData","encryptionParams","expandModChain","SEALContext","toHuman","getContextData","contextData","keyContextData","firstContextData","lastContextData","parametersSet","keyParmsId","firstParmsId","lastParmsId","usingKeyswitching","ContextConstructor","DecryptorInit","secretKey","Decryptor","cipherText","decrypt","invariantNoiseBudget","DecryptorConstructor","EncryptionParametersInit","Modulus","SchemeType","schemeType","setPolyModulusDegree","coeffModulus","setCoeffModulus","plainModulus","setPlainModulus","scheme","smallModulus","BigInt","EncryptionParametersConstructor","EncryptorInit","CipherText","Serializable","publicKey","Encryptor","constructInstance","encrypt","temp","encryptSerializable","encryptSymmetric","serialized","encryptSymmetricSerializable","encryptZero","encryptZeroSerializable","EncryptorConstructor","EvaluatorInit","Evaluator","encrypted","destination","negate","add","sub","multiply","square","relinKeys","relinearize","cipherModSwitchToNext","cipherModSwitchTo","plainModSwitchToNext","plainModSwitchTo","rescaleToNext","rescaleTo","exponent","exponentiate","addPlain","subPlain","multiplyPlain","destinationNtt","plainTransformToNtt","cipherTransformToNtt","encryptedNtt","cipherTransformFromNtt","galoisElt","galoisKeys","applyGalois","steps","rotateRows","rotateColumns","rotateVector","complexConjugate","sumElements","newDest","EvaluatorConstructor","ExceptionInit","_getException","getException","error","ExceptionConstructor","GaloisKeysConstructor","GaloisKeys","getIndex","hasKey","key","GaloisKeysInit","KeyGeneratorInit","PublicKey","SecretKey","RelinKeys","KeyGenerator","createPublicKey","createPublicKeySerializable","createRelinKeys","createRelinKeysSerializable","createGaloisKeys","createGaloisKeysSerializable","KeyGeneratorConstructor","MemoryPoolHandleInit","_global","MemoryPoolHandleGlobal","_threadLocal","MemoryPoolHandleThreadLocal","threadLocal","MemoryPoolHandleConstructor","ModulusInit","inst","setValue","createModulus","bitCount","isZero","isPrime","ModulusConstructor","ParmsIdTypeInit","ParmsIdTypeConstructor","PlainTextConstructor","coeffCount","Plaintext","shrinkToFit","setZero","significantCoeffCount","nonzeroCoeffCount","toPolynomial","PlainTextInit","PlainModulusInit","_Batching","PlainModulus","Batching","_BatchingVector","BatchingVector","bitSize","smallMod","polyPlainModulusDegree","vectBitSizes","vect","PlainModulusConstructor","PublicKeyConstructor","PublicKeyInit","RelinKeysConstructor","keyPower","RelinKeysInit","SchemeTypeInit","_bfv","bfv","_ckks","ckks","SchemeTypeConstructor","SecretKeyConstructor","SecretKeyInit","SecurityLevelInit","SecLevelType","_tc128","_tc192","tc192","_tc256","tc256","SecurityLevelConstructor","VectorInit","_vecFromArrayUint8","vecFromArrayUint8","_vecFromArrayUint32","vecFromArrayUint32","_vecFromArrayInt32","vecFromArrayInt32","_vecFromArrayFloat64","vecFromArrayFloat64","_vecFromArrayBigInt64","vecFromArrayBigInt64","_vecFromArrayBigUint64","vecFromArrayBigUint64","_vecFromArrayModulus","vecFromArrayModulus","_jsArrayUint8FromVec","jsArrayUint8FromVec","_jsArrayUint32FromVec","jsArrayUint32FromVec","_jsArrayInt32FromVec","jsArrayInt32FromVec","_jsArrayFloat64FromVec","jsArrayFloat64FromVec","_jsArrayStringFromVecInt64","jsArrayStringFromVecInt64","_jsArrayStringFromVecUint64","jsArrayStringFromVecUint64","_jsArrayStringFromVecModulus","jsArrayStringFromVecModulus","_type","type","index","fill","VectorConstructor","async","bin","createLoader","sealLibrary","Loader","Context","exception","comprModeType","memoryPoolHandle","vector","modulus","serializable","parmsIdType","batchEncoder","ckksEncoder","encryptionParameterQualifiers","decryptor","encryptor","evaluator","SEALConstructor","usingFFT","usingNTT","usingBatching","usingFastPlainLift","usingDescendingModulusChain","SEAL"],"mappings":"AACA,IACMA,EADFC,GACED,EAAiC,oBAAbE,UAA4BA,SAASC,cAAgBD,SAASC,cAAcC,SAAMC,WAGnGJ,GAIT,IAAIK,EAAyDC,EAAGC,EAH9DP,EAASA,GAAU,GAGfK,IAAIA,OAAoB,IAAXL,EAAyBA,EAAS,IAAcK,EAAEG,MAAM,IAAIC,SAAQ,SAASC,EAAEC,GAAGL,EAAGI,EAAEH,EAAGI,KAAI,IAASC,EAALC,EAAE,GAAK,IAAID,KAAKP,EAAEA,EAAES,eAAeF,KAAKC,EAAED,GAAGP,EAAEO,IAAI,IAAIG,EAAG,iBAAiB,SAASC,EAAGN,EAAEC,GAAG,MAAMA,EAAG,IAASM,EAALC,EAAE,GAAMA,EAAEC,KAAKC,SAASC,KAAKtB,IAAamB,EAAEnB,GAAmCmB,EAAvB,IAAIA,EAAEI,QAAQ,SAAWJ,EAAEK,OAAO,EAAEL,EAAEM,YAAY,KAAK,GAAK,GAClVP,EAAG,SAASP,GAAG,IAAI,IAAIC,EAAE,IAAIc,eAA4E,OAA7Dd,EAAEe,KAAK,MAAMhB,GAAE,GAAIC,EAAEgB,aAAa,cAAchB,EAAEiB,KAAK,MAAa,IAAIC,WAAWlB,EAAEmB,UAAU,MAAMC,GAAG,GAAGrB,EAAEsB,GAAGtB,GAAG,OAAOA,EAAE,MAAMqB,IAAK,IAA0JE,EAAtJC,EAAE7B,EAAE8B,UAAUC,QAAQC,KAAKC,KAAKF,SAAS,IAAIxB,KAAKC,EAAEA,EAAEC,eAAeF,KAAKP,EAAEO,GAAGC,EAAED,IAAIC,EAAE,KAAKR,EAAEkC,cAAcxB,EAAGV,EAAEkC,aAAalC,EAAEmC,OAAOxB,EAAGX,EAAEmC,MAAYnC,EAAEoC,aAAaR,EAAE5B,EAAEoC,YAAY,IAAIC,EAAcrC,EAAEqC,gBAAe,EAAG,iBAAkBC,aAAaC,EAAE,mCACrb,IAAIC,EAAGC,GAAG,EAAGC,EAAG,oBAAqBC,YAAY,IAAIA,YAAY,aAAQ,EACzE,SAASC,EAAGvC,EAAEC,GAAU,GAAPD,KAAK,EAAO,CAAC,IAAIqB,EAAEmB,EAAaC,GAAXzC,KAAK,GAAUC,EAAE,IAAIA,EAAED,EAAEqB,EAAEpB,IAAI,MAAMA,GAAGwC,MAAMxC,EAAE,GAAG,GAAGA,EAAED,GAAGqB,EAAEqB,UAAUL,EAAGhB,EAAEgB,EAAGM,OAAOtB,EAAEqB,SAAS1C,IAAI,EAAEC,IAAI,QAAQ,CAAC,IAAIwC,EAAE,GAAGzC,EAAEC,GAAG,CAAC,IAAI2C,EAAEvB,EAAErB,MAAM,GAAG,GAAK,IAAF4C,EAAM,CAAC,IAAIC,EAAa,GAAXxB,EAAErB,MAAM,GAAM,GAAG,MAAQ,IAAF4C,GAAOH,GAAGK,OAAOC,cAAgB,GAAFH,IAAO,EAAEC,OAAO,CAAC,IAAIG,EAAa,GAAX3B,EAAErB,MAAM,GAA0E,OAApE4C,EAAE,MAAQ,IAAFA,IAAU,GAAFA,IAAO,GAAGC,GAAG,EAAEG,GAAK,EAAFJ,IAAM,GAAGC,GAAG,GAAGG,GAAG,EAAa,GAAX3B,EAAErB,MAAM,IAAcyC,GAAGK,OAAOC,aAAaH,IAAIA,GAAG,MAAMH,GAAGK,OAAOC,aAAa,MAAMH,GAAG,GAAG,MAAQ,KAAFA,UAAeH,GAAGK,OAAOC,aAAaH,GAAGvB,EAAEoB,QAAQpB,EAAE,GACnf,OAAOA,EAAE,SAAS4B,EAAGjD,EAAEC,EAAEoB,EAAEoB,GAAU,GAAPpB,KAAK,EAAK,EAAEoB,EAAE,CAACA,EAAEpB,EAAEoB,EAAE,EAAE,IAAI,IAAIG,EAAE,EAAEA,EAAE5C,EAAEkD,SAASN,EAAE,CAAC,IAAIC,EAAE7C,EAAEmD,WAAWP,GAAgF,GAA1E,OAAOC,GAAG,OAAOA,IAA2BA,EAAE,QAAU,KAAFA,IAAS,IAAM,KAA3C7C,EAAEmD,aAAaP,IAAoC,KAAKC,EAAE,CAAC,GAAGxB,GAAGoB,EAAE,MAAMxC,EAAEoB,MAAM,GAAGwB,MAAM,CAAC,GAAG,MAAMA,EAAE,CAAC,GAAGxB,EAAE,GAAGoB,EAAE,MAAMxC,EAAEoB,MAAM,GAAG,IAAIwB,GAAG,MAAM,CAAC,GAAG,OAAOA,EAAE,CAAC,GAAGxB,EAAE,GAAGoB,EAAE,MAAMxC,EAAEoB,MAAM,GAAG,IAAIwB,GAAG,OAAO,CAAC,GAAGxB,EAAE,GAAGoB,EAAE,MAAMxC,EAAEoB,MAAM,GAAG,IAAIwB,GAAG,GAAG5C,EAAEoB,MAAM,GAAG,IAAIwB,GAAG,GAAG,GAAG5C,EAAEoB,MAAM,GAAG,IAAIwB,GAAG,EAAE,GAAG5C,EAAEoB,MAAM,GAAG,IAAM,GAAFwB,GAAM5C,EAAEoB,IAAI,GAAG,GAC7b,SAAS+B,EAAGpD,GAAG,IAAI,IAAIC,EAAE,EAAEoB,EAAE,EAAEA,EAAErB,EAAEkD,SAAS7B,EAAE,CAAC,IAAIoB,EAAEzC,EAAEmD,WAAW9B,GAAG,OAAOoB,GAAG,OAAOA,IAAIA,EAAE,QAAU,KAAFA,IAAS,IAAsB,KAAlBzC,EAAEmD,aAAa9B,IAAS,KAAKoB,IAAIxC,EAAEA,EAAE,MAAMwC,EAAExC,EAAE,EAAE,OAAOwC,EAAExC,EAAE,EAAEA,EAAE,EAAE,OAAOA,EAAE,IAEkMoD,EAAGC,EAAEd,EAAEe,EAAEC,EAAGC,EAAEC,EAAEC,EAAGC,EAFjNC,EAAG,oBAAqBvB,YAAY,IAAIA,YAAY,iBAAY,EAAO,SAASwB,EAAG9D,EAAEC,GAAc,IAAX,IAAIoB,EAAErB,GAAG,EAAUyC,EAAEpB,EAAEpB,EAAE,IAAIoB,GAAGoB,IAAIe,EAAGnC,IAAI,MAAMA,EAAQ,GAAG,IAATA,IAAI,GAAUrB,GAAG6D,EAAG,OAAOA,EAAGlB,OAAOH,EAAEE,SAAS1C,IAAI,EAAEqB,IAAI,IAAS,IAALA,EAAE,GAAOoB,EAAE,IAAIA,GAAGxC,EAAE,KAAKwC,EAAE,CAAC,IAAIG,EAAEW,EAAEvD,EAAE,EAAEyC,GAAG,IAAI,GAAG,GAAG,GAAGG,EAAE,MAAMvB,GAAGyB,OAAOC,aAAaH,GAAG,OAAOvB,EAC1e,SAAS0C,EAAG/D,EAAEC,EAAEoB,GAA8B,QAA3B,IAASA,IAAIA,EAAE,YAAe,EAAEA,EAAE,OAAO,EAAO,IAAIoB,EAAExC,EAAEoB,GAAbA,GAAG,GAAc,EAAErB,EAAEkD,OAAO7B,EAAE,EAAErB,EAAEkD,OAAO,IAAI,IAAIN,EAAE,EAAEA,EAAEvB,IAAIuB,EAAEW,EAAEtD,GAAG,IAAI,GAAGD,EAAEmD,WAAWP,GAAG3C,GAAG,EAAgB,OAAdsD,EAAEtD,GAAG,IAAI,GAAG,EAASA,EAAEwC,EAAE,SAASuB,EAAGhE,GAAG,OAAO,EAAEA,EAAEkD,OAAO,SAASe,EAAGjE,EAAEC,GAAG,IAAI,IAAIoB,EAAE,EAAEoB,EAAE,KAAKpB,GAAGpB,EAAE,IAAI,CAAC,IAAI2C,EAAEa,EAAEzD,EAAE,EAAEqB,GAAG,IAAI,GAAG,GAAG,GAAGuB,EAAE,QAAQvB,EAAE,OAAOuB,GAAGA,GAAG,MAAMH,GAAGK,OAAOC,aAAa,MAAMH,GAAG,GAAG,MAAQ,KAAFA,IAASH,GAAGK,OAAOC,aAAaH,GAAG,OAAOH,EAClZ,SAASyB,EAAGlE,EAAEC,EAAEoB,GAAqC,QAA3B,IAASA,IAAIA,EAAE,YAAe,EAAEA,EAAE,OAAO,EAAE,IAAIoB,EAAtDxC,KAAK,EAAqDoB,EAAEoB,EAAEpB,EAAE,EAAE,IAAI,IAAIuB,EAAE,EAAEA,EAAE5C,EAAEkD,SAASN,EAAE,CAAC,IAAIC,EAAE7C,EAAEmD,WAAWP,GAAmG,GAA7F,OAAOC,GAAG,OAAOA,IAA2BA,EAAE,QAAU,KAAFA,IAAS,IAAM,KAA3C7C,EAAEmD,aAAaP,IAAiCa,EAAExD,GAAG,IAAI,GAAG4C,GAAE5C,GAAG,GAAO,EAAEoB,EAAE,MAAoB,OAAdoC,EAAExD,GAAG,IAAI,GAAG,EAASA,EAAEwC,EAAE,SAAS0B,EAAGnE,GAAG,IAAI,IAAIC,EAAE,EAAEoB,EAAE,EAAEA,EAAErB,EAAEkD,SAAS7B,EAAE,CAAC,IAAIoB,EAAEzC,EAAEmD,WAAW9B,GAAG,OAAOoB,GAAG,OAAOA,KAAKpB,EAAEpB,GAAG,EAAE,OAAOA,EACxX,SAASmE,IAAK,IAAIpE,EAAEmC,EAAGkC,OAAOhB,EAAGrD,EAAEL,EAAE2E,MAAMhB,EAAE,IAAIiB,UAAUvE,GAAGL,EAAE6E,OAAOjB,EAAE,IAAIkB,WAAWzE,GAAGL,EAAE+E,OAAOjB,EAAE,IAAIkB,WAAW3E,GAAGL,EAAEiF,OAAOpC,EAAE,IAAIrB,WAAWnB,GAAGL,EAAEkF,QAAQrB,EAAG,IAAIsB,YAAY9E,GAAGL,EAAEoF,QAAQrB,EAAE,IAAIsB,YAAYhF,GAAGL,EAAEsF,QAAQtB,EAAG,IAAIuB,aAAalF,GAAGL,EAAEwF,QAAQvB,EAAG,IAAIwB,aAAapF,GAAG,IAAIqF,EAAGC,EAAG,GAAGC,EAAG,GAAGC,EAAG,GAAGC,EAAG,GAAG,SAASC,IAAK,IAAI1F,EAAEL,EAAEgG,OAAOC,QAAQN,EAAGO,QAAQ7F,GAAM,IAAC8F,EAAE,EAAUC,EAAG,KAC3X,SAAS7D,EAAElC,GAAwI,MAAlIL,EAAEqG,SAAQrG,EAAEqG,QAAQhG,GAAGwB,EAAExB,GAAGoC,GAAG,EAAGpC,EAAE,IAAIiC,YAAYgE,aAAa,SAASjG,EAAE,gDAAgDH,EAAGG,GAASA,EADuOL,EAAEuG,gBAAgB,GAAGvG,EAAEwG,gBAAgB,GAC3Q,IAA+CC,EAA3CC,EAAG,wCAAw8y2C,KAA95y2CD,EAAE,65y2CAAk6y2CE,WAAWD,GAAI,CAAC,IAAIE,EAAGH,EAAEA,EAAEzG,EAAE6G,WAAW7G,EAAE6G,WAAWD,EAAG/F,GAAGA,EAAE+F,EAAG,SAASE,IAAK,IAAIzG,EAAEoG,EAAE,IAAI,GAAGpG,GAAGoG,GAAG7E,EAAE,OAAO,IAAIJ,WAAWI,GAAG,IAAItB,EAAEqB,GAAGtB,GAAG,GAAGC,EAAE,OAAOA,EAAE,GAAGM,EAAG,OAAOA,EAAGP,GAAG,KAAK,kDAAmD,MAAMqB,GAAGa,EAAEb,IACplz2C,SAASqF,EAAG1G,GAAG,KAAK,EAAEA,EAAEkD,QAAQ,CAAC,IAAIjD,EAAED,EAAE4F,QAAQ,GAAG,mBAAmB3F,EAAEA,EAAEN,OAAO,CAAC,IAAI0B,EAAEpB,EAAE0G,GAAG,iBAAkBtF,OAAE,IAASpB,EAAEoF,GAAGA,EAAGuB,IAAIvF,EAAPgE,GAAYA,EAAGuB,IAAIvF,EAAPgE,CAAUpF,EAAEoF,IAAIhE,OAAE,IAASpB,EAAEoF,GAAG,KAAKpF,EAAEoF,MAC9b,SAASwB,EAAG7G,GAAG8G,KAAKvG,GAAGP,EAAE,GAAG8G,KAAKC,GAAG,SAAS9G,GAAGwD,EAAEqD,KAAKvG,GAAG,GAAG,IAAI,GAAGN,GAAG6G,KAAKE,GAAG,SAAS/G,GAAGwD,EAAEqD,KAAKvG,GAAG,GAAG,IAAI,GAAGN,GAAG6G,KAAKG,GAAG,WAAWxD,EAAEqD,KAAKvG,GAAG,GAAG,IAAI,GAAG,GAAGuG,KAAKI,GAAG,WAAW5D,EAAEwD,KAAKvG,GAAG,IAAI,IAAI,GAAG,GAAGuG,KAAKK,GAAG,WAAW7D,EAAEwD,KAAKvG,GAAG,IAAI,IAAI,GAAG,GAAGuG,KAAKM,GAAG,SAASnH,EAAEoB,GAAGyF,KAAKC,GAAG9G,GAAG6G,KAAKE,GAAG3F,GAAGyF,KAAKG,KAAKH,KAAKI,KAAKJ,KAAKK,MAAe,SAASE,EAAGrH,GAAG,OAAOA,GAAG,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,MAAM,IAAIsH,UAAU,sBAAsBtH,IAAK,IAAIuH,OAAG,EAC7d,SAASC,GAAExH,GAAG,IAAI,IAAIC,EAAE,GAAGuC,EAAExC,IAAI,IAAIC,GAAGsH,EAAG/E,EAAExC,MAAM,IAAI,OAAOC,EAAE,IAAIwH,GAAE,GAAGC,GAAE,GAAGR,GAAG,GAAG,SAASF,GAAGhH,GAAG,QAAG,IAASA,EAAE,MAAM,WAA6C,IAAIC,GAAtCD,EAAEA,EAAE2H,QAAQ,iBAAiB,MAAaxE,WAAW,GAAG,OAAO,IAAIlD,GAAG,IAAIA,EAAE,IAAID,EAAEA,EAAE,SAASiH,GAAGjH,EAAEC,GAAW,OAARD,EAAEgH,GAAGhH,GAAS,IAAK4H,SAAS,OAAO,mBAAmB5H,EAAE,uEAA1C,CAAmHC,GACxW,SAASkH,GAAGnH,GAAG,IAAIC,EAAE4H,MAAMxG,EAAE4F,GAAGjH,GAAE,SAASyC,GAAGqE,KAAKgB,KAAK9H,EAAE8G,KAAKiB,QAAQtF,OAAmB,KAAjBA,EAAEoF,MAAMpF,GAAGuF,SAAmBlB,KAAKkB,MAAMlB,KAAKmB,WAAW,KAAKxF,EAAEkF,QAAQ,qBAAqB,QAA4K,OAArKtG,EAAE6G,UAAUC,OAAOC,OAAOnI,EAAEiI,WAAW7G,EAAE6G,UAAUG,YAAYhH,EAAEA,EAAE6G,UAAUD,SAAS,WAAW,YAAO,IAASnB,KAAKiB,QAAQjB,KAAKgB,KAAKhB,KAAKgB,KAAK,KAAKhB,KAAKiB,SAAgB1G,EAAE,IAAIiH,QAAE,EAAO,SAASC,GAAEvI,GAAG,MAAM,IAAIsI,GAAEtI,GAAI,IAAI+G,QAAG,EAAO,SAASyB,GAAGxI,GAAG,MAAM,IAAI+G,GAAG/G,GAChb,SAASyI,GAAEzI,EAAEC,EAAEoB,GAAG,SAASoB,EAAEiG,IAAGA,EAAErH,EAAEqH,IAAKxF,SAASlD,EAAEkD,QAAQsF,GAAG,mCAAmC,IAAI,IAAIG,EAAE,EAAEA,EAAE3I,EAAEkD,SAASyF,EAAEC,GAAE5I,EAAE2I,GAAGD,EAAEC,IAAI3I,EAAE6I,SAAQ,SAASH,GAAGxB,GAAGwB,GAAGzI,KAAI,IAAI2C,EAAEkG,MAAM7I,EAAEiD,QAAQL,EAAE,GAAGG,EAAE,EAAE/C,EAAE4I,SAAQ,SAASH,EAAEC,GAAGjB,GAAEtH,eAAesI,GAAG9F,EAAE+F,GAAGjB,GAAEgB,IAAI7F,EAAEkG,KAAKL,GAAGjB,GAAErH,eAAesI,KAAKjB,GAAEiB,GAAG,IAAIjB,GAAEiB,GAAGK,MAAK,WAAWnG,EAAE+F,GAAGjB,GAAEgB,KAAK1F,IAAMH,EAAEK,QAAQT,EAAEG,UAAQ,IAAIC,EAAEK,QAAQT,EAAEG,GACpX,SAASgG,GAAE5I,EAAEC,EAAEoB,GAAW,GAARA,EAAEA,GAAG,KAAQ,mBAAmBpB,GAAG,MAAM,IAAIqH,UAAU,2DAA2D,IAAI7E,EAAExC,EAAE6H,KAAsE,GAAjE9H,GAAGuI,GAAE,SAAS9F,EAAE,iDAAoDiF,GAAEtH,eAAeJ,GAAG,CAAC,GAAGqB,EAAEoF,GAAG,OAAO8B,GAAE,yBAAyB9F,EAAE,WAAWiF,GAAE1H,GAAGC,SAASiH,GAAGlH,GAAGyH,GAAErH,eAAeJ,KAAKC,EAAEwH,GAAEzH,UAAUyH,GAAEzH,GAAGC,EAAE4I,SAAQ,SAASjG,GAAGA,QAAO,SAASoG,GAAGhJ,GAAGuI,GAAEvI,EAAEK,GAAGiB,GAAGhB,GAAGwH,KAAK,6BAA6B,IAAImB,IAAG,EAAG,SAASC,MAC5c,SAASC,GAAGnJ,KAAKA,EAAEoJ,MAAMC,MAAM,IAAIrJ,EAAEoJ,MAAMC,QAAQrJ,EAAEoC,GAAGpC,EAAEsJ,GAAGzF,GAAG7D,EAAEoC,IAAIpC,EAAEsB,GAAGhB,GAAGuD,GAAG7D,EAAEO,KAAK,SAASoG,GAAG3G,GAAG,MAAG,oBAAqBuJ,mBAAyB5C,GAAG,SAAS1G,GAAG,OAAOA,GAAGD,IAAEiJ,GAAG,IAAIM,mBAAkB,SAAStJ,GAAG,IAAI,IAAIoB,EAAEpB,EAAEuJ,QAAQnI,EAAEoI,KAAKpI,EAAEpB,EAAEuJ,QAAOnI,EAAEA,EAAEgI,OAAQ9I,GAAG4I,GAAG9H,GAAGK,QAAQC,KAAK,2BAA2BN,EAAEd,OAAwD2I,GAAG,SAASjJ,GAAGgJ,GAAGS,WAAWzJ,EAAEI,MAAjFsG,GAAG,SAAS1G,GAA4B,OAAzBgJ,GAAGU,SAAS1J,EAAEA,EAAEI,GAAGJ,EAAEI,IAAWJ,IAAiDD,IAAG,IAAI4J,QAAG,EAAOC,GAAG,GACvb,SAASC,KAAK,KAAKD,GAAG3G,QAAQ,CAAC,IAAIlD,EAAE6J,GAAGE,MAAM/J,EAAEK,GAAGmD,IAAG,EAAGxD,EAAU,UAAK,SAASgK,MAAK,IAAIC,GAAG,GAAG,SAASC,GAAGlK,EAAEC,EAAEoB,GAAG,QAAG,IAASrB,EAAEC,GAAGkK,GAAG,CAAC,IAAI1H,EAAEzC,EAAEC,GAAGD,EAAEC,GAAG,WAA6K,OAAlKD,EAAEC,GAAGkK,GAAG/J,eAAegK,UAAUlH,SAASqF,GAAE,aAAalH,EAAE,iDAAiD+I,UAAUlH,OAAO,uBAAuBlD,EAAEC,GAAGkK,GAAG,MAAanK,EAAEC,GAAGkK,GAAGC,UAAUlH,QAAQmH,MAAMvD,KAAKsD,YAAYpK,EAAEC,GAAGkK,GAAG,GAAGnK,EAAEC,GAAGkK,GAAG1H,EAAEqB,IAAIrB,GACtZ,SAAS6H,GAAGtK,EAAEC,EAAEoB,GAAG1B,EAAES,eAAeJ,UAAK,IAASqB,QAAG,IAAS1B,EAAEK,GAAGmK,SAAI,IAASxK,EAAEK,GAAGmK,GAAG9I,KAAKkH,GAAE,gCAAgCvI,EAAE,WAAWkK,GAAGvK,EAAEK,EAAEA,GAAGL,EAAES,eAAeiB,IAAIkH,GAAE,uFAAuFlH,EAAE,MAAM1B,EAAEK,GAAGmK,GAAG9I,GAAGpB,IAAIN,EAAEK,GAAGC,OAAE,IAASoB,IAAI1B,EAAEK,GAAG4J,GAAGvI,IAAI,SAASkJ,GAAGvK,EAAEC,EAAEoB,EAAEoB,EAAEG,EAAEC,EAAEG,EAAE0F,GAAG5B,KAAKgB,KAAK9H,EAAE8G,KAAKuB,YAAYpI,EAAE6G,KAAK7D,GAAG5B,EAAEyF,KAAKjD,GAAGpB,EAAEqE,KAAKzE,GAAGO,EAAEkE,KAAKT,GAAGxD,EAAEiE,KAAK5C,GAAGlB,EAAE8D,KAAKf,GAAG2C,EAAE5B,KAAK0D,GAAG,GAC3b,SAASC,GAAGzK,EAAEC,EAAEoB,GAAG,KAAKpB,IAAIoB,GAAGpB,EAAEiE,IAAIqE,GAAE,gCAAgClH,EAAEyG,KAAK,wBAAwB7H,EAAE6H,MAAM9H,EAAEC,EAAEiE,GAAGlE,GAAGC,EAAEA,EAAEoC,GAAG,OAAOrC,EAAE,SAAS0K,GAAG1K,EAAEC,GAAG,OAAG,OAAOA,GAAS6G,KAAKxB,IAAIiD,GAAE,uBAAuBzB,KAAKgB,MAAM,IAAE7H,EAAEI,IAAIkI,GAAE,gBAAgBoC,GAAE1K,GAAG,UAAU6G,KAAKgB,MAAM7H,EAAEI,GAAGE,IAAIgI,GAAE,mDAAmDzB,KAAKgB,MAAa2C,GAAGxK,EAAEI,GAAGE,GAAGN,EAAEI,GAAGiB,GAAGhB,GAAGwG,KAAKxG,KACxX,SAASsK,GAAG5K,EAAEC,GAAG,GAAG,OAAOA,EAAE,CAA8C,GAA7C6G,KAAKxB,IAAIiD,GAAE,uBAAuBzB,KAAKgB,MAAShB,KAAKzD,GAAG,CAAC,IAAIhC,EAAEyF,KAAKO,KAAiC,OAA5B,OAAOrH,GAAGA,EAAE+I,KAAKjC,KAAKjD,GAAGxC,GAAUA,EAAE,OAAO,EAA8R,GAA5RpB,EAAEI,IAAIkI,GAAE,gBAAgBoC,GAAE1K,GAAG,UAAU6G,KAAKgB,MAAM7H,EAAEI,GAAGE,IAAIgI,GAAE,mDAAmDzB,KAAKgB,OAAOhB,KAAK3C,IAAIlE,EAAEI,GAAGiB,GAAG6C,IAAIoE,GAAE,oCAAoCtI,EAAEI,GAAGiJ,GAAGrJ,EAAEI,GAAGiJ,GAAGxB,KAAK7H,EAAEI,GAAGiB,GAAGwG,MAAM,sBAAsBhB,KAAKgB,MAAMzG,EAAEoJ,GAAGxK,EAAEI,GAAGE,GAAGN,EAAEI,GAAGiB,GAAGhB,GAAGwG,KAAKxG,IAAOwG,KAAKzD,GAAG,YAAO,IAASpD,EAAEI,GAAG+B,IAAImG,GAAE,mDACvdzB,KAAK0B,IAAI,KAAK,EAAEvI,EAAEI,GAAGiJ,KAAKxC,KAAKzF,EAAEpB,EAAEI,GAAG+B,GAAGmG,GAAE,oCAAoCtI,EAAEI,GAAGiJ,GAAGrJ,EAAEI,GAAGiJ,GAAGxB,KAAK7H,EAAEI,GAAGiB,GAAGwG,MAAM,sBAAsBhB,KAAKgB,MAAM,MAAM,KAAK,EAAEzG,EAAEpB,EAAEI,GAAG+B,GAAG,MAAM,KAAK,EAAE,GAAGnC,EAAEI,GAAGiJ,KAAKxC,KAAKzF,EAAEpB,EAAEI,GAAG+B,OAAO,CAAC,IAAIK,EAAExC,EAAE4K,QAAQxJ,EAAEyF,KAAKS,GAAGlG,EAAEyJ,IAAE,WAAWrI,EAAU,aAAO,OAAOzC,GAAGA,EAAE+I,KAAKjC,KAAKjD,GAAGxC,GAAG,MAAM,QAAQkH,GAAE,+BAA+B,OAAOlH,EACpW,SAAS0J,GAAG/K,EAAEC,GAAG,OAAG,OAAOA,GAAS6G,KAAKxB,IAAIiD,GAAE,uBAAuBzB,KAAKgB,MAAM,IAAE7H,EAAEI,IAAIkI,GAAE,gBAAgBoC,GAAE1K,GAAG,UAAU6G,KAAKgB,MAAM7H,EAAEI,GAAGE,IAAIgI,GAAE,mDAAmDzB,KAAKgB,MAAM7H,EAAEI,GAAGiB,GAAG6C,IAAIoE,GAAE,mCAAmCtI,EAAEI,GAAGiB,GAAGwG,KAAK,sBAAsBhB,KAAKgB,MAAa2C,GAAGxK,EAAEI,GAAGE,GAAGN,EAAEI,GAAGiB,GAAGhB,GAAGwG,KAAKxG,KAAI,SAAS0K,GAAGhL,GAAG,OAAO8G,KAAKmE,aAAavH,EAAE1D,IAAI,IAAI,SAASkL,GAAGlL,EAAEC,EAAEoB,GAAG,OAAGpB,IAAIoB,EAASrB,OAAK,IAASqB,EAAEgB,IAAqC,QAAtBrC,EAAEkL,GAAGlL,EAAEC,EAAEoB,EAAEgB,KAAhB,KAAyChB,EAAE0E,GAAG/F,GAChf,IAAImL,GAAG,GAAyG,SAASC,GAAGpL,EAAEC,GAAwJ,OAArJA,EAAEqB,IAAIrB,EAAEM,IAAIiI,GAAG,8CAA8CvI,EAAEqJ,MAAOrJ,EAAEmC,IAAIoG,GAAG,oDAAoDvI,EAAEmJ,MAAM,CAACC,MAAM,GAAU1C,GAAGwB,OAAOC,OAAOpI,EAAE,CAACK,GAAG,CAACgJ,MAAMpJ,MAC3T,SAASoL,GAAErL,EAAEC,EAAEoB,EAAEoB,GAAGqE,KAAKgB,KAAK9H,EAAE8G,KAAKxG,GAAGL,EAAE6G,KAAKxB,GAAGjE,EAAEyF,KAAK3C,GAAG1B,EAAEqE,KAAKzD,IAAG,EAAGyD,KAAKjD,GAAGiD,KAAKS,GAAGT,KAAKO,GAAGP,KAAKpB,GAAGoB,KAAK0B,GAAG1B,KAAKD,QAAG,OAAO,IAAS5G,EAAEoC,GAAGyE,KAAKwE,WAAWV,IAAI9D,KAAKwE,WAAW7I,EAAEiI,GAAGK,GAAGjE,KAAKvE,GAAG,MAAM,SAASgJ,GAAGvL,EAAEC,EAAEoB,GAAG1B,EAAES,eAAeJ,IAAIwI,GAAG,4CAAuC,IAAS7I,EAAEK,GAAGmK,SAAI,IAAS9I,EAAE1B,EAAEK,GAAGmK,GAAG9I,GAAGpB,GAAGN,EAAEK,GAAGC,EAAEN,EAAEK,GAAG8D,GAAGzC,GACxF,SAASmK,GAAExL,EAAEC,GAAU,IAAIoB,GAAXrB,EAAEwH,GAAExH,IAAWyL,SAAS,KAApS,SAAYzL,EAAEC,GAAG,IAAIoB,EAAE,GAAG,OAAO,WAAWA,EAAE6B,OAAOkH,UAAUlH,OAAO,IAAI,IAAIT,EAAE,EAAEA,EAAE2H,UAAUlH,OAAOT,IAAIpB,EAAEoB,GAAG2H,UAAU3H,GAA0H,OAAvHzC,EAAEyL,SAAS,MAAMhJ,EAAE9C,EAAE,WAAWK,GAAGyC,EAAEpB,GAAGA,EAAE6B,OAAOT,EAAE4H,MAAM,KAAK,CAACpK,GAAGyL,OAAOrK,IAAIoB,EAAEkJ,KAAK,KAAK1L,IAAIwC,EAAE4C,EAAGuB,IAAI3G,GAAGoK,MAAM,KAAKhJ,GAAUoB,GAAgDmJ,CAAG5L,EAAEC,GAAGoF,EAAGuB,IAAI3G,GAAiF,MAA9E,mBAAoBoB,GAAGkH,GAAE,2CAA2CvI,EAAE,KAAKC,GAAUoB,EAAE,IAAIwK,QAAG,EAAO,SAASC,GAAG9L,GAAW,IAAIC,EAAEuH,GAAdxH,EAAE+L,GAAG/L,IAAmB,OAALgM,GAAEhM,GAAUC,EAC9c,SAASgM,GAAEjM,EAAEC,GAA0E,IAAIwC,EAAE,GAAGG,EAAE,GAAgB,MAAb3C,EAAE4I,SAAvF,SAASxH,EAAEwB,GAAGD,EAAEC,IAAI6E,GAAE7E,KAAKqE,GAAGrE,GAAGqE,GAAGrE,GAAGgG,QAAQxH,IAAIoB,EAAEsG,KAAKlG,GAAGD,EAAEC,IAAG,OAAsC,IAAIgJ,GAAG7L,EAAE,KAAKyC,EAAEyJ,IAAIJ,IAAIK,KAAK,CAAC,QAAS,SAASC,GAAGpM,GAAG,IAAIC,EAAE2H,SAAS,KAAK3H,aAAa2H,UAAU,MAAM,IAAIN,UAAU,4CAA4CrH,EAAE,4BAA4B,IAAIoB,EAAE4F,GAAGhH,EAAE6H,MAAM,uBAAsB,eAA6D,OAA/CzG,EAAE6G,UAAUjI,EAAEiI,UAAU7G,EAAE,IAAIA,GAAErB,EAAEC,EAAEoK,MAAMhJ,EAAErB,cAAuBmI,OAAOnI,EAAEqB,EAAE,SAASgL,GAAGrM,GAAG,KAAKA,EAAEkD,QAAQ,CAAC,IAAIjD,EAAED,EAAE+J,MAAM/J,EAAE+J,KAAF/J,CAAQC,IAC/e,SAASqM,GAAGtM,EAAEC,EAAEoB,EAAEoB,EAAEG,GAAG,IAAIC,EAAE5C,EAAEiD,OAAO,EAAEL,GAAG0F,GAAE,kFAAkF,IAAIvF,EAAE,OAAO/C,EAAE,IAAI,OAAOoB,EAAEqH,GAAE,EAAG,IAAIrH,EAAE,EAAEA,EAAEpB,EAAEiD,SAAS7B,EAAE,GAAG,OAAOpB,EAAEoB,SAAI,IAASpB,EAAEoB,GAAGkB,GAAG,CAACmG,GAAE,EAAG,MAAM,IAAIC,EAAE,SAAS1I,EAAE,GAAG6H,KAAKyE,EAAE,GAAGC,EAAE,GAAG,IAAInL,EAAE,EAAEA,EAAEwB,EAAE,IAAIxB,EAAEkL,IAAI,IAAIlL,EAAE,KAAK,IAAI,MAAMA,EAAEmL,IAAI,IAAInL,EAAE,KAAK,IAAI,MAAMA,EAAE,QAAQrB,EAAE,mBAAmBgH,GAAGhH,GAAG,IAAIuM,EAAE,kCAAkC1J,EAAE,GAAG,oCAAoC7C,EAAE,8DACpc6C,EAAE,GAAG,iBAAiB6F,IAAI1I,GAAG,2BAA2B,IAAIyM,EAAE/D,EAAE,cAAc,OAA4K,IAArK6D,EAAE,iEAAiEG,MAAM,KAAKjK,EAAE,CAAC8F,GAAE9F,EAAEG,EAAEyJ,GAAGpM,EAAE,GAAGA,EAAE,IAAI+C,IAAIhD,GAAG,yCAAyCyM,EAAE,cAAkBpL,EAAE,EAAEA,EAAEwB,EAAE,IAAIxB,EAAErB,GAAG,UAAUqB,EAAE,kBAAkBA,EAAE,eAAeoL,EAAE,QAAQpL,EAAE,SAASpB,EAAEoB,EAAE,GAAGyG,KAAK,KAAKyE,EAAExD,KAAK,UAAU1H,GAAGoB,EAAEsG,KAAK9I,EAAEoB,EAAE,IAA+G,GAA3G2B,IAAIwJ,EAAE,aAAa,EAAEA,EAAEtJ,OAAO,KAAK,IAAIsJ,GAAGxM,IAAI2I,EAAE,YAAY,IAAI,cAAc,EAAE6D,EAAEtJ,OAAO,KAAK,IAAIsJ,EAAE,OAAU9D,EAAE1I,GACxf,sCAAsC,IAAIqB,EAAE2B,EAAE,EAAE,EAAE3B,EAAEpB,EAAEiD,SAAS7B,EAAEwB,EAAE,IAAIxB,EAAE,YAAY,OAAOA,EAAE,GAAG,QAAQ,OAAOpB,EAAEoB,GAAGkB,KAAKvC,GAAG6C,EAAE,SAASA,EAAE,SAAS5C,EAAEoB,GAAGyG,KAAK,KAAKyE,EAAExD,KAAKlG,EAAE,SAASJ,EAAEsG,KAAK9I,EAAEoB,GAAGkB,KAAkF,OAA7EoG,IAAI3I,GAAG,sDAAsDuM,EAAExD,KAAK/I,EAAE,OAAcoM,GAAGG,GAAGlC,MAAM,KAAK5H,GAAG,SAASkK,GAAG3M,EAAEC,GAAG,IAAI,IAAIoB,EAAE,GAAGoB,EAAE,EAAEA,EAAEzC,EAAEyC,IAAIpB,EAAE0H,KAAKtF,GAAGxD,GAAG,GAAGwC,IAAI,IAAI,OAAOpB,EACtX,SAASuL,GAAG5M,EAAEC,EAAEoB,GAAgO,OAA7NrB,aAAamI,QAAQI,GAAElH,EAAE,yBAAyBrB,GAAGA,aAAaC,EAAEK,GAAG+H,aAAaE,GAAElH,EAAE,qCAAqCrB,EAAEqI,YAAYP,MAAM9H,EAAEK,GAAGE,IAAIgI,GAAE,yCAAyClH,EAAE,sBAA6BoJ,GAAGzK,EAAEK,GAAGE,GAAGP,EAAEK,GAAGiB,GAAGhB,GAAGL,EAAEK,IAAI,IAAIuM,GAAG,GAAGC,GAAE,CAAC,GAAG,CAACzD,WAAM,GAAQ,CAACA,MAAM,MAAM,CAACA,OAAM,GAAI,CAACA,OAAM,IAAK,SAAS0D,GAAG/M,GAAG,EAAEA,GAAG,KAAM8M,GAAE9M,GAAGuF,KAAKuH,GAAE9M,QAAG,EAAO6M,GAAG9D,KAAK/I,IAC9Y,SAAS8K,GAAE9K,GAAG,OAAOA,GAAG,UAAK,EAAO,OAAO,EAAE,KAAK,KAAK,OAAO,EAAE,KAAK,EAAG,OAAO,EAAE,KAAK,EAAG,OAAO,EAAE,QAAQ,IAAIC,EAAE4M,GAAG3J,OAAO2J,GAAG9C,MAAM+C,GAAE5J,OAA2B,OAApB4J,GAAE7M,GAAG,CAACsF,GAAG,EAAE8D,MAAMrJ,GAAUC,GAAG,SAAS+M,GAAGhN,EAAEC,EAAEoB,GAAG,OAAOpB,GAAG,KAAK,EAAE,OAAO,SAASwC,GAAG,OAAOqE,KAAKmE,cAAc5J,EAAEiC,EAAEd,GAAGC,IAAI,KAAK,KAAK,EAAE,OAAO,SAASA,GAAG,OAAOqE,KAAKmE,cAAc5J,EAAEkC,EAAEC,GAAIf,IAAI,KAAK,KAAK,EAAE,OAAO,SAASA,GAAG,OAAOqE,KAAKmE,cAAc5J,EAAEoC,EAAEC,GAAGjB,IAAI,KAAK,QAAQ,MAAM,IAAI6E,UAAU,yBAAyBtH,IACzc,SAASiN,GAAGjN,EAAEC,GAAG,IAAIoB,EAAEqG,GAAE1H,GAA+C,YAA5C,IAASqB,GAAGkH,GAAEtI,EAAE,qBAAqB6L,GAAG9L,IAAWqB,EAAE,SAASsJ,GAAE3K,GAAG,GAAG,OAAOA,EAAE,MAAM,OAAO,IAAIC,SAASD,EAAE,MAAM,WAAWC,GAAG,UAAUA,GAAG,aAAaA,EAAED,EAAEiI,WAAW,GAAGjI,EAAE,SAASkN,GAAGlN,EAAEC,GAAG,OAAOA,GAAG,KAAK,EAAE,OAAO,SAASoB,GAAG,OAAOyF,KAAKmE,aAAatH,EAAGtC,IAAI,KAAK,KAAK,EAAE,OAAO,SAASA,GAAG,OAAOyF,KAAKmE,aAAarH,EAAGvC,IAAI,KAAK,QAAQ,MAAM,IAAIiG,UAAU,uBAAuBtH,IACrZ,SAASmN,GAAGnN,EAAEC,EAAEoB,GAAG,OAAOpB,GAAG,KAAK,EAAE,OAAOoB,EAAE,SAASoB,GAAG,OAAOa,EAAEb,IAAI,IAAI,SAASA,GAAG,OAAOD,EAAEC,IAAI,IAAI,KAAK,EAAE,OAAOpB,EAAE,SAASoB,GAAG,OAAOc,EAAEd,IAAI,IAAI,SAASA,GAAG,OAAOe,EAAGf,IAAI,IAAI,KAAK,EAAE,OAAOpB,EAAE,SAASoB,GAAG,OAAOgB,EAAEhB,IAAI,IAAI,SAASA,GAAG,OAAOiB,EAAEjB,IAAI,IAAI,QAAQ,MAAM,IAAI6E,UAAU,yBAAyBtH,IAAK,SAASoN,GAAGpN,GAA+C,OAA5CA,GAAGuI,GAAE,oCAAoCvI,GAAU8M,GAAE9M,GAAGqJ,MAAM,IAAIgE,GAAG,GAAG,SAASC,GAAGtN,GAAG,IAAIC,EAAEoN,GAAGrN,GAAG,YAAO,IAASC,EAAEuH,GAAExH,GAAGC,EAAE,IAErGsN,GAFyGC,GAAG,GAChTC,GAAG,GAC3J,SAASC,KAAK,IAAIH,GAAG,CAAC,IAAwNtN,EAApND,EAAE,CAAC2N,KAAK,WAAWC,QAAQ,WAAWC,KAAK,IAAIC,IAAI,IAAIC,KAAK,iBAAiBC,MAAM,iBAAkBC,WAAWA,UAAUC,WAAWD,UAAUC,UAAU,IAAI,KAAKvG,QAAQ,IAAI,KAAK,SAASwG,EAAE9N,GAAI,kBAAoB,IAAIJ,KAAKwN,QAAG,IAASA,GAAGxN,UAAUD,EAAEC,GAAGD,EAAEC,GAAGwN,GAAGxN,GAAG,IAAIoB,EAAE,GAAG,IAAIpB,KAAKD,EAAEqB,EAAE0H,KAAK9I,EAAE,IAAID,EAAEC,IAAIsN,GAAGlM,EAAE,OAAOkM,GAChD,SAASa,GAAGpO,GAAG,OAAO,GAAIA,EAAE,IAAI,GAAIA,EAAE,KAAK,GAAIA,EAAE,KAAK,SAASqO,GAAGrO,EAAEC,GAAG,IAAI,IAAIoB,EAAE,EAAEoB,EAAE,EAAEA,GAAGxC,EAAEoB,GAAGrB,EAAEyC,MAAM,OAAOpB,EAAE,IAAIiN,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IACve,SAASC,GAAGxO,EAAEC,GAAG,IAAID,EAAE,IAAIyO,KAAKzO,EAAE0O,WAAW,EAAEzO,GAAG,CAAC,IAAIoB,EAAErB,EAAE2O,WAAWlM,GAAG2L,GAAGpO,EAAE4O,eAAeN,GAAGC,IAAIlN,GAAG,KAAGpB,EAAEwC,EAAEzC,EAAE6O,WAAoH,CAAC7O,EAAE8O,QAAQ9O,EAAE6O,UAAU5O,GAAG,MAApIA,GAAGwC,EAAEzC,EAAE6O,UAAU,EAAE7O,EAAE8O,QAAQ,GAAG,GAAGzN,EAAErB,EAAE+O,SAAS1N,EAAE,IAAIrB,EAAE+O,SAAS,GAAG/O,EAAEgP,YAAYhP,EAAE4O,cAAc,IAAyC,OAAO5O,EAC5Q,SAASiP,GAAGjP,EAAEC,EAAEoB,EAAEoB,GAAG,SAASG,EAAEsM,EAAEC,EAAEC,GAAG,IAAIF,EAAE,iBAAkBA,EAAEA,EAAEjH,WAAWiH,GAAG,GAAGA,EAAEhM,OAAOiM,GAAGD,EAAEE,EAAE,GAAGF,EAAE,OAAOA,EAAE,SAASrM,EAAEqM,EAAEC,GAAG,OAAOvM,EAAEsM,EAAEC,EAAE,KAAK,SAASnM,EAAEkM,EAAEC,GAAG,SAASC,EAAEC,GAAG,OAAO,EAAEA,GAAG,EAAE,EAAEA,EAAE,EAAE,EAAE,IAAIC,EAAmH,OAAjH,KAAKA,EAAEF,EAAEF,EAAEN,cAAcO,EAAEP,iBAAiB,KAAKU,EAAEF,EAAEF,EAAEP,WAAWQ,EAAER,eAAeW,EAAEF,EAAEF,EAAEL,UAAUM,EAAEN,YAAmBS,EAAE,SAAS5G,EAAEwG,GAAG,OAAOA,EAAEK,UAAU,KAAK,EAAE,OAAO,IAAId,KAAKS,EAAEN,cAAc,EAAE,GAAG,IAAI,KAAK,EAAE,OAAOM,EAAE,KAAK,EAAE,OAAO,IAAIT,KAAKS,EAAEN,cAAc,EAAE,GAAG,KAAK,EAAE,OAAO,IAAIH,KAAKS,EAAEN,cAC9e,EAAE,GAAG,KAAK,EAAE,OAAO,IAAIH,KAAKS,EAAEN,cAAc,EAAE,GAAG,KAAK,EAAE,OAAO,IAAIH,KAAKS,EAAEN,cAAc,EAAE,GAAG,IAAI,KAAK,EAAE,OAAO,IAAIH,KAAKS,EAAEN,cAAc,EAAE,GAAG,KAAK,SAASjG,EAAEuG,GAAGA,EAAEV,GAAG,IAAIC,KAAKS,EAAE/M,GAAG,KAAK,EAAE,GAAG+M,EAAE9K,IAAI,IAAI+K,EAAE,IAAIV,KAAKS,EAAEN,cAAc,EAAE,EAAE,GAAGQ,EAAE1G,EAAE,IAAI+F,KAAKS,EAAEN,cAAc,EAAE,IAAW,OAAPO,EAAEzG,EAAEyG,GAAU,GAAGnM,EAAEoM,EAAEF,GAAG,GAAGlM,EAAEmM,EAAED,GAAGA,EAAEN,cAAc,EAAEM,EAAEN,cAAcM,EAAEN,cAAc,EAAE,IAAIrC,EAAE9I,EAAEhB,EAAE,IAAI,IAAI,GACyE,IAAI,IAAI+J,KAD9E/J,EAAE,CAACyG,GAAGzF,EAAEhB,GAAG,IAAI,GAAGwG,GAAGxF,EAAEhB,EAAE,GAAG,IAAI,GAAGkB,GAAGF,EAAEhB,EAAE,GAAG,IAAI,GAAGwB,GAAGR,EAAEhB,EAAE,IAAI,IAAI,GAAGsB,GAAGN,EAAEhB,EAAE,IAAI,IAAI,GAAGN,GAAGsB,EAAEhB,EAAE,IAAI,IAAI,GAAGmB,GAAGH,EAAEhB,EAAE,IAAI,IAAI,GAAG2B,GAAGX,EAAEhB,EACxf,IAAI,IAAI,GAAGoH,GAAGpG,EAAEhB,EAAE,IAAI,IAAI,GAAGuG,GAAGvF,EAAEhB,EAAE,IAAI,IAAI,GAAG0G,GAAGoD,EAAEhK,EAAGgK,GAAG,IAAIlL,EAAEkB,EAAGlB,GAAGkL,EAAE,CAACiD,KAAK,uBAAuBC,KAAK,WAAWC,KAAK,WAAWC,KAAK,KAAKC,KAAK,cAAcC,KAAK,QAAQC,KAAK,WAAWC,KAAK,WAAWC,KAAK,WAAWC,MAAM,KAAKC,MAAM,KAAKC,MAAM,WAAWC,MAAM,WAAWC,MAAM,KAAKC,MAAM,KAAKC,MAAM,KAAKC,MAAM,KAAKC,MAAM,KAAKC,MAAM,KAAKC,MAAM,KAAKC,MAAM,KAAKC,MAAM,KAAKC,MAAM,KAAKC,MAAM,KAAKC,MAAM,KAAKC,MAAM,KAAKC,MAAM,KAAKC,MAAM,MAAqB9P,EAAEA,EAAEsG,QAAQ,IAAIyJ,OAAO5E,EAAE,KAAKD,EAAEC,IAAI,IAAIC,EACpf,2DAA2DC,MAAM,KAAK2E,EAAE,wFAAwF3E,MAAM,KAGsU,IAAIF,KAHrUD,EAAE,CAAC+E,KAAK,SAASpC,GAAG,OAAOzC,EAAEyC,EAAEtL,IAAI2N,UAAU,EAAE,IAAIC,KAAK,SAAStC,GAAG,OAAOzC,EAAEyC,EAAEtL,KAAK6N,KAAK,SAASvC,GAAG,OAAOmC,EAAEnC,EAAEnL,IAAIwN,UAAU,EAAE,IAAIG,KAAK,SAASxC,GAAG,OAAOmC,EAAEnC,EAAEnL,KAAK4N,KAAK,SAASzC,GAAG,OAAOrM,GAAGqM,EAAE/M,GAAG,MAAM,IAAI,EAAE,IAAIyP,KAAK,SAAS1C,GAAG,OAAOrM,EAAEqM,EAAEjL,GAAG,IAAI4N,KAAK,SAAS3C,GAAG,OAAOtM,EAAEsM,EAAEjL,GAAG,EAAE,MAAM6N,KAAK,SAAS5C,GAAG,OAAOvG,EAAEuG,GAAGjH,WAAWsJ,UAAU,IAC5fQ,KAAK,SAAS7C,GAAG,OAAOvG,EAAEuG,IAAI8C,KAAK,SAAS9C,GAAG,OAAOrM,EAAEqM,EAAEvL,GAAG,IAAIsO,KAAK,SAAS/C,GAAkC,OAAxB,IAAPA,EAAEA,EAAEvL,IAAQuL,EAAE,GAAG,GAAGA,IAAIA,GAAG,IAAWrM,EAAEqM,EAAE,IAAIgD,KAAK,SAAShD,GAAG,OAAOrM,EAAEqM,EAAEjL,GAAGoK,GAAGD,GAAGc,EAAE/M,GAAG,MAAMmM,GAAGC,GAAGW,EAAEnL,GAAG,GAAG,IAAIoO,KAAK,SAASjD,GAAG,OAAOrM,EAAEqM,EAAEnL,GAAG,EAAE,IAAIqO,KAAK,SAASlD,GAAG,OAAOrM,EAAEqM,EAAEjG,GAAG,IAAIoJ,KAAK,WAAW,MAAM,MAAMC,KAAK,SAASpD,GAAG,OAAO,GAAGA,EAAEvL,IAAI,GAAGuL,EAAEvL,GAAG,KAAK,MAAM4O,KAAK,SAASrD,GAAG,OAAOrM,EAAEqM,EAAEhG,GAAG,IAAIsJ,KAAK,WAAW,MAAM,MAAMC,KAAK,SAASvD,GAAG,OAAOA,EAAEtL,IAAI,GAAG8O,KAAK,SAASxD,GAAG,IAAIC,EAAE,IAAIV,KAAKS,EAAE/M,GAAG,KAAK,EAAE,GAAGiN,EAAE,IAAID,EAAEI,SACjfJ,EAAEX,GAAGW,EAAE,EAAEA,EAAEI,UAA0C,OAAO,EAAEvM,EAAEoM,EAA3CF,EAAE,IAAIT,KAAKS,EAAE/M,GAAG,KAAK+M,EAAEnL,GAAGmL,EAAEjL,KAAoBpB,EAAE8P,KAAKC,MAAM,GAAGxD,EAAEP,WAAWR,GAAGD,GAAGc,EAAEN,eAAeN,GAAGC,GAAGW,EAAEP,WAAW,GAAG,IAAIO,EAAEL,WAAW,GAAG,GAAG,IAAI7L,EAAEoM,EAAED,GAAG,KAAK,MAAM0D,KAAK,SAAS3D,GAAG,IAAIC,EAAE,IAAIV,KAAKS,EAAE/M,GAAG,KAAK,EAAE,GAAGiN,EAAE1G,EAAE,IAAI+F,KAAKS,EAAE/M,GAAG,KAAK,EAAE,IAAIgN,EAAEzG,EAAEyG,GAAG,IAAIG,EAAEd,GAAG,IAAIC,KAAKS,EAAE/M,GAAG,KAAK,EAAE,GAAG+M,EAAE9K,IAAI,OAAO,EAAEpB,EAAEsM,EAAEF,GAAG,KAAK,GAAGpM,EAAEmM,EAAEG,GAAG,KAAKzM,EAAE8P,KAAKC,MAAMxD,EAAER,cAAcM,EAAE/M,GAAG,KAAK+M,EAAE9K,GAAG,GAAGgL,EAAEP,UAAUK,EAAE9K,GAAG,EAAEgL,EAAEP,WAAW,GAAG,IAAIiE,KAAK,SAAS5D,GAAG,OAAOA,EAAEtL,IAAImP,KAAK,SAAS7D,GAAG,IAAIC,EAAE,IAAIV,KAAKS,EAAE/M,GAAG,EACnf,GAAGiN,EAAE,IAAID,EAAEI,SAASJ,EAAEX,GAAGW,EAAE,IAAIA,EAAEI,SAAS,EAAE,EAAEJ,EAAEI,SAAS,GAAmC,OAAO,EAAEvM,EAAEoM,EAA3CF,EAAE,IAAIT,KAAKS,EAAE/M,GAAG,KAAK+M,EAAEnL,GAAGmL,EAAEjL,KAAoBpB,EAAE8P,KAAKC,MAAM,GAAGxD,EAAEP,WAAWR,GAAGD,GAAGc,EAAEN,eAAeN,GAAGC,GAAGW,EAAEP,WAAW,GAAG,IAAIO,EAAEL,WAAW,GAAG,GAAG,IAAI7L,EAAEoM,EAAED,GAAG,KAAK,MAAM6D,KAAK,SAAS9D,GAAG,OAAOA,EAAE/M,GAAG,MAAM8F,WAAWsJ,UAAU,IAAI0B,KAAK,SAAS/D,GAAG,OAAOA,EAAE/M,GAAG,MAAM+Q,KAAK,SAAShE,GAAU,IAAIC,EAAE,IAAbD,EAAEA,EAAElG,IAA+B,OAAjBkG,EAAEyD,KAAKQ,IAAIjE,GAAG,IAAUC,EAAE,IAAI,KAAKrM,OAAO,QAAQoM,EAAE,GAAG,IAAIA,EAAE,KAAKkE,OAAO,IAAIC,KAAK,SAASnE,GAAG,OAAOA,EAAE/F,IAAImK,KAAK,WAAW,MAAM,MAAiBjS,EAAEoK,SAASe,KACjgBnL,EAAEA,EAAEsG,QAAQ,IAAIyJ,OAAO5E,EAAE,KAAKD,EAAEC,GAAG/J,KAAa,OAAR+J,EAKzC,SAAYxM,GAAG,IAAIC,EAAE6I,MAAM1F,EAAGpD,GAAG,GAAsB,OAAnBiD,EAAGjD,EAAEC,EAAE,EAAEA,EAAEiD,QAAejD,EALnBsT,CAAGlS,IAAQ6B,OAAOjD,EAAS,GAAEqD,EAAEkQ,IAAIhH,EAAExM,IAAI,GAAUwM,EAAEtJ,OAAO,GAAE,IAAI,IAAIuQ,GAAG3K,MAAM,KAAK4K,GAAG,EAAE,IAAIA,KAAKA,GAAGD,GAAGC,IAAI5Q,OAAOC,aAAa2Q,IAAInM,EAAGkM,GAAGnL,GAAE3I,EAAEgU,aAAaxM,GAAG,gBAAgBJ,GAAGpH,EAAEiU,cAAczM,GAAG,iBAAiB6C,GAAE9B,UAAU2L,UAAU,SAAS7T,GAAG,KAAK8G,gBAAgBkD,IAAGhK,aAAagK,IAAG,OAAM,EAAG,IAAI/J,EAAE6G,KAAKzG,GAAGiB,GAAGhB,GAAGe,EAAEyF,KAAKzG,GAAGE,GAAGkC,EAAEzC,EAAEK,GAAGiB,GAAGhB,GAAG,IAAIN,EAAEA,EAAEK,GAAGE,GAAGN,EAAEoC,IAAIhB,EAAEpB,EAAEiE,GAAG7C,GAAGpB,EAAEA,EAAEoC,GAAG,KAAKI,EAAEJ,IAAIrC,EAAEyC,EAAEyB,GAAGlE,GAAGyC,EAAEA,EAAEJ,GAAG,OAAOpC,IAAIwC,GAAGpB,IAAIrB,GACpdgK,GAAE9B,UAAU2C,MAAM,WAAgC,GAArB/D,KAAKzG,GAAGE,IAAIyI,GAAGlC,MAASA,KAAKzG,GAAG2D,GAAG,OAAO8C,KAAKzG,GAAG+I,MAAMC,OAAO,EAAEvC,KAAK,IAAI9G,EAAE2G,GAAG1G,EAAEkI,OAAO9G,EAAEpB,EAAEmI,OAAO3F,EAAE0F,OAAO2L,eAAehN,MAAMlE,EAAEkE,KAAKzG,GAAgI,OAA7HL,EAAEA,EAAEqB,EAAEsK,KAAK1L,EAAEwC,EAAE,CAACpC,GAAG,CAACgJ,MAAM,CAACD,MAAMxG,EAAEwG,MAAM5F,GAAGZ,EAAEY,GAAGQ,GAAGpB,EAAEoB,GAAGzD,GAAGqC,EAAErC,GAAGe,GAAGsB,EAAEtB,GAAGc,GAAGQ,EAAER,GAAGkH,GAAG1G,EAAE0G,SAAUjJ,GAAG+I,MAAMC,OAAO,EAAErJ,EAAEK,GAAGmD,IAAG,EAAUxD,GAAGgK,GAAE9B,UAAkB,OAAE,WAAWpB,KAAKzG,GAAGE,IAAIyI,GAAGlC,MAAMA,KAAKzG,GAAGmD,KAAKsD,KAAKzG,GAAG2D,IAAIuE,GAAE,yCAAyCW,GAAGpC,MAAMqC,GAAGrC,KAAKzG,IAAIyG,KAAKzG,GAAG2D,KAAK8C,KAAKzG,GAAG+B,QAAG,EAAO0E,KAAKzG,GAAGE,QAAG,IACxeyJ,GAAE9B,UAAU6L,UAAU,WAAW,OAAOjN,KAAKzG,GAAGE,IAAIyJ,GAAE9B,UAAU8L,YAAY,WAA0J,OAA/IlN,KAAKzG,GAAGE,IAAIyI,GAAGlC,MAAMA,KAAKzG,GAAGmD,KAAKsD,KAAKzG,GAAG2D,IAAIuE,GAAE,yCAAyCsB,GAAGd,KAAKjC,MAAM,IAAI+C,GAAG3G,QAAQ0G,IAAIA,GAAGE,IAAIhD,KAAKzG,GAAGmD,IAAG,EAAUsD,MAAMuE,GAAEnD,UAAU3B,GAAG,SAASvG,GAA2B,OAAxB8G,KAAKpB,KAAK1F,EAAE8G,KAAKpB,GAAG1F,IAAWA,GAAGqL,GAAEnD,UAAU1C,GAAG,SAASxF,GAAG8G,KAAKjD,IAAIiD,KAAKjD,GAAG7D,IAAIqL,GAAEnD,UAAU+L,eAAe,EAAE5I,GAAEnD,UAAUgM,qBAAqBlJ,GAAGK,GAAEnD,UAAUiM,aAAa,SAASnU,GAAM,OAAOA,GAAEA,EAAU,UAC5dqL,GAAEnD,UAAU+C,aAAa,SAASjL,GAAG,SAASC,IAAI,OAAO6G,KAAKzD,GAAG+H,GAAGtE,KAAKxG,GAAG2C,GAAG,CAAC3B,GAAGwF,KAAKD,GAAGtG,GAAGc,EAAEiI,GAAGxC,KAAK1E,GAAGpC,IAAIoL,GAAGtE,KAAKxG,GAAG2C,GAAG,CAAC3B,GAAGwF,KAAKvG,GAAGP,IAAI,IAAIqB,EAAEyF,KAAKP,GAAGvG,GAAG,IAAIqB,EAAE,OAAOyF,KAAKtB,GAAGxF,GAAG,KAAK,IAAIyC,EAzBrL,SAAYzC,EAAEC,GAAG,SAAI,IAASA,GAAGsI,GAAE,+BAA+BvI,EAAEqC,IAAIpC,EAAED,EAAEkE,GAAGjE,GAAGD,EAAEA,EAAEqC,GAAG,OAAO8I,GAAGlL,GAyBoFmU,CAAGtN,KAAKxG,GAAGe,GAAG,QAAG,IAASoB,EAAG,OAAG,IAAIA,EAAEpC,GAAG+I,MAAMC,OAAa5G,EAAEpC,GAAGE,GAAGc,EAAEoB,EAAEpC,GAAG+B,GAAGpC,EAAEyC,EAAEoI,UAAQpI,EAAEA,EAAEoI,QAAQ/D,KAAKtB,GAAGxF,GAAUyC,GAA0B,GAAxBA,EAAEqE,KAAKxG,GAAG+F,GAAGhF,KAAGoB,EAAEwH,GAAGxH,IAAS,OAAOxC,EAAE0L,KAAK7E,MAAMrE,EAAEqE,KAAK3C,GAAG1B,EAAE4R,GAAG5R,EAAE6R,YAAY,IAAI1R,EAAEsI,GAAG7J,EAAEyF,KAAKxG,GAAGmC,EAAEnC,IAAI,OAAO,OAAOsC,EAAE3C,EAAE0L,KAAK7E,MAAMA,KAAKzD,GAAG+H,GAAG3I,EAAEnC,GAAG2C,GAAG,CAAC3B,GAAGmB,EAAElC,GAAGqC,EAAE0G,GAAGxC,KAAK1E,GAAGpC,IAAIoL,GAAG3I,EAAEnC,GAAG2C,GACrf,CAAC3B,GAAGmB,EAAElC,GAAGqC,KAAKjD,EAAE4U,0BAA0B,WAAW,OAAOpM,OAAOqM,KAAKrJ,IAAIjI,QAAQvD,EAAE8U,0BAA0B,WAAW,IAASxU,EAALD,EAAE,GAAK,IAAIC,KAAKkL,GAAGA,GAAG/K,eAAeH,IAAID,EAAE+I,KAAKoC,GAAGlL,IAAI,OAAOD,GAAGL,EAAE+U,oBAAoB5K,GAAGnK,EAAEgV,iBAAiB,SAAS3U,GAAG4J,GAAG5J,EAAE6J,GAAG3G,QAAQ0G,IAAIA,GAAGE,KAAK+B,GAAGlM,EAAEiV,iBAAiBzN,GAAG,oBAAoBxH,EAAEkV,oBAAoB,WAAW,IAAI,IAAI7U,EAAE,EAAEC,EAAE,EAAEA,EAAE6M,GAAE5J,SAASjD,OAAE,IAAS6M,GAAE7M,MAAMD,EAAE,OAAOA,GAAGL,EAAEmV,gBAAgB,WAAW,IAAI,IAAI9U,EAAE,EAAEA,EAAE8M,GAAE5J,SAASlD,EAAE,QAAG,IAAS8M,GAAE9M,GAAG,OAAO8M,GAAE9M,GAAG,OAAO,MAE1f,IAAI+U,GAAG,mBAAoBC,KAAKA,KAAK,SAAShV,GAAG,IAAIC,EAAE,GAAGoB,EAAE,EAAErB,EAAEA,EAAE2H,QAAQ,qBAAqB,IAAI,EAAE,CAAC,IAAIlF,EAAE,oEAAoE7B,QAAQZ,EAAEiV,OAAO5T,MAAUuB,EAAE,oEAAoEhC,QAAQZ,EAAEiV,OAAO5T,MAAUwB,EAAE,oEAAoEjC,QAAQZ,EAAEiV,OAAO5T,MAAU2B,EAAE,oEAAoEpC,QAAQZ,EAAEiV,OAAO5T,MAAMoB,EAAEA,GAAG,EAAEG,GAAG,EACpfA,GAAK,GAAFA,IAAO,EAAEC,GAAG,EAAE,IAAI6F,GAAK,EAAF7F,IAAM,EAAEG,EAAE/C,GAAG6C,OAAOC,aAAaN,GAAG,KAAKI,IAAI5C,GAAG6C,OAAOC,aAAaH,IAAI,KAAKI,IAAI/C,GAAG6C,OAAOC,aAAa2F,UAAUrH,EAAErB,EAAEkD,QAAQ,OAAOjD,GAAG,SAASqB,GAAGtB,GAAG,GAAGA,EAAEsG,WAAWD,GAAI,CAAC,IAAI,IAAIpG,EAAE8U,GAAG/U,EAAEoT,MAAM/M,EAAGnD,SAAS7B,EAAE,IAAIF,WAAWlB,EAAEiD,QAAQ,IAAIlD,EAAE,EAAEA,EAAEC,EAAEiD,SAASlD,EAAEqB,EAAErB,GAAGC,EAAEkD,WAAWnD,GAAG,MAAMyC,GAAG,MAAMoF,MAAM,6CAA8C,OAAOxG,GACtX,IAAI6T,GAAG,CAAClV,EAAE,SAASA,GAAG,OAAOmV,GAAGnV,EAAE,IAAI,IAAIwC,EAAE,aAAavC,EAAE,SAASD,EAAEC,EAAEoB,GAA4B,MAAzB,IAAKwF,EAAG7G,GAAIoH,GAAGnH,EAAEoB,GAAcrB,GAAIyD,EAAE,aAAa+D,EAAE,SAASxH,EAAEC,EAAEoB,EAAEoB,EAAEG,GAAG,IAAIC,EAAEwE,EAAGhG,GAAUuH,GAAE5I,EAAE,CAAC8H,KAAZ7H,EAAEuH,GAAEvH,GAAegL,aAAa,SAASjI,GAAG,QAAQA,GAAGsI,WAAW,SAAStI,EAAE0F,GAAG,OAAOA,EAAEjG,EAAEG,GAAGqR,eAAe,EAAEC,qBAAqB,SAASlR,GAAG,GAAG,IAAI3B,EAAE,IAAIqH,EAAEpF,OAAO,GAAG,IAAIjC,EAAEqH,EAAEnF,MAAO,CAAA,GAAG,IAAIlC,EAAW,MAAM,IAAIiG,UAAU,8BAA8BrH,GAA3DyI,EAAEjF,EAA4D,OAAOqD,KAAKmE,aAAavC,EAAE1F,IAAIH,KAAKN,GAAG,QAAQK,EAAE,SAAS5C,EAAEC,EAAEoB,EAAEoB,EAAEG,EAAEC,EAAEG,EAAE0F,EAAEC,EAAE4D,EAAEC,EAAEC,EAAE4E,GAAG7E,EACnfhF,GAAEgF,GAAG3J,EAAE2I,GAAE5I,EAAEC,GAAG6F,IAAIA,EAAE8C,GAAExI,EAAE0F,IAAI6D,IAAIA,EAAEf,GAAE7C,EAAE4D,IAAI8E,EAAE7F,GAAEiB,EAAE4E,GAAG,IAAInC,EAAElI,GAAGwF,GAAGlC,GAAG4E,GAAE,WAAWjD,GAAE,oBAAoBO,EAAE,wBAAwB,CAAC/J,OAAMgG,GAAE,CAACzI,EAAEC,EAAEoB,GAAGoB,EAAE,CAACA,GAAG,IAAG,SAAS0M,GAAU,GAAPA,EAAEA,EAAE,GAAM1M,EAAG,IAAI2M,EAAED,EAAE7O,GAAOgP,EAAEF,EAAEnM,QAAQqM,EAAEtF,GAAE9B,UAAUiH,EAAElI,GAAGiI,GAAE,WAAW,GAAG/G,OAAO2L,eAAehN,QAAQuI,EAAE,MAAM,IAAI/G,GAAE,0BAA0BkE,GAAG,QAAG,IAAS4I,EAAEhS,GAAG,MAAM,IAAIkF,GAAEkE,EAAE,kCAAkC,IAAI6I,EAAGD,EAAEhS,GAAGgH,UAAUlH,QAAQ,QAAG,IAASmS,EAAG,MAAM,IAAI/M,GAAE,2BAA2BkE,EAAE,uCAChdpC,UAAUlH,OAAO,iBAAiBiF,OAAOqM,KAAKY,EAAEhS,IAAI6E,WAAW,yBAAyB,OAAOoN,EAAGhL,MAAMvD,KAAKsD,cAAa,IAAIiF,EAAElH,OAAOC,OAAOkH,EAAE,CAACjH,YAAY,CAACgB,MAAM8F,KAAKA,EAAEjH,UAAUmH,EAAE,IAAI+F,EAAE,IAAI7K,GAAGiC,EAAE2C,EAAEE,EAAEgC,EAAEjC,EAAEvM,EAAE6F,EAAE6D,GAAG6C,EAAE,IAAI/D,GAAEmB,EAAE4I,GAAE,GAAG,GAAI9F,EAAE,IAAIjE,GAAEmB,EAAE,IAAI4I,GAAE,GAAG,GAAI,IAAI9L,EAAG,IAAI+B,GAAEmB,EAAE,UAAU4I,GAAE,GAAG,GAAwC,OAApCnL,GAAGjK,GAAG,CAACsU,YAAYhF,EAAE+E,GAAG/K,GAAIiC,GAAG2D,EAAEC,GAAS,CAACC,EAAEE,EAAEhG,OAAOgM,EAAE,SAAStV,EAAEC,EAAEoB,EAAEoB,EAAEG,EAAEC,EAAEG,GAAG,IAAI0F,EAAEiE,GAAGtL,EAAEoB,GAAGxC,EAAEuH,GAAEvH,GAAG4C,EAAE2I,GAAE5I,EAAEC,GAAG4F,GAAE,GAAG,CAACzI,IAAG,SAAS2I,GAAG,SAAS4D,IAAIN,GAAE,eAAeO,EAAE,wBAAwB9D,GAAU,IAAI8D,GAAX7D,EAAEA,EAAE,IAAWb,KAAK,IACnf7H,EAAEA,EAAEqG,WAAW,QAAQrG,EAAEsV,OAAOtV,EAAEsR,UAAU,KAAK,IAAI9E,EAAE9D,EAAErI,GAAG+H,YAAuM,YAA3L,IAASoE,EAAExM,IAAIsM,EAAEzI,GAAGzC,EAAE,EAAEoL,EAAExM,GAAGsM,IAAIrC,GAAGuC,EAAExM,EAAEuM,GAAGC,EAAExM,GAAGkK,GAAG9I,EAAE,GAAGkL,GAAG9D,GAAE,GAAGC,GAAE,SAAS2I,GAAqG,OAAlGA,EAAE/E,GAAGE,EAAE,CAAC6E,EAAE,GAAG,MAAM3F,OAAO2F,EAAE+B,MAAM,IAAI,KAAKvQ,EAAEG,QAAG,IAASyJ,EAAExM,GAAGkK,IAAIkH,EAAEvN,GAAGzC,EAAE,EAAEoL,EAAExM,GAAGoR,GAAG5E,EAAExM,GAAGkK,GAAG9I,EAAE,GAAGgQ,EAAQ,MAAW,OAAM9P,EAAE,SAASvB,EAAEC,EAAEoB,EAAEoB,EAAEG,EAAEC,EAAEG,EAAE0F,GAAGzI,EAAEuH,GAAEvH,GAAG4C,EAAE2I,GAAE5I,EAAEC,GAAG4F,GAAE,GAAG,CAACzI,IAAG,SAAS2I,GAAU,IAAI4D,GAAX5D,EAAEA,EAAE,IAAWb,KAAK,IAAI7H,EAAEuM,EAAE,CAAC5F,IAAI,WAAWqF,GAAE,iBAAiBM,EAAE,wBAAwB,CAAClL,KAAKmU,YAAW,EAAGC,cAAa,GACxH,OAD4HjJ,EAAEgH,IAAI9K,EAAE,WAAWuD,GAAE,iBAAiBM,EACpf,wBAAwB,CAAClL,KAAK,WAAWkH,GAAEgE,EAAE,6BAA6BpE,OAAOuN,eAAe/M,EAAErI,GAAG+H,YAAYpI,EAAEuM,GAAG/D,GAAE,GAAG,CAACpH,IAAG,SAASoL,GAAGA,EAAEA,EAAE,GAAG,IAAI4E,EAAE,CAACzK,IAAI,WAAW,OAAO6F,EAAExB,aAAapI,EAAEJ,KAAK+S,YAAW,GAAuH,OAAnH9M,IAAIA,EAAE8C,GAAExI,EAAE0F,GAAG2I,EAAEmC,IAAI,SAAStE,GAAG,IAAIC,EAAE,GAAGzG,EAAEjG,EAAEgK,EAAEnB,WAAW6D,EAAED,IAAI7C,GAAG8C,KAAKhH,OAAOuN,eAAe/M,EAAErI,GAAG+H,YAAYpI,EAAEoR,GAAS,MAAW,OAAM1R,EAAE,SAASK,EAAEC,EAAEoB,EAAEoB,EAAEG,EAAEC,GAAG,EAAE5C,GAAGiC,EAAE,+BAA+B,IAAIc,EAAE2J,GAAG1M,EAAEoB,GAAGuB,EAAE4I,GAAE/I,EAAEG,GAAG,IAAI8F,EAAE,CAAC7F,GAAG8F,EAAE,GAAGF,GAAE,GAAG,CAACzI,IAAG,SAASuM,GAAU,IAAIC,EAAE,gBAAbD,EAAEA,EAAE,IAA0BzE,KACtd,QAA/B,IAASyE,EAAEjM,GAAG8C,KAAKmJ,EAAEjM,GAAG8C,GAAG,SAAO,IAASmJ,EAAEjM,GAAG8C,GAAGnD,EAAE,GAAG,MAAM,IAAIqI,GAAE,+EAA+ErI,EAAE,GAAG,gBAAgBsM,EAAEzE,KAAK,uGACvC,OAD8IyE,EAAEjM,GAAG8C,GAAGnD,EAAE,GAAG,WAAWgM,GAAE,oBAAoBM,EAAEzE,KAAK,wBAAwB9E,IAAIyF,GAAE,GAAGzF,GAAE,SAASyJ,GAC1P,OAD6PF,EAAEjM,GAAG8C,GAAGnD,EAAE,GAAG,WAAWmK,UAAUlH,SAASjD,EAAE,GAAGsI,GAAEiE,EAAE,gBAAgBpC,UAAUlH,OAAO,yBAAyBjD,EAAE,IAAI0I,EAAEzF,OAChf,EAAEwF,EAAExF,OAAOjD,EAAE,IAAI,IAAIoR,EAAE,EAAEA,EAAEpR,IAAIoR,EAAE3I,EAAE2I,GAAG5E,EAAE4E,GAAG/F,WAAW3C,EAAEyB,UAAUiH,EAAE,IAA4B,OAAxBA,EAAEzO,EAAEyH,MAAM,KAAK3B,GAAG2D,GAAG1D,GAAU8D,EAAE,GAAGxB,aAAaoG,IAAU,MAAW,OAAMhQ,EAAE,SAASrB,EAAEC,EAAEoB,EAAEoB,EAAEG,EAAEC,EAAEG,EAAE0F,GAAG,IAAIC,EAAEgE,GAAGtL,EAAEoB,GAAGxC,EAAEuH,GAAEvH,GAAG4C,EAAE2I,GAAE5I,EAAEC,GAAG4F,GAAE,GAAG,CAACzI,IAAG,SAASuM,GAAG,SAASC,IAAIP,GAAE,eAAeQ,EAAE,wBAAwB9D,GAAU,IAAI8D,GAAXF,EAAEA,EAAE,IAAWzE,KAAK,IAAI7H,EAAEA,EAAEqG,WAAW,QAAQrG,EAAEsV,OAAOtV,EAAEsR,UAAU,KAAK7I,GAAG6D,EAAEjM,GAAGkK,GAAGzB,KAAK9I,GAAG,IAAIoR,EAAE9E,EAAEjM,GAAG2C,GAAGiM,EAAEmC,EAAEpR,GACvR,YAD0R,IAASiP,QAAG,IAASA,EAAE/E,IAAI+E,EAAEyG,YAAYpJ,EAAEzE,MAAMoH,EAAEpL,KAAKzC,EAAE,GAAGmL,EAAE1I,GAAGzC,EAAE,EAAEmL,EAAEmJ,UAAUpJ,EAAEzE,KAAKuJ,EAAEpR,GAAGuM,IAAItC,GAAGmH,EACpfpR,EAAEwM,GAAG4E,EAAEpR,GAAGkK,GAAG9I,EAAE,GAAGmL,GAAG/D,GAAE,GAAGE,GAAE,SAASwG,GAAqE,OAAlEA,EAAE7C,GAAGG,EAAE0C,EAAE5C,EAAE1J,EAAEG,QAAG,IAASqO,EAAEpR,GAAGkK,IAAIgF,EAAErL,GAAGzC,EAAE,EAAEgQ,EAAEpR,GAAGkP,GAAGkC,EAAEpR,GAAGkK,GAAG9I,EAAE,GAAG8N,EAAQ,MAAW,OAAMkC,EAAE,SAASrR,EAAEC,EAAEoB,EAAEoB,EAAEG,EAAEC,EAAEG,EAAE0F,EAAEC,EAAE4D,GAAGtM,EAAEuH,GAAEvH,GAAG2C,EAAE4I,GAAE/I,EAAEG,GAAG6F,GAAE,GAAG,CAACzI,IAAG,SAASwM,GAAU,IAAIC,GAAXD,EAAEA,EAAE,IAAW1E,KAAK,IAAI7H,EAAEoR,EAAE,CAACzK,IAAI,WAAWqF,GAAE,iBAAiBQ,EAAE,wBAAwB,CAACpL,EAAE2B,KAAKwS,YAAW,EAAGC,cAAa,GACjE,OADqEpE,EAAEmC,IAAI7K,EAAE,WAAWsD,GAAE,iBAAiBQ,EAAE,wBAAwB,CAACpL,EAAE2B,KAAK,WAAWuF,GAAEkE,EAAE,6BAA6BtE,OAAOuN,eAAelJ,EAAElM,GAAG2C,GAAGhD,EAAEoR,GAAG5I,GAAE,GAAGE,EAAE,CAACtH,EAAE2B,GAAG,CAAC3B,IAAG,SAAS6N,GAAG,IAAIC,EAC9fD,EAAE,GAAGE,EAAE,CAACxI,IAAI,WAAW,IAAIyI,EAAEzC,GAAG9F,KAAK0F,EAAEC,EAAE,WAAW,OAAO0C,EAAElE,aAAarI,EAAEC,EAAEwM,KAAKmG,YAAW,GAAI,GAAG7M,EAAE,CAACA,EAAE6C,GAAE9C,EAAEC,GAAG,IAAI2G,EAAEJ,EAAE,GAAGE,EAAEoE,IAAI,SAASnE,GAAG,IAAI+F,EAAExI,GAAG9F,KAAK0F,EAAEC,EAAE,WAAWnD,EAAG,GAAGX,EAAE4D,EAAE6I,EAAE9F,EAAEhE,WAAWhC,EAAG+F,IAAIhD,GAAG/C,IAAwC,OAAnCnB,OAAOuN,eAAelJ,EAAElM,GAAG2C,GAAGhD,EAAEmP,GAAS,MAAW,OAAM7L,EAAE,SAASvD,EAAEC,GAAU2I,GAAE5I,EAAE,CAAC8H,KAAZ7H,EAAEuH,GAAEvH,GAAegL,aAAa,SAAS5J,GAAG,IAAIoB,EAAEqK,GAAEzL,GAAGgI,MAAY,OAAN0D,GAAG1L,GAAUoB,GAAG6I,WAAW,SAASjK,EAAEoB,GAAG,OAAOqI,GAAErI,IAAIwR,eAAe,EAAEC,qBAAqBlJ,GAAGzI,GAAG,QAAQrC,EAAE,SAASF,EAAEC,EAAEoB,EAAEoB,GAAG,SAASG,KAAKvB,EAAEgG,EAAGhG,GAAGpB,EAAEuH,GAAEvH,GAClf2C,EAAEgT,OAAO,GAAGhN,GAAE5I,EAAE,CAAC8H,KAAK7H,EAAEoI,YAAYzF,EAAEqI,aAAa,SAASpI,GAAG,OAAOiE,KAAKuB,YAAYuN,OAAO/S,IAAIyI,WAAW,SAASzI,EAAEG,GAAG,OAAOA,EAAEqG,OAAO4K,eAAe,EAAEC,qBAAqBlH,GAAG/M,EAAEoB,EAAEoB,GAAGF,GAAG,OAAO+H,GAAGrK,EAAE2C,IAAIuM,EAAE,SAASnP,EAAEC,EAAEoB,GAAG,IAAIoB,EAAEwK,GAAGjN,EAAE,QAAQC,EAAEuH,GAAEvH,GAAGD,EAAEyC,EAAE4F,YAAY5F,EAAE0F,OAAOC,OAAO3F,EAAE4F,YAAYH,UAAU,CAACmB,MAAM,CAACA,MAAMhI,GAAGgH,YAAY,CAACgB,MAAMpC,GAAGxE,EAAEqF,KAAK,IAAI7H,GAAE,kBAAiBD,EAAE4V,OAAOvU,GAAGoB,EAAEzC,EAAEC,GAAGwC,GAAGjB,EAAE,SAASxB,EAAEC,EAAEoB,GAAGA,EAAEgG,EAAGhG,GAAUuH,GAAE5I,EAAE,CAAC8H,KAAZ7H,EAAEuH,GAAEvH,GAAegL,aAAa,SAASxI,GAAG,OAAOA,GAAG6I,WAAW,SAAS7I,EAAEG,GAAG,GAAG,iBAClfA,GAAG,kBAAmBA,EAAE,MAAM,IAAI0E,UAAU,mBAAmBqD,GAAE/H,GAAG,QAAQkE,KAAKgB,MAAM,OAAOlF,GAAGqR,eAAe,EAAEC,qBAAqBhH,GAAGjN,EAAEoB,GAAGkB,GAAG,QAAQsT,EAAE,SAAS7V,EAAEC,EAAEoB,EAAEoB,EAAEG,EAAEC,GAAG,IAAIG,EAAE2J,GAAG1M,EAAEoB,GAAGrB,EAAEwH,GAAExH,GAAG4C,EAAE4I,GAAE/I,EAAEG,GAAG0H,GAAGtK,GAAE,WAAWiM,GAAE,eAAejM,EAAE,wBAAwBgD,KAAI/C,EAAE,GAAGwI,GAAE,GAAGzF,GAAE,SAAS0F,GAA2D,OAAxD6C,GAAGvL,EAAEsM,GAAGtM,EAAE,CAAC0I,EAAE,GAAG,MAAMgD,OAAOhD,EAAE0K,MAAM,IAAI,KAAKxQ,EAAEC,GAAG5C,EAAE,GAAS,OAAMwM,EAAE,SAASzM,EAAEC,EAAEoB,EAAEoB,EAAEG,GAAG,SAASC,EAAE0J,GAAG,OAAOA,EAAEtM,EAAEuH,GAAEvH,IAAI,IAAI2C,IAAIA,EAAE,YAAY,IAAII,EAAEqE,EAAGhG,GAAG,GAAG,IAAIoB,EAAE,CAAC,IAAIiG,EAAE,GAAG,EAAErH,EAAEwB,EAAE,SAAS0J,GAAG,OAAOA,GACrf7D,IAAIA,GAAG,IAAIC,EAAE1I,EAAEwL,SAAS,YAAY7C,GAAE5I,EAAE,CAAC8H,KAAK7H,EAAEgL,aAAapI,EAAEyI,WAAW,SAASiB,EAAEC,GAAG,GAAG,iBAAkBA,GAAG,kBAAmBA,EAAE,MAAM,IAAIlF,UAAU,mBAAmBqD,GAAE6B,GAAG,QAAQ1F,KAAKgB,MAAM,GAAG0E,EAAE/J,GAAG+J,EAAE5J,EAAE,MAAM,IAAI0E,UAAU,qBAAqBqD,GAAE6B,GAAG,wDAAwDvM,EAAE,wCAAwCwC,EAAE,KAAKG,EAAE,MAAM,OAAO+F,EAAE6D,IAAI,EAAI,EAAFA,GAAKyH,eAAe,EAAEC,qBAAqB/G,GAAGlN,EAAE+C,EAAE,IAAIP,GAAGF,GAAG,QAAQgK,EAAE,SAASvM,EAAEC,EAAEoB,GAAG,SAASoB,EAAEI,GAAS,IAAIG,EAAEU,EAAE,OAAO,IAAId,EAAES,EAC7fL,EAAI,GAD8dH,IAAI,KAC9d,GAAGG,EAAEH,IAAI,IAAI,IAAID,EAAE,CAAC2B,UAAUpD,WAAWsD,WAAWK,YAAYH,WAAWK,YAAYE,aAAaE,cAAcnF,GAAU2I,GAAE5I,EAAE,CAAC8H,KAAZzG,EAAEmG,GAAEnG,GAAe4J,aAAaxI,EAAEwR,eAAe,EAAEC,qBAAqBzR,GAAG,CAACgE,IAAG,KAAMvE,EAAE,SAASlC,EAAEC,GAAU,IAAIoB,EAAE,iBAAbpB,EAAEuH,GAAEvH,IAA2B2I,GAAE5I,EAAE,CAAC8H,KAAK7H,EAAEgL,aAAa,SAASxI,GAAG,IAAIG,EAAEc,EAAEjB,IAAI,GAAG,GAAGpB,EAAE,IAAI,IAAIwB,EAAEJ,EAAE,EAAEO,EAAE,EAAEA,GAAGJ,IAAII,EAAE,CAAC,IAAI0F,EAAEjG,EAAE,EAAEO,EAAE,GAAGA,GAAGJ,GAAG,GAAGJ,EAAEkG,IAAI,GAAG,CAAa,GAAZ7F,EAAEN,EAAGM,EAAE6F,EAAE7F,QAAM,IAAS8F,EAAE,IAAIA,EAAE9F,OAAO8F,GAAG7F,OAAOC,aAAa,GAAG4F,GAAG9F,EAAEA,EAAE6F,EAAE,OAAO,CAAY,IAAXC,EAAEG,MAAMlG,GAAOI,EAAE,EAAEA,EAAEJ,IAAII,EAAE2F,EAAE3F,GAAGF,OAAOC,aAAaP,EAAEC,EAChgB,EAAEO,IAAI,IAAI2F,EAAEA,EAAEwD,KAAK,IAAS,OAALH,GAAEvJ,GAAUkG,GAAG2C,WAAW,SAAS7I,EAAEG,GAAGA,aAAakT,cAAclT,EAAE,IAAIzB,WAAWyB,IAAI,IAAIC,EAAE,iBAAkBD,EAAEC,GAAGD,aAAazB,YAAYyB,aAAamT,mBAAmBnT,aAAa2B,WAAWgE,GAAE,yCAAyC,IAAIvF,GAAG3B,GAAGwB,EAAE,WAAW,OAAOO,EAAGR,IAAI,WAAW,OAAOA,EAAEM,WAAWwF,EAAEyM,GAAG,EAAEnS,EAAE,GAAqB,GAAXU,GAAPgF,KAAK,KAAQ,GAAG1F,EAAK3B,GAAGwB,EAAEI,EAAGL,EAAEJ,EAAEkG,EAAE,EAAE1F,EAAE,QAAQ,GAAGH,EAAE,IAAIA,EAAE,EAAEA,EAAEG,IAAIH,EAAE,CAAC,IAAI8F,EAAE/F,EAAEO,WAAWN,GAAG,IAAI8F,IAAIqD,GAAEtD,GAAGH,GAAE,2DAClc/F,EAAEkG,EAAE,EAAE7F,IAAI,GAAG8F,OAAO,IAAI9F,EAAE,EAAEA,EAAEG,IAAIH,EAAEL,EAAEkG,EAAE,EAAE7F,IAAI,GAAGD,EAAEC,GAAyB,OAAtB,OAAOJ,GAAGA,EAAEsG,KAAKiD,GAAEtD,GAAUA,GAAGuL,eAAe,EAAEC,qBAAqBlJ,GAAGzI,GAAG,SAASE,GAAGuJ,GAAEvJ,OAAOjC,EAAE,SAASR,EAAEC,EAAEoB,GAAU,GAAPA,EAAEmG,GAAEnG,GAAM,IAAIpB,EAAG,IAAIwC,EAAEqB,EAAOlB,EAAEmB,EAAOlB,EAAEmB,EAAOhB,EAAE,WAAW,OAAOQ,GAAQkF,EAAE,OAAO,IAAIzI,IAAIwC,EAAEwB,EAAGrB,EAAEsB,EAAGrB,EAAEsB,EAAGnB,EAAE,WAAW,OAAOU,GAAGgF,EAAE,GAAGE,GAAE5I,EAAE,CAAC8H,KAAKzG,EAAE4J,aAAa,SAAStC,GAAG,IAAI,IAAqB8D,EAAjBF,EAAE7I,EAAEiF,IAAI,GAAG6D,EAAExJ,IAAMqO,EAAE1I,EAAE,EAAEuG,EAAE,EAAEA,GAAG3C,IAAI2C,EAAE,CAAC,IAAIC,EAAExG,EAAE,EAAEuG,EAAEjP,EAAKiP,GAAG3C,GAAG,GAAGC,EAAE2C,IAAIzG,KAAG2I,EAAE5O,EAAE4O,EAAElC,EAAEkC,QAAG,IAAS5E,EAAEA,EAAE4E,GAAG5E,GAAG3J,OAAOC,aAAa,GAAG0J,GAAG4E,GAAGA,EAAElC,EAAElP,GAAO,OAAL+L,GAAErD,GAAU8D,GACrfnB,WAAW,SAAS3C,EAAE4D,GAAG,iBAAkBA,GAAGhE,GAAE,6CAA6ClH,GAAG,IAAImL,EAAE3J,EAAE0J,GAAGE,EAAE0I,GAAG,EAAE3I,EAAEvM,GAA2D,OAAjDyD,GAAP+I,KAAK,KAAQ,GAAGD,GAAG9D,EAAE9F,EAAE2J,EAAEE,EAAE,EAAED,EAAEvM,GAAG,OAAO0I,GAAGA,EAAEI,KAAKiD,GAAES,GAAUA,GAAGwH,eAAe,EAAEC,qBAAqBlJ,GAAGzI,GAAG,SAASoG,GAAGqD,GAAErD,OAAOlB,EAAE,SAASzH,EAAEC,GAAU2I,GAAE5I,EAAE,CAAC0G,IAAG,EAAGoB,KAAlB7H,EAAEuH,GAAEvH,GAAqBgU,eAAe,EAAEhJ,aAAa,aAAaK,WAAW,gBAAgB0K,EAAE,SAAShW,EAAEC,EAAEoB,GAAGrB,EAAEoN,GAAGpN,GAAGC,EAAEgN,GAAGhN,EAAE,aAAa,IAAIwC,EAAE,GAAGG,EAAEkI,GAAErI,GAAc,OAAXgB,EAAEpC,IAAI,GAAGuB,EAAS3C,EAAEqL,WAAW7I,EAAEzC,IAAIwM,EAAE,SAASxM,EAAEC,EAAEoB,EAAEoB,IAAGzC,EAAEwN,GAAGxN,IAAGC,EAAEmN,GAAGnN,GAAGoB,EAAEiM,GAAGjM,GAC/e,KAAKoB,IAAIA,EAAEsK,GAAGpE,EAAE,SAAS3I,EAAEC,GAAa,IAAI,IAAIoB,GAAlBpB,EAnCe,SAAYD,EAAEC,GAAG,IAAI,IAAIoB,EAAEyH,MAAM9I,GAAGyC,EAAE,EAAEA,EAAEzC,IAAIyC,EAAEpB,EAAEoB,GAAGwK,GAAGxJ,GAAGxD,GAAG,GAAGwC,IAAI,GAAG,aAAaA,GAAG,OAAOpB,EAmC5G4U,CAAGjW,EAAEC,IAAe,GAAGwC,EAAEpB,EAAEyG,KAAK,KAAK7H,EAAEmT,MAAM,GAAGlH,KAAI,SAASK,GAAG,OAAOA,EAAEzE,QAAOqE,KAAK,KAAK,IAAIvJ,EAAE,CAAC,WAAWC,EAAE,CAACxB,GAAG2B,EAAE,GAAG0F,EAAE,EAAEA,EAAE1I,EAAE,IAAI0I,EAAE1F,IAAI,IAAI0F,EAAE,KAAK,IAAI,MAAMA,EAAE9F,EAAEmG,KAAK,UAAUL,GAAG7F,EAAEkG,KAAK9I,EAAE,EAAEyI,IAAIjG,EAAE,mBAAmBuE,GAAG,gBAAgBvE,GAAG,wCAAwC,IAAIkG,EAAE,EAAE,IAAID,EAAE,EAAEA,EAAE1I,EAAE,IAAI0I,EAAEjG,GAAG,cAAciG,EAAE,aAAaA,EAAE,8BAA8BC,EAAE,IAAIA,EAAE,IAAI,OAAOA,GAAG1I,EAAEyI,EAAE,GAAGuL,eAAwD,IAAzCxR,GAAG,6BAA6BO,EAAE,OAAW0F,EAAE,EAAEA,EACnf1I,EAAE,IAAI0I,EAAEzI,EAAEyI,EAAE,GAAGyL,eAAe1R,GAAG,cAAciG,EAAE,oBAAoBA,EAAE,QAA8G,OAAtGrH,EAAEqF,KAAKjE,GAAG,qDAAqDG,EAAEmG,KAAKtG,EAAE,QApCvJ,SAAYzC,GAAG,IAAIC,EAAEuN,GAAGtK,OAAkB,OAAXsK,GAAGzE,KAAK/I,GAAUC,EAoC2IiW,CAA7BlW,EAAEoM,GAAGxJ,GAAGyH,MAAM,KAAKxH,KAAiBsT,EAAE,SAASnW,EAAEC,GAAmB,OAAO6K,IAAvB9K,EAAEoN,GAAGpN,IAAGC,EAAEmN,GAAGnN,MAAmByI,EAAE,SAAS1I,GAAG,EAAEA,IAAI8M,GAAE9M,GAAGuF,IAAI,IAAIpF,EAAE,WAAW,OAAO2K,GAAE,KAAK9H,EAAE,SAAShD,GAAG,OAAO8K,GAAEwC,GAAGtN,KAAK6C,EAAE,SAAS7C,GAAGqM,GAAGS,GAAE9M,GAAGqJ,OAAO0D,GAAG/M,IAAIkP,EAAE,SAASlP,EAAEC,GAA2D,OAAO6K,GAAnC9K,GAA5BA,EAAEiN,GAAGjN,EAAE,sBAAyBkU,qBAAqBjU,KAAgBqP,EAAE,WAAWpN,KAAKkE,EAAE,SAASpG,EAAEC,EAAEoB,GAAGmB,EAAE4T,WAAWpW,IACxf,EAAEC,IAAI,EAAEA,EAAEoB,IAAI,IAAI+N,EAAE,SAASpP,GAAG,IAAIC,EAAEuC,EAAEU,OAAc,GAAG,YAAVlD,KAAK,GAAkB,OAAM,EAAG,IAAI,IAAIqB,EAAE,EAAE,GAAGA,EAAEA,GAAG,EAAE,CAAC,IAAIoB,EAAExC,GAAG,EAAE,GAAGoB,GAAGoB,EAAEkQ,KAAK0D,IAAI5T,EAAEzC,EAAE,WAA2B,GAAhByC,EAAEkQ,KAAK2D,IAAItW,EAAEyC,IAAO,QAAQA,GAAG,MAAMA,EAAE,OAAOzC,EAAE,CAAC,IAAImC,EAAGoU,KAAK5D,KAAK0D,IAAI,WAAW5T,GAAGY,EAAGmT,WAAW,QAAQ,IAAIpS,IAAK,IAAIxB,EAAE,EAAE,MAAM5C,EAAE,MAAM6C,IAAID,OAAE,EAAO,GAAGA,EAAE,OAAM,EAAG,OAAM,GAAIyM,EAAE,SAASrP,EAAEC,GAAG,IAAIoB,EAAE,EAA8I,OAA5IqM,KAAK7E,SAAQ,SAASpG,EAAEG,GAAG,IAAIC,EAAE5C,EAAEoB,EAAsB,IAApBuB,EAAEa,EAAEzD,EAAE,EAAE4C,GAAG,IAAI,GAAGC,EAAMA,EAAE,EAAEA,EAAEJ,EAAES,SAASL,EAAES,EAAEV,KAAK,IAAI,GAAGH,EAAEU,WAAWN,GAAGS,EAAEV,GAAG,IAAI,GAAG,EAAEvB,GAAGoB,EAAES,OAAO,KAAW,GAAG4C,EAAE,SAAS9F,EACxfC,GAAG,IAAIoB,EAAEqM,KAAKjK,EAAEzD,GAAG,IAAI,GAAGqB,EAAE6B,OAAO,IAAIT,EAAE,EAAsD,OAApDpB,EAAEwH,SAAQ,SAASjG,GAAGH,GAAGG,EAAEM,OAAO,KAAIO,EAAExD,GAAG,IAAI,GAAGwC,EAAS,GAAGa,EApCoG,SAASmT,EAAGzW,EAAEC,GAAGwW,EAAGhR,KAAKgR,EAAGhR,GAAzO,WAAc,GAAG,iBAAkBiR,QAAQ,mBAAoBA,OAAOC,gBAAgB,CAAC,IAAI3W,EAAE,IAAImB,WAAW,GAAG,OAAO,WAAqC,OAA1BuV,OAAOC,gBAAgB3W,GAAUA,EAAE,IAAI,OAAO,WAAWkC,EAAE,iBAAgD0U,IAAM,IAAI,IAAIvV,EAAE,EAAEA,EAAEpB,EAAEoB,IAAIiC,EAAEtD,EAAEqB,GAAG,IAAI,GAAGoV,EAAGhR,KAAK,OAAO,GAoCrL/B,EAAE,SAAS1D,EAAEC,EAAEoB,EAAEoB,GAAG,OAAOwM,GAAGjP,EAAEC,EAAEoB,EAAEoB,MAClJ,WAAY,SAASzC,EAAE4C,GAAGjD,EAAEkX,IAAIjU,EAAEkU,QAAQ3U,EAAGxC,EAAEkX,IAAInP,EAAEtD,IAAKiB,EAAG1F,EAAEkX,IAAIlM,EAAEpF,EAAGM,QAAQlG,EAAEkX,IAAIvO,GAAGxC,IAAInG,EAAEoX,wBAAwBpX,EAAEoX,uBAAuBjR,GAAG,GAAGA,GAA2CC,IAAKnD,EAAEmD,EAAGA,EAAG,KAAKnD,KAAM,SAAS3C,EAAE2C,GAAG5C,EAAE4C,EAAEoU,UAAU,SAAS3V,EAAEuB,GAAG,OA/D9OrB,GAAG,mBAAoB0V,MAAMlX,QAAQmX,UAAUC,MAAK,WAAW,OAAO1Q,OAAOwQ,MAAM7Q,EAAE,CAACgR,YAAY,gBAAgBD,MAAK,SAASnX,GAAG,IAAIA,EAAEqX,GAAG,KAAK,uCAAuCjR,EAAE,IAAI,OAAOpG,EAAEsX,iBAAgBC,OAAM,WAAW,OAAO9Q,QA+DW0Q,MAAK,SAAStU,GAAG,OAAOZ,YAAYuV,YAAY3U,EAAEJ,MAAK0U,KAAKvU,GAAE,SAASC,GAAGrB,EAAE,0CAA0CqB,GAAGX,EAAEW,MAAK,IAAIJ,EAAE,CAACzC,EAAEkV,IAA8D,GAA1DpP,IAAInG,EAAEoX,wBAAwBpX,EAAEoX,uBAAuBjR,GAAMnG,EAAE8X,gBAAgB,IAAI,OAAO9X,EAAE8X,gBAAgBhV,EACxgBzC,GAAG,MAAM4C,GAAG,OAAOpB,EAAE,sDAAsDoB,IAAG,GAAsBrB,GAAG,mBAAoBU,YAAYyV,sBAAsBtR,EAAEE,WAAWD,IAAK,mBAAoB4Q,MAAM5V,EAAEpB,GAAGgX,MAAM7Q,EAAE,CAACgR,YAAY,gBAAgBD,MAAK,SAASvU,GAAG,OAAOX,YAAYyV,qBAAqB9U,EAAEH,GAAG0U,KAAKlX,GAAE,SAAS4C,GAAyF,OAAtFrB,EAAE,kCAAkCqB,GAAGrB,EAAE,6CAAoDH,EAAEpB,UAAWsX,MAAM1X,GADpb,GAEAF,EAAEgY,mBAAmB,WAAW,OAAOhY,EAAEgY,mBAAmBhY,EAAEkX,IAAIvO,GAAG+B,MAAM,KAAKD,YAAYzK,EAAEiY,MAAM,WAAW,OAAOjY,EAAEiY,MAAMjY,EAAEkX,IAAIzB,GAAG/K,MAAM,KAAKD,YAAY,IAAI2B,GAAGpM,EAAEkY,eAAe,WAAW,OAAO9L,GAAGpM,EAAEkY,eAAelY,EAAEkX,IAAItO,GAAG8B,MAAM,KAAKD,YAAYzK,EAAEmY,4CAA4C,WAAW,OAAOnY,EAAEmY,4CAA4CnY,EAAEkX,IAAIpO,GAAG4B,MAAM,KAAKD,YAC9X,IAEI2N,GAFA5C,GAAGxV,EAAEqY,QAAQ,WAAW,OAAO7C,GAAGxV,EAAEqY,QAAQrY,EAAEkX,IAAIjO,GAAGyB,MAAM,KAAKD,YAAY4B,GAAErM,EAAEsY,MAAM,WAAW,OAAOjM,GAAErM,EAAEsY,MAAMtY,EAAEkX,IAAI7M,GAAGK,MAAM,KAAKD,YAEnI,SAAS8N,GAAGlY,GAAG8G,KAAKgB,KAAK,aAAahB,KAAKiB,QAAQ,gCAAgC/H,EAAE,IAAI8G,KAAKqR,OAAOnY,EAC5G,SAASoY,KAAK,SAASpY,IAAI,IAAI+X,KAAKA,IAAG,EAAGpY,EAAE0Y,WAAU,GAAIjW,GAAI,CAAwE,GAAvEsE,EAAGnB,GAAImB,EAAGlB,GAAI5F,EAAGD,GAAMA,EAAE2Y,sBAAqB3Y,EAAE2Y,uBAA0BC,GAAG,CAAC,IAAItY,EAAEN,EAAEiY,MAAM,IAAI,IAAIvW,EAAEpB,EAAE,EAAE,GAAO+B,GAAe,IAAIX,IAAOW,IAAkBrC,EAAE6Y,QAAO7Y,EAAE6Y,OAAOnX,GAAGe,GAAG,GAAG9B,EAAGe,EAAE,IAAI6W,GAAG7W,KAAK,MAAMoB,GAAGA,aAAayV,IAAI,UAAUzV,KAAKxC,EAAEwC,IAAI,iBAAkBA,GAAGA,EAAEuF,QAAQ/H,EAAE,CAACwC,EAAEA,EAAEuF,QAAQxG,EAAE,qBAAqBvB,GAAGK,EAAG,EAAEmC,KAAc,GAAG9C,EAAE8Y,QAAQ,IAAI,mBAAmB9Y,EAAE8Y,UAAU9Y,EAAE8Y,QAAQ,CAAC9Y,EAAE8Y,UAAU9Y,EAAE8Y,QAAQvV,QAAQjD,EAAEN,EAAE8Y,QAAQ7S,QACvfH,EAAGI,QAAQ5F,GAAGyG,EAAGjB,IAAK,KAAK,EAAEK,GAAG,CAAC,GAAGnG,EAAEgG,OAAO,IAAI,mBAAmBhG,EAAEgG,SAAShG,EAAEgG,OAAO,CAAChG,EAAEgG,SAAShG,EAAEgG,OAAOzC,QAAQwC,IAAKgB,EAAGpB,GAAI,EAAEQ,IAAInG,EAAE+Y,WAAW/Y,EAAE+Y,UAAU,cAAcC,YAAW,WAAWA,YAAW,WAAWhZ,EAAE+Y,UAAU,MAAK,GAAG1Y,MAAK,IAAIA,MAAe,GAJhHL,EAAEiZ,aAAa,WAAW,OAAOjZ,EAAEiZ,aAAajZ,EAAEkX,IAAI/L,GAAGT,MAAM,KAAKD,YAAYzK,EAAEkZ,cAAc,WAAW,OAAOlZ,EAAEkZ,cAAclZ,EAAEkX,IAAIxL,GAAGhB,MAAM,KAAKD,YAAYzK,EAAEmZ,cAAc,WAAW,OAAOnZ,EAAEmZ,cAAcnZ,EAAEkX,IAAIrL,GAAGnB,MAAM,KAAKD,YAAYzK,EAAEoZ,YAAY,WAAW,OAAOpZ,EAAEoZ,YAAYpZ,EAAEkX,IAAI7K,GAAG3B,MAAM,KAAKD,YAC5czK,EAAEqZ,YAAY,WAAW,OAAOrZ,EAAEqZ,YAAYrZ,EAAEkX,IAAI5K,GAAG5B,MAAM,KAAKD,YAAYzK,EAAEsZ,aAAa,WAAW,OAAOtZ,EAAEsZ,aAAatZ,EAAEkX,IAAI/J,GAAGzC,MAAM,KAAKD,YAAYzK,EAAEuZ,eAAe,WAAW,OAAOvZ,EAAEuZ,eAAevZ,EAAEkX,IAAI1I,GAAG9D,MAAM,KAAKD,YAAYzK,EAAEwZ,gBAAgB,WAAW,OAAOxZ,EAAEwZ,gBAAgBxZ,EAAEkX,IAAIuC,GAAG/O,MAAM,KAAKD,YAAYzK,EAAE0Z,iBAAiB,WAAW,OAAO1Z,EAAE0Z,iBAAiB1Z,EAAEkX,IAAIjX,IAAIyK,MAAM,KAAKD,YAAYzK,EAAE2Z,eAAe,WAAW,OAAO3Z,EAAE2Z,eAAe3Z,EAAEkX,IAAIhX,IAAIwK,MAAM,KAAKD,YAC5XrE,EAAG,SAASwT,IAAKxB,IAAIK,KAAKL,KAAKhS,EAAGwT,IAE6G5Z,EAAE6Z,IAAIpB,GAAMzY,EAAE8Z,QAAQ,IAAI,mBAAmB9Z,EAAE8Z,UAAU9Z,EAAE8Z,QAAQ,CAAC9Z,EAAE8Z,UAAU,EAAE9Z,EAAE8Z,QAAQvW,QAAQvD,EAAE8Z,QAAQ1P,KAAVpK,GAAkB,IAAI4Y,IAAG,EAGxX,OAH2X5Y,EAAE+Z,eAAenB,IAAG,GAAIH,KAG5Y9Y,EAAOQ,QClFT,MCoTM6Z,EAAmB,EAC9BC,OAAAA,KAxQ8B,CAC9BC,GAC6B,EAC7BC,UAAAA,EACAC,iBAAAA,EACAC,UAAAA,EACAC,OAAAA,KAEAC,IAEA,MAAMC,EAAcN,EAAQO,aAC5B,IAAIC,EACJ,IACEA,EAAY,IAAIF,EAAYD,EAAQlD,UACpC,MAAOpU,GACP,MAAMkX,EAAUQ,KAAK1X,GASvB,MAAO,CASLoU,eACE,OAAOqD,GAWTE,aAAavD,GACPqD,IACFA,EAAUG,SACVH,OAAY3a,GAEd2a,EAAYrD,GAWduD,SACMF,IACFA,EAAUG,SACVH,OAAY3a,IA6BhB6a,OACEE,EACAC,GAEA,IACE,GAAID,EAAMpS,cAAgB1D,WAAY,CACpC,GAAI+V,EAEF,YADAL,EAAUM,OAAOF,EAAOC,EAAU1D,SAAU,SAG9C,MAAM4D,EAAQZ,IAEd,OADAK,EAAUM,OAAOF,EAAOG,EAAM5D,SAAU,SACjC4D,EAGT,GAAIH,EAAMpS,cAAgBrD,YAAa,CACrC,GAAI0V,EAEF,YADAL,EAAUM,OAAOF,EAAOC,EAAU1D,SAAU,UAG9C,MAAM4D,EAAQZ,IAEd,OADAK,EAAUM,OAAOF,EAAOG,EAAM5D,SAAU,UACjC4D,EAGT,GAAIH,EAAMpS,cAAgBwS,cAAe,CAEvC,MAAMC,EAAcL,EAAMxS,WAAWyE,MAAM,KAC3C,GAAIgO,EAEF,YADAL,EAAUM,OAAOG,EAAaJ,EAAU1D,SAAU,SAGpD,MAAM4D,EAAQZ,IAEd,OADAK,EAAUM,OAAOG,EAAaF,EAAM5D,SAAU,SACvC4D,EAGT,GAAIH,EAAMpS,cAAgB0S,eAAgB,CAExC,MAAMD,EAAcL,EAAMxS,WAAWyE,MAAM,KAC3C,GAAIgO,EAEF,YADAL,EAAUM,OAAOG,EAAaJ,EAAU1D,SAAU,UAGpD,MAAM4D,EAAQZ,IAEd,OADAK,EAAUM,OAAOG,EAAaF,EAAM5D,SAAU,UACvC4D,EAGT,MAAM,IAAI/S,MChMhB,8GDiMM,MAAOjF,GACP,MAAMkX,EAAUQ,KAAK1X,KA8BzB2X,OACEG,EACAM,GAAS,EACTC,EAAyBlB,EAAiBmB,QAE1C,IACE,GAAIF,EAAQ,CACV,MAAMG,EAAWlB,IACXjD,EAAWqD,EAAUe,YAAYV,EAAU1D,SAAUiE,GAC3DE,EAASE,aAAarE,GACtBmE,EAASG,QAAQ,cACjB,MAAMC,EAAUJ,EAASK,UAEzB,OADAL,EAASX,SACFe,EAET,MAAMJ,EAAWlB,IACXjD,EAAWqD,EAAUoB,aAAaf,EAAU1D,SAAUiE,GAC5DE,EAASE,aAAarE,GACtBmE,EAASG,QAAQ,eACjB,MAAMC,EAAUJ,EAASK,UAEzB,OADAL,EAASX,SACFe,EACP,MAAO3Y,GACP,MAAMkX,EAAUQ,KAAK1X,KAgCzB2X,aACEG,EACAM,GAAS,EACTC,EAAyBlB,EAAiBmB,QAE1C,IACE,GAAIF,EAAQ,CACV,MAAMhE,EAAWqD,EAAUqB,aACzBhB,EAAU1D,UACV,EACAiE,GAEF,OAAOJ,cAAcc,KAAK3E,GAE5B,MAAMA,EAAWqD,EAAUqB,aAAahB,EAAU1D,UAAU,EAAOiE,GACnE,OAAOF,eAAeY,KAAK3E,GAC3B,MAAOpU,GACP,MAAMkX,EAAUQ,KAAK1X,KAWzBgZ,gBACE,OAAOvB,EAAUuB,eASdC,CADkBjC,EAAOC,SE/P5BiC,EAAyBjC,GAA6C,EAC1EC,UAAAA,EACAiC,cAAAA,EACAC,YAAAA,EACAjC,iBAAAA,EACAE,OAAAA,KAC+D,EAC/DC,QAAAA,EACA+B,QAAAA,EACAC,aAAAA,EACAjB,KAAAA,EAAOlB,EAAiBmB,QACtB,MAEF,MAAMf,EAAcN,EAAQsC,WAE5B,IAAI9B,EAOJ,UAAmBH,QACjBA,EAAO+B,QACPA,EAAOC,aACPA,EAAYjB,KACZA,EAAOlB,EAAiBmB,SAOxB,IACE,GAAKhB,GAAY+B,QAA4Bvc,IAAjBwc,EAErB,CAAA,GAAIhC,IAAY+B,QAA4Bvc,IAAjBwc,EAChC,OAAO,IAAI/B,EAAYD,EAAQlD,SAAUiE,GACpC,GAAIf,GAAW+B,QAA4Bvc,IAAjBwc,EAC/B,OAAO,IAAI/B,EAAYD,EAAQlD,SAAUiF,EAAQjF,SAAUiE,GACtD,GAAIf,GAAW+B,QAA4Bvc,IAAjBwc,EAC/B,OAAO,IAAI/B,EACTD,EAAQlD,SACRiF,EAAQjF,SACRkF,EACAjB,GAGF,MAAM,IAAIpT,MDvGhB,qFC0FM,OAAO,IAAIsS,EAAYc,GAezB,MAAOrY,GACP,MAAMkX,EAAUQ,KAAK1X,IApCTwZ,CAAU,CACxBlC,QAAAA,EACA+B,QAAAA,EACAC,aAAAA,EACAjB,KAAAA,IA0CF,MAAO,CASLjE,eACE,OAAOqD,GAWTE,aAAavD,GACPqD,IACFA,EAAUG,SACVH,OAAY3a,GAEd2a,EAAYrD,GAWduD,SACMF,IACFA,EAAUG,SACVH,OAAY3a,IAchB6a,QAAQL,EAAkBmC,GACxB,IACE,OAAOhC,EAAUiC,QAAQpC,EAAQlD,SAAUqF,GAC3C,MAAOzZ,GACP,MAAMkX,EAAUQ,KAAK1X,KAiBzB2X,OAAOgC,GACL,IACE,OAAOlC,EAAUmC,OAAOD,GACxB,MAAO3Z,GACP,MAAMkX,EAAUQ,KAAK1X,KAYzB2X,UACEF,EAAUoC,WAYZC,uBACE,OAAOrC,EAAUqC,oBAYnBC,wBACE,OAAOtC,EAAUsC,qBAUnBJ,WACE,OAAOlC,EAAUkC,QAYnBL,mBACE,OAAO7B,EAAU6B,gBAcnBU,oBACE,OAAOvC,EAAUuC,iBAUnBC,gBACE,OAAOxC,EAAUwC,aAWnBZ,cACE,MAAMa,EAAQd,IAEd,OADAc,EAAMC,OAAO1C,EAAU4B,WAChBa,GAYTE,YACE,OAAO3C,EAAU2C,SAYnBzC,SAASyC,GACP3C,EAAU4C,SAASD,IAUrB/B,WACE,OAAOZ,EAAUY,QAWnBiC,KAAI,CAACC,EAA6BpB,EAAcqB,OACvC/C,EAAUgD,aAAaF,GAWhC5C,UAAU4C,EAA6BpB,EAAcqB,MACnD,MAAMjC,EAAWlB,IACXjD,EAAWqD,EAAUiD,YAAYH,GACvChC,EAASE,aAAarE,GACtBmE,EAASG,QAAQ,cACjB,MAAMC,EAAUJ,EAASK,UAEzB,OADAL,EAASX,SACFe,GAWThB,KAAKL,EAAkBqD,GACrB,IACElD,EAAUmD,eAAetD,EAAQlD,SAAUuG,GAC3C,MAAO3a,GACP,MAAMkX,EAAUQ,KAAK1X,KAYzB2X,UAAUL,EAAkBO,GAC1B,IACEJ,EAAUoD,cAAcvD,EAAQlD,SAAUyD,GAC1C,MAAO7X,GACP,MAAMkX,EAAUQ,KAAK1X,KAiBzB2X,KAAKmD,GACH,IACErD,EAAUsD,KAAKD,EAAO1G,UACtB,MAAOpU,GACP,MAAMkX,EAAUQ,KAAK1X,KAgBzB2X,QACE,IACE,MAAMqD,EAAiBvD,EAAUxP,QAC3B6S,EAAS5B,EAAsBjC,EAAtBiC,CAA+B,CAC5ChC,UAAAA,EACAiC,cAAAA,EACAC,YAAAA,EACAjC,iBAAAA,EACAE,OAAAA,GALa6B,GAQf,OADA4B,EAAOrC,aAAauC,GACbF,EACP,MAAO9a,GACP,MAAMkX,EAAUQ,KAAK1X,KAkBzB2X,KAAKmD,GACH,IACErD,EAAUwD,KAAKH,EAAO1G,UAItB0G,EAAOlD,SACP,MAAO5X,GACP,MAAMkX,EAAUQ,KAAK1X,OAMhBkb,EAAiB,EAC5BlE,OAAAA,MAEA,MAAMC,EAAmBD,EAAOC,QAChC,OAAOiC,EAAsBjC,IC9RlBkE,EAAkB,EAC7BnE,OAAAA,KAjK6B,CAACC,GAA8C,EAC5EC,UAAAA,EACAC,iBAAAA,EACAC,UAAAA,EACAC,OAAAA,KAEAC,IAEA,MAAMC,EAAcN,EAAQmE,YAC5B,IAAI3D,EACJ,IACEA,EAAY,IAAIF,EAAYD,EAAQlD,UACpC,MAAOpU,GACP,MAAMkX,EAAUQ,KAAK1X,GASvB,MAAO,CASLoU,eACE,OAAOqD,GAWTE,aAAavD,GACPqD,IACFA,EAAUG,SACVH,OAAY3a,GAEd2a,EAAYrD,GAWduD,SACMF,IACFA,EAAUG,SACVH,OAAY3a,IAyBhB6a,OACEE,EACAuC,EACAtC,EACAO,EAAyBlB,EAAiBmB,QAE1C,IACE,GAAIT,EAAMpS,cAAgBjD,aAAc,CACtC,GAAIsV,EAEF,YADAL,EAAUM,OAAOF,EAAOuC,EAAOtC,EAAU1D,SAAUiE,GAGrD,MAAML,EAAQZ,IAEd,OADAK,EAAUM,OAAOF,EAAOuC,EAAOpC,EAAM5D,SAAUiE,GACxCL,EAEP,MAAM,IAAI/S,MF/IlB,iEEiJM,MAAOjF,GACP,MAAMkX,EAAUQ,KAAK1X,KAwBzB2X,OACEG,EACAO,EAAyBlB,EAAiBmB,QAE1C,IACE,MAAMC,EAAWlB,IACXjD,EAAWqD,EAAU4D,aAAavD,EAAU1D,SAAUiE,GAC5DE,EAASE,aAAarE,GACtBmE,EAASG,QAAQ,gBACjB,MAAMC,EAAUJ,EAASK,UAEzB,OADAL,EAASX,SACFe,EACP,MAAO3Y,GACP,MAAMkX,EAAUQ,KAAK1X,KAWzBgZ,gBACE,OAAOvB,EAAUuB,eASdsC,CADkBtE,EAAOC,SCvFrBsE,EAAmB,EAC9BvE,OAAAA,KAxF8B,CAC9BC,GAC6B,EAC7BC,UAAAA,EACAsE,cAAAA,EACAnE,OAAAA,KACmE,KAEnE,MAAMoE,EAAexE,EAAQyE,aAAaC,YACpCC,EAAc3E,EAAQyE,aAAaG,WACnCC,EAAmB7E,EAAQyE,aAAaK,gBAS9C,MAAO,CAULJ,YAAW,CACT5B,EACAiC,EAA+BR,EAAcS,QAEtCR,EAAa1B,EAAmBiC,GAYzCrE,WACEoC,EACAiC,EAA+BR,EAAcS,OAE7C,IACE,MAAMC,EAAgB7E,IAChBjD,EAAWwH,EAAY7B,EAAmBiC,GAGhD,OAFAE,EAAczD,aAAarE,GAC3B8H,EAAcxD,QAAQ,WACfwD,EACP,MAAOlc,GACP,MAAMkX,EAAUQ,KAAK1X,KAczB2X,OAAOoC,EAA2BoC,GAChC,IACE,GAAIA,EAAS1W,cAAgB1D,WAC3B,MAAM,IAAIkD,MH1GlB,+DG4GM,MAAMiX,EAAgB7E,IAChBjD,EAAW0H,EAAiB/B,EAAmBoC,GAGrD,OAFAD,EAAczD,aAAarE,GAC3B8H,EAAcxD,QAAQ,WACfwD,EACP,MAAOlc,GACP,MAAMkX,EAAUQ,KAAK1X,OAUpBoc,CADkBpF,EAAOC,SClDrBoF,EAAoB,EAC/BrF,OAAAA,KA7D+B,CAC/BC,GAC8B,IAAuC,KAErE,MAAMqF,EAAQrF,EAAQkC,cAAcoD,KAC9BC,EAAQvF,EAAQkC,cAAcsD,KAC9BC,EAAQzF,EAAQkC,cAAcqB,KASpC,MAAO,CAQL+B,WAIE,OAAOD,GAUTG,WAIE,OAAOD,GAUThC,WAIE,OAAOkC,KASJC,CADkB3F,EAAOC,SClC5B2F,EAA0B3F,GAA8C,EAC5EC,UAAAA,EACA2F,qBAAAA,EACAzD,YAAAA,EACA0D,8BAAAA,KACiE,KACjE,IAAIrF,EAQJ,MAAO,CASLrD,eACE,OAAOqD,GAWTE,aAAavD,GACPqD,IACFA,EAAUG,SACVH,OAAY3a,GAEd2a,EAAYrD,GAWduD,SACMF,IACFA,EAAUG,SACVH,OAAY3a,IAWhBod,YACE,MAAM9F,EAAWqD,EAAUyC,QACrB6C,EAAuBF,IAE7B,OADAE,EAAqBtE,aAAarE,GAC3B2I,GAUT1D,cACE,MAAMa,EAAQd,IAEd,OADAc,EAAMC,OAAO1C,EAAU4B,WAChBa,GAaT8C,iBACE,MAAMC,EAAoBH,IAE1B,OADAG,EAAkBxE,aAAahB,EAAUuF,cAClCC,GAUTC,gCACE,OAAOzF,EAAUyF,6BAYnBC,sBACE,MAAMC,EAAUR,GAAAA,CAAgC,CAC9C1F,UAAAA,EACA2F,qBAAAA,EACAzD,YAAAA,EACA0D,8BAAAA,GAJcF,GAOhB,OADAQ,EAAQ3E,aAAahB,EAAU0F,mBACxBC,GAYTC,sBACE,MAAMD,EAAUR,GAAAA,CAAgC,CAC9C1F,UAAAA,EACA2F,qBAAAA,EACAzD,YAAAA,EACA0D,8BAAAA,GAJcF,GAOhB,OADAQ,EAAQ3E,aAAahB,EAAU4F,mBACxBD,GAWTE,iBACE,OAAO7F,EAAU6F,gBAKVC,EAAkB,EAC7BvG,OAAAA,MAEyBA,EAAOC,QACzB2F,KCwCIY,EAAc,EAAGxG,OAAAA,KAnNH,CAACC,GAA0C,EACpEmC,YAAAA,EACAqE,YAAAA,EACAjC,cAAAA,KACyD,CACzDkC,EACAC,GAAiB,EACjB3B,EAAgBR,EAAcS,SAK9B,IAAIxE,EAAY,IAAIF,EAFAN,EAAQ2G,aAG1BF,EAAiBtJ,SACjBuJ,EACA3B,GAUF,MAAO,CASL5H,eACE,OAAOqD,GAWTE,aAAavD,GACPqD,IACFA,EAAUG,SACVH,OAAY3a,GAEd2a,EAAYrD,GAWduD,SACMF,IACFA,EAAUG,SACVH,OAAY3a,IAYhB+gB,QAAO,IACEpG,EAAUoG,UAanBlG,eAAe0B,GACb,MAAMjF,EAAWqD,EAAUqG,eAAezE,EAAQjF,UAC5C2J,EAAcN,IAEpB,OADAM,EAAYtF,aAAarE,GAClB2J,GAUTC,qBACE,MAAM5J,EAAWqD,EAAUuG,iBACrBD,EAAcN,IAEpB,OADAM,EAAYtF,aAAarE,GAClB2J,GAUTE,uBACE,MAAM7J,EAAWqD,EAAUwG,mBACrBF,EAAcN,IAEpB,OADAM,EAAYtF,aAAarE,GAClB2J,GAUTG,sBACE,MAAM9J,EAAWqD,EAAUyG,kBACrBH,EAAcN,IAEpB,OADAM,EAAYtF,aAAarE,GAClB2J,GAWTI,cAAa,IACJ1G,EAAU0G,gBAUnBC,iBACE,MAAMhK,EAAWqD,EAAU2G,aACrB/E,EAAUD,IAEhB,OADAC,EAAQc,OAAO/F,GACRiF,GAUTgF,mBACE,MAAMjK,EAAWqD,EAAU4G,eACrBhF,EAAUD,IAEhB,OADAC,EAAQc,OAAO/F,GACRiF,GAUTiF,kBACE,MAAMlK,EAAWqD,EAAU6G,cACrBjF,EAAUD,IAEhB,OADAC,EAAQc,OAAO/F,GACRiF,GAcTkF,wBACE,OAAO9G,EAAU8G,uBAOdC,CADkBxH,EAAOC,SCrGrBwH,EAAgB,EAC3BzH,OAAAA,KA1H2B,CAACC,GAA4C,EACxEC,UAAAA,EACAE,UAAAA,KAC6D,CAC7DE,EACAoH,KAEA,MAAMnH,EAAcN,EAAQ0H,UAC5B,IAAIlH,EACJ,IACEA,EAAY,IAAIF,EAAYD,EAAQlD,SAAUsK,EAAUtK,UACxD,MAAOpU,GACP,MAAMkX,EAAUQ,KAAK1X,GASvB,MAAO,CASLoU,eACE,OAAOqD,GAWTE,aAAavD,GACPqD,IACFA,EAAUG,SACVH,OAAY3a,GAEd2a,EAAYrD,GAWduD,SACMF,IACFA,EAAUG,SACVH,OAAY3a,IAchB6a,QAAQiH,EAAwB9G,GAC9B,IACE,GAAIA,EAEF,YADAL,EAAUoH,QAAQD,EAAWxK,SAAU0D,EAAU1D,UAGnD,MAAM4D,EAAQZ,IAEd,OADAK,EAAUoH,QAAQD,EAAWxK,SAAU4D,EAAM5D,UACtC4D,EACP,MAAOhY,GACP,MAAMkX,EAAUQ,KAAK1X,KA0BzB2X,qBAAqBiH,GACnB,IACE,OAAOnH,EAAUqH,qBAAqBF,EAAWxK,UACjD,MAAOpU,GACP,MAAMkX,EAAUQ,KAAK1X,OAUpB+e,CADkB/H,EAAOC,SCkIrB+H,EAA2B,EACtChI,OAAAA,KAnPsC,CACtCC,GACqC,EACrCC,UAAAA,EACAiC,cAAAA,EACA8F,QAAAA,EACAC,WAAAA,EACA7H,OAAAA,KACmF,CACnF8H,EAAyBD,EAAW3C,QAGpC,IAAI9E,EAAY,IAAIF,EADAN,EAAQ4F,sBACIsC,GAShC,MAAO,CASL/K,eACE,OAAOqD,GAWTE,aAAavD,GACPqD,IACFA,EAAUG,SACVH,OAAY3a,GAEd2a,EAAYrD,GAWduD,SACMF,IACFA,EAAUG,SACVH,OAAY3a,IAgBhB6a,qBAAqBoC,GACnB,IACEtC,EAAU2H,qBAAqBrF,GAC/B,MAAO/Z,GACP,MAAMkX,EAAUQ,KAAK1X,KAiBzB2X,gBAAgB0H,GACd,IACE5H,EAAU6H,gBAAgBD,EAAajL,UACvC,MAAOpU,GACP,MAAMkX,EAAUQ,KAAK1X,KAiBzB2X,gBAAgB4H,GACd,IACE9H,EAAU+H,gBAAgBD,EAAanL,UACvC,MAAOpU,GACP,MAAMkX,EAAUQ,KAAK1X,KAWzByf,aACE,OAAOhI,EAAUgI,UAUnB1F,wBACE,OAAOtC,EAAUsC,qBAUnBsF,mBACE,MAAM9G,EAAWlB,IACXjD,EAAWqD,EAAU4H,eAC3B9G,EAASE,aAAarE,GACtBmE,EAASG,QAAQ,WACjB,MAAMC,EAAUJ,EAASK,UAEzB,OADAL,EAASX,SACFe,GAUT4G,mBACE,MAAMnL,EAAWqD,EAAU8H,eACrBG,EAAeT,EAAQU,OAAO,IAEpC,OADAD,EAAavF,OAAO/F,GACbsL,GAWTpF,KAAI,CAACC,EAA6BpB,EAAcqB,OACvC/C,EAAUgD,aAAaF,GAWhC5C,UAAU4C,EAA6BpB,EAAcqB,MACnD,MAAMjC,EAAWlB,IACXjD,EAAWqD,EAAUiD,YAAYH,GACvChC,EAASE,aAAarE,GACtBmE,EAASG,QAAQ,cACjB,MAAMC,EAAUJ,EAASK,UAEzB,OADAL,EAASX,SACFe,GAUThB,KAAKgD,GACH,IACElD,EAAUmD,eAAeD,GACzB,MAAO3a,GACP,MAAMkX,EAAUQ,KAAK1X,KAWzB2X,UAAUE,GACR,IACEJ,EAAUoD,cAAchD,GACxB,MAAO7X,GACP,MAAMkX,EAAUQ,KAAK1X,OAUpB4f,CADkB5I,EAAOC,SCkDrB4I,EAAgB,EAC3B7I,OAAAA,KA3R2B,CAACC,GAA4C,EACxEC,UAAAA,EACAC,iBAAAA,EACA2I,WAAAA,EACAC,aAAAA,KAC6D,CAC7DzI,EACA0I,EACAtB,KAEA,MAAMnH,EAAcN,EAAQgJ,UAC5B,IAAIxI,EAEJ,SACEH,EACA0I,EACAtB,GAEA,IACE,OAAIA,EACK,IAAInH,EACTD,EAAQlD,SACR4L,EAAU5L,SACVsK,EAAUtK,UAGP,IAAImD,EAAYD,EAAQlD,SAAU4L,EAAU5L,UACnD,MAAOpU,GACP,MAAMkX,EAAUQ,KAAK1X,IAjBTkgB,CAAkB5I,EAAS0I,EAAWtB,GA2BtD,MAAO,CASLtK,eACE,OAAOqD,GAWTE,aAAavD,GACPqD,IACFA,EAAUG,SACVH,OAAY3a,GAEd2a,EAAYrD,GAWduD,SACMF,IACFA,EAAUG,SACVH,OAAY3a,IAiBhB6a,QACEG,EACA8G,EACAvG,EAAyBlB,EAAiBmB,QAE1C,IACE,GAAIsG,EAEF,YADAnH,EAAU0I,QAAQrI,EAAU1D,SAAUwK,EAAWxK,SAAUiE,GAG7D,MAAMyC,EAASgF,IAEf,OADArI,EAAU0I,QAAQrI,EAAU1D,SAAU0G,EAAO1G,SAAUiE,GAChDyC,EACP,MAAO9a,GACP,MAAMkX,EAAUQ,KAAK1X,KAezB2X,oBACEG,EACAO,EAAyBlB,EAAiBmB,QAE1C,IACE,MAAM8H,EAAOL,IACP3L,EAAWqD,EAAU4I,oBAAoBvI,EAAU1D,SAAUiE,GAEnE,OADA+H,EAAK3H,aAAarE,GACXgM,EACP,MAAOpgB,GACP,MAAMkX,EAAUQ,KAAK1X,KAuBzB2X,iBACEG,EACA8G,EACAvG,EAAyBlB,EAAiBmB,QAE1C,IACE,GAAIsG,EAMF,YALAnH,EAAU6I,iBACRxI,EAAU1D,SACVwK,EAAWxK,SACXiE,GAIJ,MAAMyC,EAASgF,IAEf,OADArI,EAAU6I,iBAAiBxI,EAAU1D,SAAU0G,EAAO1G,SAAUiE,GACzDyC,EACP,MAAO9a,GACP,MAAMkX,EAAUQ,KAAK1X,KA0BzB2X,6BACEG,EACAO,EAAyBlB,EAAiBmB,QAE1C,IACE,MAAMiI,EAAaR,IACb3L,EAAWqD,EAAU+I,6BACzB1I,EAAU1D,SACViE,GAGF,OADAkI,EAAW9H,aAAarE,GACjBmM,EACP,MAAOvgB,GACP,MAAMkX,EAAUQ,KAAK1X,KAqBzB2X,YACEiH,EACAvG,EAAyBlB,EAAiBmB,QAE1C,IACE,GAAIsG,EAEF,YADAnH,EAAUgJ,YAAY7B,EAAWxK,SAAUiE,GAG7C,MAAMyC,EAASgF,IAEf,OADArI,EAAUgJ,YAAY3F,EAAO1G,SAAUiE,GAChCyC,EACP,MAAO9a,GACP,MAAMkX,EAAUQ,KAAK1X,KAmBzB2X,wBACEU,EAAyBlB,EAAiBmB,QAE1C,IACE,MAAMiI,EAAaR,IACb3L,EAAWqD,EAAUiJ,wBAAwBrI,GAEnD,OADAkI,EAAW9H,aAAarE,GACjBmM,EACP,MAAOvgB,GACP,MAAMkX,EAAUQ,KAAK1X,OAUpB2gB,CADkB3J,EAAOC,SC8sCrB2J,EAAgB,EAC3B5J,OAAAA,KAt2C2B,CAACC,GAA4C,EACxEC,UAAAA,EACAC,iBAAAA,EACA2I,WAAAA,EACA1I,UAAAA,KAEAE,IAEA,MAAMC,EAAcN,EAAQ4J,UAC5B,IAAIpJ,EACJ,IACEA,EAAY,IAAIF,EAAYD,EAAQlD,UACpC,MAAOpU,GACP,MAAMkX,EAAUQ,KAAK1X,GASvB,MAAO,CASLoU,eACE,OAAOqD,GAWTE,aAAavD,GACPqD,IACFA,EAAUG,SACVH,OAAY3a,GAEd2a,EAAYrD,GAWduD,SACMF,IACFA,EAAUG,SACVH,OAAY3a,IAoBhB6a,OAAOmJ,EAAuBC,GAC5B,IACE,GAAIA,EAEF,YADAtJ,EAAUuJ,OAAOF,EAAU1M,SAAU2M,EAAY3M,UAGnD,MAAMgM,EAAON,IAEb,OADArI,EAAUuJ,OAAOF,EAAU1M,SAAUgM,EAAKhM,UACnCgM,EACP,MAAOpgB,GACP,MAAMkX,EAAUQ,KAAK1X,KAuBzB2X,IACEva,EACAC,EACA0jB,GAEA,IACE,GAAIA,EAEF,YADAtJ,EAAUwJ,IAAI7jB,EAAEgX,SAAU/W,EAAE+W,SAAU2M,EAAY3M,UAGpD,MAAMgM,EAAON,IAEb,OADArI,EAAUwJ,IAAI7jB,EAAEgX,SAAU/W,EAAE+W,SAAUgM,EAAKhM,UACpCgM,EACP,MAAOpgB,GACP,MAAMkX,EAAUQ,KAAK1X,KAuBzB2X,IACEva,EACAC,EACA0jB,GAEA,IACE,GAAIA,EAEF,YADAtJ,EAAUyJ,IAAI9jB,EAAEgX,SAAU/W,EAAE+W,SAAU2M,EAAY3M,UAGpD,MAAMgM,EAAON,IAEb,OADArI,EAAUyJ,IAAI9jB,EAAEgX,SAAU/W,EAAE+W,SAAUgM,EAAKhM,UACpCgM,EACP,MAAOpgB,GACP,MAAMkX,EAAUQ,KAAK1X,KA0BzB2X,SACEva,EACAC,EACA0jB,EACA1I,EAAyBlB,EAAiBmB,QAE1C,IACE,GAAIyI,EAEF,YADAtJ,EAAU0J,SAAS/jB,EAAEgX,SAAU/W,EAAE+W,SAAU2M,EAAY3M,SAAUiE,GAGnE,MAAM+H,EAAON,IAEb,OADArI,EAAU0J,SAAS/jB,EAAEgX,SAAU/W,EAAE+W,SAAUgM,EAAKhM,SAAUiE,GACnD+H,EACP,MAAOpgB,GACP,MAAMkX,EAAUQ,KAAK1X,KAwBzB2X,OACEmJ,EACAC,EACA1I,EAAyBlB,EAAiBmB,QAE1C,IACE,GAAIyI,EAEF,YADAtJ,EAAU2J,OAAON,EAAU1M,SAAU2M,EAAY3M,SAAUiE,GAG7D,MAAM+H,EAAON,IAEb,OADArI,EAAU2J,OAAON,EAAU1M,SAAUgM,EAAKhM,SAAUiE,GAC7C+H,EACP,MAAOpgB,GACP,MAAMkX,EAAUQ,KAAK1X,KA2BzB2X,YACEmJ,EACAO,EACAN,EACA1I,EAAyBlB,EAAiBmB,QAE1C,IACE,GAAIyI,EAOF,YANAtJ,EAAU6J,YACRR,EAAU1M,SACViN,EAAUjN,SACV2M,EAAY3M,SACZiE,GAIJ,MAAM+H,EAAON,IAOb,OANArI,EAAU6J,YACRR,EAAU1M,SACViN,EAAUjN,SACVgM,EAAKhM,SACLiE,GAEK+H,EACP,MAAOpgB,GACP,MAAMkX,EAAUQ,KAAK1X,KAwBzB2X,sBACEmJ,EACAC,EACA1I,EAAyBlB,EAAiBmB,QAE1C,IACE,GAAIyI,EAMF,YALAtJ,EAAU8J,sBACRT,EAAU1M,SACV2M,EAAY3M,SACZiE,GAIJ,MAAM+H,EAAON,IAEb,OADArI,EAAU8J,sBAAsBT,EAAU1M,SAAUgM,EAAKhM,SAAUiE,GAC5D+H,EACP,MAAOpgB,GACP,MAAMkX,EAAUQ,KAAK1X,KA2BzB2X,kBACEmJ,EACAzH,EACA0H,EACA1I,EAAyBlB,EAAiBmB,QAE1C,IACE,GAAIyI,EAOF,YANAtJ,EAAU+J,kBACRV,EAAU1M,SACViF,EAAQjF,SACR2M,EAAY3M,SACZiE,GAIJ,MAAM+H,EAAON,IAOb,OANArI,EAAU+J,kBACRV,EAAU1M,SACViF,EAAQjF,SACRgM,EAAKhM,SACLiE,GAEK+H,EACP,MAAOpgB,GACP,MAAMkX,EAAUQ,KAAK1X,KAqBzB2X,qBACEK,EACA+I,GAEA,IACE,GAAIA,EAEF,YADAtJ,EAAUgK,qBAAqBzJ,EAAM5D,SAAU2M,EAAY3M,UAG7D,MAAMgM,EAAOhJ,IAEb,OADAK,EAAUgK,qBAAqBzJ,EAAM5D,SAAUgM,EAAKhM,UAC7CgM,EACP,MAAOpgB,GACP,MAAMkX,EAAUQ,KAAK1X,KAyBzB2X,iBACEK,EACAqB,EACA0H,GAEA,IACE,GAAIA,EAMF,YALAtJ,EAAUiK,iBACR1J,EAAM5D,SACNiF,EAAQjF,SACR2M,EAAY3M,UAIhB,MAAMgM,EAAOhJ,IAMb,OALAK,EAAUiK,iBACR1J,EAAM5D,SACNiF,EAAQjF,SACRgM,EAAKhM,UAEAgM,EACP,MAAOpgB,GACP,MAAMkX,EAAUQ,KAAK1X,KAyBzB2X,cACEmJ,EACAC,EACA1I,EAAyBlB,EAAiBmB,QAE1C,IACE,GAAIyI,EAMF,YALAtJ,EAAUkK,cACRb,EAAU1M,SACV2M,EAAY3M,SACZiE,GAIJ,MAAM+H,EAAON,IAEb,OADArI,EAAUkK,cAAcb,EAAU1M,SAAUgM,EAAKhM,SAAUiE,GACpD+H,EACP,MAAOpgB,GACP,MAAMkX,EAAUQ,KAAK1X,KA4BzB2X,UACEmJ,EACAzH,EACA0H,EACA1I,EAAyBlB,EAAiBmB,QAE1C,IACE,GAAIyI,EAOF,YANAtJ,EAAUmK,UACRd,EAAU1M,SACViF,EAAQjF,SACR2M,EAAY3M,SACZiE,GAIJ,MAAM+H,EAAON,IAOb,OANArI,EAAUmK,UACRd,EAAU1M,SACViF,EAAQjF,SACRgM,EAAKhM,SACLiE,GAEK+H,EACP,MAAOpgB,GACP,MAAMkX,EAAUQ,KAAK1X,KA6BzB2X,aACEmJ,EACAe,EACAR,EACAN,EACA1I,EAAyBlB,EAAiBmB,QAE1C,IACE,GAAIyI,EAQF,YAPAtJ,EAAUqK,aACRhB,EAAU1M,SACVyN,EACAR,EAAUjN,SACV2M,EAAY3M,SACZiE,GAIJ,MAAM+H,EAAON,IAQb,OAPArI,EAAUqK,aACRhB,EAAU1M,SACVyN,EACAR,EAAUjN,SACVgM,EAAKhM,SACLiE,GAEK+H,EACP,MAAOpgB,GACP,MAAMkX,EAAUQ,KAAK1X,KAwBzB2X,SACEmJ,EACA9I,EACA+I,GAEA,IACE,GAAIA,EAMF,YALAtJ,EAAUsK,SACRjB,EAAU1M,SACV4D,EAAM5D,SACN2M,EAAY3M,UAIhB,MAAMgM,EAAON,IAEb,OADArI,EAAUsK,SAASjB,EAAU1M,SAAU4D,EAAM5D,SAAUgM,EAAKhM,UACrDgM,EACP,MAAOpgB,GACP,MAAMkX,EAAUQ,KAAK1X,KAwBzB2X,SACEmJ,EACA9I,EACA+I,GAEA,IACE,GAAIA,EAMF,YALAtJ,EAAUuK,SACRlB,EAAU1M,SACV4D,EAAM5D,SACN2M,EAAY3M,UAIhB,MAAMgM,EAAON,IAEb,OADArI,EAAUuK,SAASlB,EAAU1M,SAAU4D,EAAM5D,SAAUgM,EAAKhM,UACrDgM,EACP,MAAOpgB,GACP,MAAMkX,EAAUQ,KAAK1X,KA2BzB2X,cACEmJ,EACA9I,EACA+I,EACA1I,EAAyBlB,EAAiBmB,QAE1C,IACE,GAAIyI,EAOF,YANAtJ,EAAUwK,cACRnB,EAAU1M,SACV4D,EAAM5D,SACN2M,EAAY3M,SACZiE,GAIJ,MAAM+H,EAAON,IAOb,OANArI,EAAUwK,cACRnB,EAAU1M,SACV4D,EAAM5D,SACNgM,EAAKhM,SACLiE,GAEK+H,EACP,MAAOpgB,GACP,MAAMkX,EAAUQ,KAAK1X,KAkCzB2X,oBACEK,EACAqB,EACA6I,EACA7J,EAAyBlB,EAAiBmB,QAE1C,IACE,GAAI4J,EAOF,YANAzK,EAAU0K,oBACRnK,EAAM5D,SACNiF,EAAQjF,SACR8N,EAAe9N,SACfiE,GAIJ,MAAM+H,EAAOhJ,IAOb,OANAK,EAAU0K,oBACRnK,EAAM5D,SACNiF,EAAQjF,SACRgM,EAAKhM,SACLiE,GAEK+H,EACP,MAAOpgB,GACP,MAAMkX,EAAUQ,KAAK1X,KAsBzB2X,qBACEmJ,EACAoB,GAEA,IACE,GAAIA,EAKF,YAJAzK,EAAU2K,qBACRtB,EAAU1M,SACV8N,EAAe9N,UAInB,MAAMgM,EAAON,IAEb,OADArI,EAAU2K,qBAAqBtB,EAAU1M,SAAUgM,EAAKhM,UACjDgM,EACP,MAAOpgB,GACP,MAAMkX,EAAUQ,KAAK1X,KAqBzB2X,uBACE0K,EACAtB,GAEA,IACE,GAAIA,EAKF,YAJAtJ,EAAU6K,uBACRD,EAAajO,SACb2M,EAAY3M,UAIhB,MAAMgM,EAAON,IAEb,OADArI,EAAU6K,uBAAuBD,EAAajO,SAAUgM,EAAKhM,UACtDgM,EACP,MAAOpgB,GACP,MAAMkX,EAAUQ,KAAK1X,KAsCzB2X,YACEmJ,EACAyB,EACAC,EACAzB,EACA1I,EAAyBlB,EAAiBmB,QAE1C,IACE,GAAIyI,EAQF,YAPAtJ,EAAUgL,YACR3B,EAAU1M,SACVmO,EACAC,EAAWpO,SACX2M,EAAY3M,SACZiE,GAIJ,MAAM+H,EAAON,IAQb,OAPArI,EAAUgL,YACR3B,EAAU1M,SACVmO,EACAC,EAAWpO,SACXgM,EAAKhM,SACLiE,GAEK+H,EACP,MAAOpgB,GACP,MAAMkX,EAAUQ,KAAK1X,KA+BzB2X,WACEmJ,EACA4B,EACAF,EACAzB,EACA1I,EAAyBlB,EAAiBmB,QAE1C,IACE,GAAIyI,EAQF,YAPAtJ,EAAUkL,WACR7B,EAAU1M,SACVsO,EACAF,EAAWpO,SACX2M,EAAY3M,SACZiE,GAIJ,MAAM+H,EAAON,IAQb,OAPArI,EAAUkL,WACR7B,EAAU1M,SACVsO,EACAF,EAAWpO,SACXgM,EAAKhM,SACLiE,GAEK+H,EACP,MAAOpgB,GACP,MAAMkX,EAAUQ,KAAK1X,KA6BzB2X,cACEmJ,EACA0B,EACAzB,EACA1I,EAAyBlB,EAAiBmB,QAE1C,IACE,GAAIyI,EAOF,YANAtJ,EAAUmL,cACR9B,EAAU1M,SACVoO,EAAWpO,SACX2M,EAAY3M,SACZiE,GAIJ,MAAM+H,EAAON,IAOb,OANArI,EAAUmL,cACR9B,EAAU1M,SACVoO,EAAWpO,SACXgM,EAAKhM,SACLiE,GAEK+H,EACP,MAAOpgB,GACP,MAAMkX,EAAUQ,KAAK1X,KA8BzB2X,aACEmJ,EACA4B,EACAF,EACAzB,EACA1I,EAAyBlB,EAAiBmB,QAE1C,IACE,GAAIyI,EAQF,YAPAtJ,EAAUoL,aACR/B,EAAU1M,SACVsO,EACAF,EAAWpO,SACX2M,EAAY3M,SACZiE,GAIJ,MAAM+H,EAAON,IAQb,OAPArI,EAAUoL,aACR/B,EAAU1M,SACVsO,EACAF,EAAWpO,SACXgM,EAAKhM,SACLiE,GAEK+H,EACP,MAAOpgB,GACP,MAAMkX,EAAUQ,KAAK1X,KA2BzB2X,iBACEmJ,EACA0B,EACAzB,EACA1I,EAAyBlB,EAAiBmB,QAE1C,IACE,GAAIyI,EAOF,YANAtJ,EAAUqL,iBACRhC,EAAU1M,SACVoO,EAAWpO,SACX2M,EAAY3M,SACZiE,GAIJ,MAAM+H,EAAON,IAOb,OANArI,EAAUqL,iBACRhC,EAAU1M,SACVoO,EAAWpO,SACXgM,EAAKhM,SACLiE,GAEK+H,EACP,MAAOpgB,GACP,MAAMkX,EAAUQ,KAAK1X,KAwBzB2X,YACEmJ,EACA0B,EACA/C,EACAsB,EACA1I,EAAyBlB,EAAiBmB,QAE1C,IACE,GAAIyI,EAQF,YAPAtJ,EAAUsL,YACRjC,EAAU1M,SACVoO,EAAWpO,SACXqL,EACAsB,EAAY3M,SACZiE,GAKJ,MAAM2K,EAAUlD,IAQhB,OAPArI,EAAUsL,YACRjC,EAAU1M,SACVoO,EAAWpO,SACXqL,EACAuD,EAAQ5O,SACRiE,GAEK2K,EACP,MAAOhjB,GACP,MAAMkX,EAAUQ,KAAK1X,KA6BzB2X,WACEva,EACAC,EACAgkB,EACAmB,EACA/C,EACAsB,EACA1I,EAAyBlB,EAAiBmB,QAE1C,IACE,GAAIyI,EAeF,OAdAtJ,EAAU0J,SAAS/jB,EAAEgX,SAAU/W,EAAE+W,SAAU2M,EAAY3M,SAAUiE,GACjEZ,EAAU6J,YACRP,EAAY3M,SACZiN,EAAUjN,SACV2M,EAAY3M,SACZiE,QAEFZ,EAAUsL,YACRhC,EAAY3M,SACZoO,EAAWpO,SACXqL,EACAsB,EAAY3M,SACZiE,GAKJ,MAAM2K,EAAUlD,IAehB,OAdArI,EAAU0J,SAAS/jB,EAAEgX,SAAU/W,EAAE+W,SAAU4O,EAAQ5O,SAAUiE,GAC7DZ,EAAU6J,YACR0B,EAAQ5O,SACRiN,EAAUjN,SACV4O,EAAQ5O,SACRiE,GAEFZ,EAAUsL,YACRC,EAAQ5O,SACRoO,EAAWpO,SACXqL,EACAuD,EAAQ5O,SACRiE,GAEK2K,EACP,MAAOhjB,GACP,MAAMkX,EAAUQ,KAAK1X,KA2BzB2X,gBACEva,EACAC,EACAmlB,EACA/C,EACAsB,EACA1I,EAAyBlB,EAAiBmB,QAE1C,IACE,GAAIyI,EAcF,OAbAtJ,EAAUwK,cACR7kB,EAAEgX,SACF/W,EAAE+W,SACF2M,EAAY3M,SACZiE,QAEFZ,EAAUsL,YACRhC,EAAY3M,SACZoO,EAAWpO,SACXqL,EACAsB,EAAY3M,SACZiE,GAKJ,MAAM2K,EAAUlD,IAShB,OARArI,EAAUwK,cAAc7kB,EAAEgX,SAAU/W,EAAE+W,SAAU4O,EAAQ5O,SAAUiE,GAClEZ,EAAUsL,YACRC,EAAQ5O,SACRoO,EAAWpO,SACXqL,EACAuD,EAAQ5O,SACRiE,GAEK2K,EACP,MAAOhjB,GACP,MAAMkX,EAAUQ,KAAK1X,OAUpBijB,CADkBjM,EAAOC,SCx/CrBiM,EAAgB,EAC3BlM,OAAAA,KApC2B,CAC3BC,GAC0B,IAAmC,KAE7D,MAAMkM,EAAgBlM,EAAQmM,aAS9B,MAAO,CASL1L,KAAK2L,GACkB,iBAAVA,EACF,IAAIpe,MAAMke,EAAcE,IAG7BA,aAAiBpe,MACZoe,EAEF,IAAIpe,MAAMoe,GAAS,oBASvBC,CADkBtM,EAAOC,SCZ5BsM,EAAyBtM,GAA6C,EAC1EC,UAAAA,EACAiC,cAAAA,EACA9B,OAAAA,KAC+D,KAC/D,MAAME,EAAcN,EAAQuM,WAC5B,IAAI/L,EAAY,IAAIF,EASpB,MAAO,CASLnD,eACE,OAAOqD,GAWTE,OAAOvD,GACDqD,IACFA,EAAUG,SACVH,OAAY3a,GAEd2a,EAAY,IAAIF,EAAYnD,GAC5BA,EAASwD,UAWXD,SACMF,IACFA,EAAUG,SACVH,OAAY3a,IAYhB6c,WACE,OAAOlC,EAAUkC,QAanBhC,SAAS4K,GACP,IACE,OAAO9K,EAAUgM,SAASlB,GAC1B,MAAOviB,GACP,MAAMkX,EAAUQ,KAAK1X,KAYzB2X,OAAO4K,GACL,IACE,OAAO9K,EAAUiM,OAAOnB,GACxB,MAAOviB,GACP,MAAMkX,EAAUQ,KAAK1X,KAWzB2X,KAAK4C,EAA6BpB,EAAcqB,MAC9C,IACE,OAAO/C,EAAUgD,aAAaF,GAC9B,MAAOva,GACP,MAAMkX,EAAUQ,KAAK1X,KAYzB2X,UAAU4C,EAA6BpB,EAAcqB,MACnD,MAAMjC,EAAWlB,IACXjD,EAAWqD,EAAUiD,YAAYH,GACvChC,EAASE,aAAarE,GACtBmE,EAASG,QAAQ,cACjB,MAAMC,EAAUJ,EAASK,UAEzB,OADAL,EAASX,SACFe,GAWThB,KAAKL,EAAkBqD,GACrB,IACElD,EAAUmD,eAAetD,EAAQlD,SAAUuG,GAC3C,MAAO3a,GACP,MAAMkX,EAAUQ,KAAK1X,KAYzB2X,UAAUL,EAAkBO,GAC1B,IACEJ,EAAUoD,cAAcvD,EAAQlD,SAAUyD,GAC1C,MAAO7X,GACP,MAAMkX,EAAUQ,KAAK1X,KAgBzB2X,KAAKgM,GACH,IACElM,EAAUsD,KAAK4I,EAAIvP,UACnB,MAAOpU,GACP,MAAMkX,EAAUQ,KAAK1X,KAezB2X,QACE,IACE,MAAMqD,EAAiBvD,EAAUxP,QAC3B0b,EAAMJ,EAAsBtM,EAAtBsM,CAA+B,CACzCrM,UAAAA,EACAiC,cAAAA,EACA9B,OAAAA,GAHUkM,GAMZ,OADAI,EAAIxJ,OAAOa,GACJ2I,EACP,MAAO3jB,GACP,MAAMkX,EAAUQ,KAAK1X,KAiBzB2X,KAAKgM,GACH,IACElM,EAAUwD,KAAK0I,EAAIvP,UAInBuP,EAAI/L,SACJ,MAAO5X,GACP,MAAMkX,EAAUQ,KAAK1X,OAMhB4jB,EAAiB,EAC5B5M,OAAAA,MAEA,MAAMC,EAAmBD,EAAOC,QAChC,OAAOsM,EAAsBtM,ICZlB4M,EAAmB,EAC9B7M,OAAAA,KAvO8B,CAC9BC,GAC6B,EAC7BC,UAAAA,EACA4M,UAAAA,EACAC,UAAAA,EACAC,UAAAA,EACAR,WAAAA,EACAzD,aAAAA,KACmE,CACnEzI,EACAoH,KAEA,MAAMnH,EAAcN,EAAQgN,aAC5B,IAAIxM,EAEJ,SAA2BH,EAAkBoH,GAC3C,IACE,OAAIA,EACK,IAAInH,EAAYD,EAAQlD,SAAUsK,EAAUtK,UAE9C,IAAImD,EAAYD,EAAQlD,UAC/B,MAAOpU,GACP,MAAMkX,EAAUQ,KAAK1X,IATTkgB,CAAkB5I,EAASoH,GAmB3C,MAAO,CASLtK,eACE,OAAOqD,GAWTE,aAAavD,GACPqD,IACFA,EAAUG,SACVH,OAAY3a,GAEd2a,EAAYrD,GAWduD,SACMF,IACFA,EAAUG,SACVH,OAAY3a,IAWhB6a,YACE,IACE,MAAMgM,EAAMI,IACN3P,EAAWqD,EAAUiH,YAE3B,OADAiF,EAAIxJ,OAAO/F,GACJuP,EACP,MAAO3jB,GACP,MAAMkX,EAAUQ,KAAK1X,KAWzB2X,kBACE,IACE,MAAMgM,EAAMG,IAEZ,OADArM,EAAUyM,gBAAgBP,EAAIvP,UACvBuP,EACP,MAAO3jB,GACP,MAAMkX,EAAUQ,KAAK1X,KAWzB2X,8BACE,IACE,MAAM4I,EAAaR,IACb3L,EAAWqD,EAAU0M,8BAE3B,OADA5D,EAAW9H,aAAarE,GACjBmM,EACP,MAAOvgB,GACP,MAAMkX,EAAUQ,KAAK1X,KAazB2X,kBACE,IACE,MAAM/F,EAAOoS,IAEb,OADAvM,EAAU2M,gBAAgBxS,EAAKwC,UACxBxC,EACP,MAAO5R,GACP,MAAMkX,EAAUQ,KAAK1X,KAiBzB2X,8BACE,IACE,MAAM4I,EAAaR,IACb3L,EAAWqD,EAAU4M,8BAE3B,OADA9D,EAAW9H,aAAarE,GACjBmM,EACP,MAAOvgB,GACP,MAAMkX,EAAUQ,KAAK1X,KAkBzB2X,iBAAiB+K,EAAoB3gB,WAAWgX,KAAK,KACnD,IACE,MAAMnH,EAAO4R,IAEb,OADA/L,EAAU6M,iBAAiB5B,EAAO9Q,EAAKwC,UAChCxC,EACP,MAAO5R,GACP,MAAMkX,EAAUQ,KAAK1X,KAsBzB2X,6BACE+K,EAAoB3gB,WAAWgX,KAAK,KAEpC,IACE,MAAMwH,EAAaR,IACb3L,EAAWqD,EAAU8M,6BAA6B7B,GAExD,OADAnC,EAAW9H,aAAarE,GACjBmM,EACP,MAAOvgB,GACP,MAAMkX,EAAUQ,KAAK1X,OAUpBwkB,CADkBxN,EAAOC,SC3NrBwN,EAAuB,EAClCzN,OAAAA,KA9CkC,CAClCC,GACiC,IAA0C,KAE3E,MAAMyN,EAAUzN,EAAQE,iBAAiBwN,uBACnCC,EAAe3N,EAAQE,iBAAiB0N,4BAS9C,MAAO,CAQLvM,aAIE,OAAOoM,KAUTI,kBAIE,OAAOF,OASJG,CADkB/N,EAAOC,SC2KrB+N,EAAc,EAAGhO,OAAAA,KApMH,CAACC,GAA0C,EACpEC,UAAAA,EACAiC,cAAAA,EACA9B,OAAAA,KAEA5Q,IAGA,MAAM8Q,EAAcN,EAAQgI,QAE5B,IAAIxH,EAEJ,SAAuBhR,GACrB,IACE,MAAMwe,EAAO,IAAI1N,EAEjB,OADA0N,EAAKC,SAASze,EAAMpB,YACb4f,EACP,MAAOjlB,GACP,MAAMkX,EAAUQ,KAAK1X,IARTmlB,CAAc1e,GAmB9B,MAAO,CASL2N,eACE,OAAOqD,GAWTE,OAAOvD,GACDqD,IACFA,EAAUG,SACVH,OAAY3a,GAEd2a,EAAY,IAAIF,EAAYnD,GAC5BA,EAASwD,UAWXD,SACMF,IACFA,EAAUG,SACVH,OAAY3a,IAWhB6a,SAASlR,GACP,IACEgR,EAAUyN,SAASze,EAAMpB,YACzB,MAAOrF,GACP,MAAMkX,EAAUQ,KAAK1X,KAWzByG,YAEE,OAAOkZ,OAAOlI,EAAUhR,UAU1B2e,eACE,OAAO3N,EAAU2N,YAUnBC,aACE,OAAO5N,EAAU4N,UAUnBC,cACE,OAAO7N,EAAU6N,WAWnBhL,KAAI,CAACC,EAA6BpB,EAAcqB,OACvC/C,EAAUgD,aAAaF,GAWhC5C,UAAU4C,EAA6BpB,EAAcqB,MACnD,MAAMjC,EAAWlB,IACXjD,EAAWqD,EAAUiD,YAAYH,GACvChC,EAASE,aAAarE,GACtBmE,EAASG,QAAQ,cACjB,MAAMC,EAAUJ,EAASK,UAEzB,OADAL,EAASX,SACFe,GAUThB,KAAKgD,GACH,IACElD,EAAUmD,eAAeD,GACzB,MAAO3a,GACP,MAAMkX,EAAUQ,KAAK1X,KAWzB2X,UAAUE,GACR,IACEJ,EAAUoD,cAAchD,GACxB,MAAO7X,GACP,MAAMkX,EAAUQ,KAAK1X,OAQpBulB,CADkBvO,EAAOC,SCxIrBuO,EAAkB,EAC7BxO,OAAAA,KA9E6B,CAACC,GAA8C,EAC5EC,UAAAA,KACiE,KACjE,MAAMK,EAAcN,EAAQmC,YAE5B,IAAI3B,EASJ,MAAO,CASLrD,eACE,OAAOqD,GAWTE,OAAOvD,GACDqD,IACFA,EAAUG,SACVH,OAAY3a,GAEd2a,EAAY,IAAIF,EAAYnD,GAC5BA,EAASwD,UAWXD,SACMF,IACFA,EAAUG,SACVH,OAAY3a,IAWhBkW,aACE,IACE,MAAMoB,EAAWqD,EAAUzE,SAC3B,OAAOmF,eAAeY,KAAK3E,GAC3B,MAAOpU,GACP,MAAMkX,EAAUQ,KAAK1X,OAUpBylB,CADkBzO,EAAOC,SCnC5ByO,EAAwBzO,GAA4C,EACxEC,UAAAA,EACAiC,cAAAA,EACAC,YAAAA,EACAjC,iBAAAA,EACAE,OAAAA,KAC6D,EAC7DoC,SAAAA,EACAkM,WAAAA,EACAtN,KAAAA,EAAOlB,EAAiBmB,QACtB,MAEF,MAAMf,EAAcN,EAAQ2O,UAE5B,IAAInO,EAMJ,UAAmBgC,SACjBA,EAAQkM,WACRA,EAAUtN,KACVA,EAAOlB,EAAiBmB,SAMxB,IACE,QAAiBxb,IAAb2c,QAAyC3c,IAAf6oB,EAC5B,OAAO,IAAIpO,EAAYc,GAClB,QAAiBvb,IAAb2c,QAAyC3c,IAAf6oB,EACnC,OAAO,IAAIpO,EAAYoO,EAAYtN,GAC9B,QAAiBvb,IAAb2c,QAAyC3c,IAAf6oB,EACnC,OAAO,IAAIpO,EAAYkC,EAAUkM,EAAYtN,GAE7C,MAAM,IAAIpT,MjB/FhB,uDiBiGI,MAAOjF,GACP,MAAMkX,EAAUQ,KAAK1X,IA1BTwZ,CAAU,CACxBC,SAAAA,EACAkM,WAAAA,EACAtN,KAAAA,IAiCF,MAAO,CASLjE,eACE,OAAOqD,GAWTE,aAAavD,GACPqD,IACFA,EAAUG,SACVH,OAAY3a,GAEd2a,EAAYrD,GAWduD,SACMF,IACFA,EAAUG,SACVH,OAAY3a,IAYhB6a,QAAQ8B,GACN,IACE,OAAOhC,EAAUiC,QAAQD,GACzB,MAAOzZ,GACP,MAAMkX,EAAUQ,KAAK1X,KAazB2X,cACEF,EAAUoO,eAUZlO,UACEF,EAAUoC,WAYZlC,OAAOgO,GACL,IACElO,EAAUmC,OAAO+L,GACjB,MAAO3lB,GACP,MAAMkX,EAAUQ,KAAK1X,KAUzB2X,UACEF,EAAUqO,WAUZT,aACE,OAAO5N,EAAU4N,UAUnB5L,eACE,OAAOhC,EAAUgC,YAUnBkM,iBACE,OAAOlO,EAAUkO,cAUnBI,4BACE,OAAOtO,EAAUsO,yBAUnBC,wBACE,OAAOvO,EAAUuO,qBA0BnBrO,eACE,IACE,OAAOF,EAAUwO,eACjB,MAAOjmB,GACP,MAAMkX,EAAUQ,KAAK1X,KAWzBia,gBACE,OAAOxC,EAAUwC,aAanBZ,cACE,MAAMa,EAAQd,IAEd,OADAc,EAAMC,OAAO1C,EAAU4B,WAChBa,GAYTE,YACE,OAAO3C,EAAU2C,SAYnBzC,SAASyC,GACP3C,EAAU4C,SAASD,IAUrB/B,WACE,OAAOZ,EAAUY,QAWnBiC,KAAI,CAACC,EAA6BpB,EAAcqB,OACvC/C,EAAUgD,aAAaF,GAWhC5C,UAAU4C,EAA6BpB,EAAcqB,MACnD,MAAMjC,EAAWlB,IACXjD,EAAWqD,EAAUiD,YAAYH,GACvChC,EAASE,aAAarE,GACtBmE,EAASG,QAAQ,cACjB,MAAMC,EAAUJ,EAASK,UAEzB,OADAL,EAASX,SACFe,GAWThB,KAAKL,EAAkBqD,GACrB,IACElD,EAAUmD,eAAetD,EAAQlD,SAAUuG,GAC3C,MAAO3a,GACP,MAAMkX,EAAUQ,KAAK1X,KAYzB2X,UAAUL,EAAkBO,GAC1B,IACEJ,EAAUoD,cAAcvD,EAAQlD,SAAUyD,GAC1C,MAAO7X,GACP,MAAMkX,EAAUQ,KAAK1X,KAiBzB2X,KAAKK,GACH,IACEP,EAAUsD,KAAK/C,EAAM5D,UACrB,MAAOpU,GACP,MAAMkX,EAAUQ,KAAK1X,KAgBzB2X,QACE,IACE,MAAMqD,EAAiBvD,EAAUxP,QAC3B+P,EAAQ0N,EAAqBzO,EAArByO,CAA8B,CAC1CxO,UAAAA,EACAiC,cAAAA,EACAC,YAAAA,EACAjC,iBAAAA,EACAE,OAAAA,GALYqO,GAQd,OADA1N,EAAMS,aAAauC,GACZhD,EACP,MAAOhY,GACP,MAAMkX,EAAUQ,KAAK1X,KAkBzB2X,KAAKK,GACH,IACEP,EAAUwD,KAAKjD,EAAM5D,UAIrB4D,EAAMJ,SACN,MAAO5X,GACP,MAAMkX,EAAUQ,KAAK1X,OAMhBkmB,EAAgB,EAC3BlP,OAAAA,MAEA,MAAMC,EAAmBD,EAAOC,QAChC,OAAOyO,EAAqBzO,ICrajBkP,EAAmB,EAC9BnP,OAAAA,KAvE8B,CAC9BC,GAC6B,EAC7BC,UAAAA,EACA+H,QAAAA,EACA5H,OAAAA,KACmE,KAEnE,MAAM+O,EAAYnP,EAAQoP,aAAaC,SACjCC,EAAkBtP,EAAQoP,aAAaG,eAS7C,MAAO,CAWL7O,SAASoC,EAA2B0M,GAClC,IACE,MAAMC,EAAWzH,EAAQU,OAAO,IAEhC,OADA+G,EAASvM,OAAOiM,EAAUrM,EAAmB0M,IACtCC,EACP,MAAO1mB,GACP,MAAMkX,EAAUQ,KAAK1X,KAezB2X,eACEgP,EACAxK,GAEA,IACE,MAAMyK,EAAevP,IACrBuP,EAAa7N,KAAKoD,GAClB,MAAM0K,EAAON,EACXI,EACAC,EAAaxS,UAGf,OADAwS,EAAahP,SACNiP,EACP,MAAO7mB,GACP,MAAMkX,EAAUQ,KAAK1X,OAUpB8mB,CADkB9P,EAAOC,SCnE5B8P,EAAwB9P,GAA4C,EACxEC,UAAAA,EACAiC,cAAAA,EACA9B,OAAAA,KAC6D,KAC7D,MAAME,EAAcN,EAAQ6M,UAC5B,IAAIrM,EAAY,IAAIF,EASpB,MAAO,CASLnD,eACE,OAAOqD,GAWTE,OAAOvD,GACDqD,IACFA,EAAUG,SACVH,OAAY3a,GAEd2a,EAAY,IAAIF,EAAYnD,GAC5BA,EAASwD,UAWXD,SACMF,IACFA,EAAUG,SACVH,OAAY3a,IAYhB6a,KAAK4C,EAA6BpB,EAAcqB,MAC9C,IACE,OAAO/C,EAAUgD,aAAaF,GAC9B,MAAOva,GACP,MAAMkX,EAAUQ,KAAK1X,KAYzB2X,UAAU4C,EAA6BpB,EAAcqB,MACnD,MAAMjC,EAAWlB,IACXjD,EAAWqD,EAAUiD,YAAYH,GACvChC,EAASE,aAAarE,GACtBmE,EAASG,QAAQ,cACjB,MAAMC,EAAUJ,EAASK,UAEzB,OADAL,EAASX,SACFe,GAWThB,KAAKL,EAAkBqD,GACrB,IACElD,EAAUmD,eAAetD,EAAQlD,SAAUuG,GAC3C,MAAO3a,GACP,MAAMkX,EAAUQ,KAAK1X,KAYzB2X,UAAUL,EAAkBO,GAC1B,IACEJ,EAAUoD,cAAcvD,EAAQlD,SAAUyD,GAC1C,MAAO7X,GACP,MAAMkX,EAAUQ,KAAK1X,KAgBzB2X,KAAKgM,GACH,IACElM,EAAUsD,KAAK4I,EAAIvP,UACnB,MAAOpU,GACP,MAAMkX,EAAUQ,KAAK1X,KAezB2X,QACE,IACE,MAAMqD,EAAiBvD,EAAUxP,QAC3B0b,EAAMoD,EAAqB9P,EAArB8P,CAA8B,CACxC7P,UAAAA,EACAiC,cAAAA,EACA9B,OAAAA,GAHU0P,GAMZ,OADApD,EAAIxJ,OAAOa,GACJ2I,EACP,MAAO3jB,GACP,MAAMkX,EAAUQ,KAAK1X,KAiBzB2X,KAAKgM,GACH,IACElM,EAAUwD,KAAK0I,EAAIvP,UAInBuP,EAAI/L,SACJ,MAAO5X,GACP,MAAMkX,EAAUQ,KAAK1X,OAMhBgnB,EAAgB,EAC3BhQ,OAAAA,MAEA,MAAMC,EAAmBD,EAAOC,QAChC,OAAO8P,EAAqB9P,ICxMxBgQ,EAAwBhQ,GAA4C,EACxEC,UAAAA,EACAiC,cAAAA,EACA9B,OAAAA,KAC6D,KAC7D,MAAME,EAAcN,EAAQ+M,UAC5B,IAAIvM,EAAY,IAAIF,EASpB,MAAO,CASLnD,eACE,OAAOqD,GAWTE,OAAOvD,GACDqD,IACFA,EAAUG,SACVH,OAAY3a,GAEd2a,EAAY,IAAIF,EAAYnD,GAC5BA,EAASwD,UAWXD,SACMF,IACFA,EAAUG,SACVH,OAAY3a,IAYhB6c,WACE,OAAOlC,EAAUkC,QAanBhC,SAASuP,GACP,IACE,OAAOzP,EAAUgM,SAASyD,GAC1B,MAAOlnB,GACP,MAAMkX,EAAUQ,KAAK1X,KAazB2X,OAAOuP,GACL,IACE,OAAOzP,EAAUiM,OAAOwD,GACxB,MAAOlnB,GACP,MAAMkX,EAAUQ,KAAK1X,KAYzB2X,KAAK4C,EAA6BpB,EAAcqB,MAC9C,IACE,OAAO/C,EAAUgD,aAAaF,GAC9B,MAAOva,GACP,MAAMkX,EAAUQ,KAAK1X,KAYzB2X,UAAU4C,EAA6BpB,EAAcqB,MACnD,MAAMjC,EAAWlB,IACXjD,EAAWqD,EAAUiD,YAAYH,GACvChC,EAASE,aAAarE,GACtBmE,EAASG,QAAQ,cACjB,MAAMC,EAAUJ,EAASK,UAEzB,OADAL,EAASX,SACFe,GAWThB,KAAKL,EAAkBqD,GACrB,IACElD,EAAUmD,eAAetD,EAAQlD,SAAUuG,GAC3C,MAAO3a,GACP,MAAMkX,EAAUQ,KAAK1X,KAYzB2X,UAAUL,EAAkBO,GAC1B,IACEJ,EAAUoD,cAAcvD,EAAQlD,SAAUyD,GAC1C,MAAO7X,GACP,MAAMkX,EAAUQ,KAAK1X,KAgBzB2X,KAAKgM,GACH,IACElM,EAAUsD,KAAK4I,EAAIvP,UACnB,MAAOpU,GACP,MAAMkX,EAAUQ,KAAK1X,KAezB2X,QACE,IACE,MAAMqD,EAAiBvD,EAAUxP,QAC3B0b,EAAMsD,EAAqBhQ,EAArBgQ,CAA8B,CACxC/P,UAAAA,EACAiC,cAAAA,EACA9B,OAAAA,GAHU4P,GAMZ,OADAtD,EAAIxJ,OAAOa,GACJ2I,EACP,MAAO3jB,GACP,MAAMkX,EAAUQ,KAAK1X,KAiBzB2X,KAAKgM,GACH,IACElM,EAAUwD,KAAK0I,EAAIvP,UAInBuP,EAAI/L,SACJ,MAAO5X,GACP,MAAMkX,EAAUQ,KAAK1X,OAMhBmnB,EAAgB,EAC3BnQ,OAAAA,MAEA,MAAMC,EAAmBD,EAAOC,QAChC,OAAOgQ,EAAqBhQ,ICtNjBmQ,EAAiB,EAC5BpQ,OAAAA,KA7D4B,CAC5BC,GAC2B,IAAoC,KAE/D,MAAMqF,EAAQrF,EAAQiI,WAAW3C,KAC3B8K,EAAOpQ,EAAQiI,WAAWoI,IAC1BC,EAAQtQ,EAAQiI,WAAWsI,KASjC,MAAO,CAQLjL,WAIE,OAAOD,GAUTgL,UAIE,OAAOD,GAUTG,WAIE,OAAOD,KASJE,CADkBzQ,EAAOC,SC1C5ByQ,EAAwBzQ,GAA4C,EACxEC,UAAAA,EACAiC,cAAAA,EACA9B,OAAAA,KAC6D,KAC7D,MAAME,EAAcN,EAAQ8M,UAC5B,IAAItM,EAAY,IAAIF,EASpB,MAAO,CASLnD,eACE,OAAOqD,GAWTE,OAAOvD,GACDqD,IACFA,EAAUG,SACVH,OAAY3a,GAEd2a,EAAY,IAAIF,EAAYnD,GAC5BA,EAASwD,UAWXD,SACMF,IACFA,EAAUG,SACVH,OAAY3a,IAYhB6a,KAAK4C,EAA6BpB,EAAcqB,MAC9C,IACE,OAAO/C,EAAUgD,aAAaF,GAC9B,MAAOva,GACP,MAAMkX,EAAUQ,KAAK1X,KAYzB2X,UAAU4C,EAA6BpB,EAAcqB,MACnD,MAAMjC,EAAWlB,IACXjD,EAAWqD,EAAUiD,YAAYH,GACvChC,EAASE,aAAarE,GACtBmE,EAASG,QAAQ,cACjB,MAAMC,EAAUJ,EAASK,UAEzB,OADAL,EAASX,SACFe,GAWThB,KAAKL,EAAkBqD,GACrB,IACElD,EAAUmD,eAAetD,EAAQlD,SAAUuG,GAC3C,MAAO3a,GACP,MAAMkX,EAAUQ,KAAK1X,KAYzB2X,UAAUL,EAAkBO,GAC1B,IACEJ,EAAUoD,cAAcvD,EAAQlD,SAAUyD,GAC1C,MAAO7X,GACP,MAAMkX,EAAUQ,KAAK1X,KAgBzB2X,KAAKgM,GACH,IACElM,EAAUsD,KAAK4I,EAAIvP,UACnB,MAAOpU,GACP,MAAMkX,EAAUQ,KAAK1X,KAezB2X,QACE,IACE,MAAMqD,EAAiBvD,EAAUxP,QAC3B0b,EAAM+D,EAAqBzQ,EAArByQ,CAA8B,CACxCxQ,UAAAA,EACAiC,cAAAA,EACA9B,OAAAA,GAHUqQ,GAMZ,OADA/D,EAAIxJ,OAAOa,GACJ2I,EACP,MAAO3jB,GACP,MAAMkX,EAAUQ,KAAK1X,KAiBzB2X,KAAKgM,GACH,IACElM,EAAUwD,KAAK0I,EAAIvP,UAInBuP,EAAI/L,SACJ,MAAO5X,GACP,MAAMkX,EAAUQ,KAAK1X,OAMhB2nB,EAAgB,EAC3B3Q,OAAAA,MAEA,MAAMC,EAAmBD,EAAOC,QAChC,OAAOyQ,EAAqBzQ,ICrJjB2Q,EAAoB,EAC/B5Q,OAAAA,KA3E+B,CAC/BC,GAC8B,IAAuC,KAErE,MAAMqF,EAAQrF,EAAQ4Q,aAAatL,KAC7BuL,EAAS7Q,EAAQ4Q,aAAa5L,MAC9B8L,EAAS9Q,EAAQ4Q,aAAaG,MAC9BC,EAAShR,EAAQ4Q,aAAaK,MASpC,MAAO,CAQL3L,WAIE,OAAOD,GAUTL,YAIE,OAAO6L,GAUTE,YAIE,OAAOD,GAUTG,YAIE,OAAOD,KAQJE,CADkBnR,EAAOC,SCsKrBmR,EAAa,EAAGpR,OAAAA,KAtNH,CAACC,GAAyC,EAClEC,UAAAA,KACuD,KAEvD,MAAMmR,EAAqBpR,EAAQqR,kBAC7BC,EAAsBtR,EAAQuR,mBAC9BC,EAAqBxR,EAAQyR,kBAC7BC,EAAuB1R,EAAQ2R,oBAC/BC,EAAwB5R,EAAQ6R,qBAChCC,EAAyB9R,EAAQ+R,sBACjCC,EAAuBhS,EAAQiS,oBAC/BC,EAAuBlS,EAAQmS,oBAC/BC,EAAwBpS,EAAQqS,qBAChCC,EAAuBtS,EAAQuS,oBAC/BC,EAAyBxS,EAAQyS,sBACjCC,EAA6B1S,EAAQ2S,0BACrCC,EAA8B5S,EAAQ6S,2BACtCC,EAA+B9S,EAAQ+S,4BAE7C,IAAIvS,EACAwS,EAQJ,MAAO,CASL7V,eACE,OAAOqD,GAWTE,aAAavD,GACPqD,IACFA,EAAUG,SACVH,OAAY3a,GAEd2a,EAAYrD,GAWduD,SACMF,IACFA,EAAUG,SACVH,OAAY3a,IAYhB6a,KAAKE,EAAoBqS,GACvB,IAEE,OADAD,EAAQC,GAAerS,EAAMpS,YAAYP,KACjC+kB,GACN,IAAK,aACHxS,EAAY4Q,EAAmBxQ,GAC/B,MACF,IAAK,aACHJ,EAAYgR,EAAmB5Q,GAC/B,MACF,IAAK,cACHJ,EAAY8Q,EAAoB1Q,GAChC,MACF,IAAK,eACHJ,EAAYkR,EAAqB9Q,GACjC,MACF,IAAK,gBACHJ,EAAYoR,EAAsBhR,EAAMxS,WAAWyE,MAAM,MACzD,MACF,IAAK,iBACH2N,EAAYsR,EAAuBlR,EAAMxS,WAAWyE,MAAM,MAC1D,MACF,IAAK,UACH2N,EAAYwR,EAAqBpR,EAAMxS,WAAWyE,MAAM,MACxD,MACF,QACE,MAAM,IAAI7E,MxBvJiB,4BwByJ/B,MAAOjF,GACP,MAAMkX,EAAUQ,KAAK1X,KAUzBkqB,WACE,OAAOD,GAUTtS,QAAQuS,GACND,EAAQC,GAUVvQ,WACE,OAAOlC,EAAUkC,QAWnBhC,SAASwS,GACP,IACE,OAAO1S,EAAUzT,IAAImmB,GACrB,MAAOnqB,GACP,MAAMkX,EAAUQ,KAAK1X,KAYzB2X,OAAOgC,EAAcyQ,GACnB,IACE3S,EAAUmC,OAAOD,EAAMyQ,GACvB,MAAOpqB,GACP,MAAMkX,EAAUQ,KAAK1X,KAezB2X,UACE,IAAKF,EACH,MAAM,IAAIxS,MxB5Oc,wBwB8O1B,OAAQglB,GACN,IAAK,aACH,OAAO1rB,WAAWwa,KAAKoQ,EAAqB1R,IAC9C,IAAK,aACH,OAAO1V,WAAWgX,KAAKwQ,EAAqB9R,IAC9C,IAAK,cACH,OAAOrV,YAAY2W,KAAKsQ,EAAsB5R,IAChD,IAAK,eACH,OAAOjV,aAAauW,KAAK0Q,EAAuBhS,IAClD,IAAK,gBACH,OAAOQ,cAAcc,KAAK4Q,EAA2BlS,IACvD,IAAK,iBACH,OAAOU,eAAeY,KAAK8Q,EAA4BpS,IACzD,IAAK,UACH,OAAOU,eAAeY,KAAKgR,EAA6BtS,IAC1D,QACE,MAAM,IAAIxS,MxB7PmB,+BwBqQ9BolB,CADkBrT,EAAOC,SC9P5BD,EAASsT,S3BGaA,OAC1BC,KAEAtT,cAAesT,M2BN2BC,CAAaC,kBAK1CH,SCqBKA,OAClBI,IAEA,MAAM1T,QAAe0T,IACrB,MC0G6B,GAC7BlT,aAAAA,EACAsI,WAAAA,EACA1E,YAAAA,EACAM,aAAAA,EACAvC,cAAAA,EACAsE,YAAAA,EACAkN,QAAAA,EACAhM,UAAAA,EACA7B,8BAAAA,EACAD,qBAAAA,EACAoD,UAAAA,EACAY,UAAAA,EACA3J,UAAAA,EACAsM,WAAAA,EACAS,aAAAA,EACA9M,iBAAAA,EACA8H,QAAAA,EACA7F,YAAAA,EACAhC,UAAAA,EACAiP,aAAAA,EACAvC,UAAAA,EACAE,UAAAA,EACA9E,WAAAA,EACA6E,UAAAA,EACAvI,cAAAA,EACAuE,aAAAA,EACA1I,OAAAA,MAMA,MAAMuT,EAAY1T,GAAAA,GACZ2T,EAAgB1R,GAAAA,GAChB2R,EAAmB3T,GAAAA,GACnB6E,EAAgBR,GAAAA,GAChB2D,EAAaD,GAAAA,GAGb6L,EAAS1T,EAAO,CAAEH,UAAW0T,IAC7BvL,EAAe3D,EAAa,CAChCxE,UAAW0T,EACXpP,cAAeQ,EACf3E,OAAQ0T,GAHWrP,GAKfsP,EAAU/L,EAAQ,CACtB/H,UAAW0T,EACXzR,cAAe0R,EACfxT,OAAQ0T,IAEJxL,EAAe8G,EAAa,CAChCnP,UAAW0T,EACX3L,QAAS+L,EACT3T,OAAQ0T,GAHW1E,GAKf4E,EAAelL,EAAa,CAChC7I,UAAW0T,EACXvT,OAAQ0T,EACR5R,cAAe0R,IAEXK,EAAc9R,EAAY,CAAElC,UAAW0T,IACvC9S,EAAYV,EAAU,CAC1BF,UAAW0T,EACXzR,cAAe0R,EACfzR,YAAa8R,EACb/T,iBAAkB2T,EAClBzT,OAAQ0T,IAEJnM,EAAakB,EAAW,CAC5B5I,UAAW0T,EACXzR,cAAe0R,EACfzR,YAAa8R,EACb/T,iBAAkB2T,EAClBzT,OAAQ0T,IAEJI,EAAe3T,EAAa,CAChCN,UAAW0T,EACXzT,iBAAkB2T,EAClB1T,UAAWU,EACXT,OAAQ0T,IAEJK,EAAchQ,EAAY,CAC9BlE,UAAW0T,EACXzT,iBAAkB2T,EAClB1T,UAAWU,EACXT,OAAQ0T,IAEJM,EAAgCvO,IAChCC,EAAuBF,EAAqB,CAChD3F,UAAW0T,EACXzR,cAAe0R,EACf5L,QAAS+L,EACT9L,WAAYC,EACZ9H,OAAQ0T,IAEJhN,EAAcN,EAAY,CAC9BvG,UAAW0T,EACX/N,qBAAsBE,EACtB3D,YAAa8R,EACbpO,8BAA+BuO,IAE3B/T,EAAUqT,EAAQ,CACtBvR,YAAa8R,EACbzN,YAAaM,EACbvC,cAAeQ,IAEXsP,EAAY3M,EAAU,CAC1BzH,UAAW0T,EACXxT,UAAWU,IAEPyT,EAAYtL,EAAU,CAC1B/I,UAAW0T,EACXzT,iBAAkB2T,EAClBhL,WAAYlB,EACZmB,aAAckL,IAEVO,EAAY3K,EAAU,CAC1B3J,UAAW0T,EACXzT,iBAAkB2T,EAClBhL,WAAYlB,EACZxH,UAAWU,IAEPkI,EAAY8D,EAAU,CAC1B5M,UAAW0T,EACXzR,cAAe0R,EACfxT,OAAQ0T,IAEJrM,EAAYqF,EAAU,CAC1B7M,UAAW0T,EACXzR,cAAe0R,EACfxT,OAAQ0T,IAEJ1J,EAAY2C,EAAU,CAC1B9M,UAAW0T,EACXzR,cAAe0R,EACfxT,OAAQ0T,IAEJvI,EAAagB,EAAW,CAC5BtM,UAAW0T,EACXzR,cAAe0R,EACfxT,OAAQ0T,IAcV,MAAO,CACLvT,aAAc2T,EACdrL,WAAYlB,EACZxD,YAAagQ,EACb1P,aAAc2D,EACdlG,cAAe0R,EACfpN,YAAaM,EACb4M,QAASrT,EACTqH,UAAW2M,EACXxO,8BAA+BuO,EAC/BxO,qBAAsBE,EACtBkD,UAAWsL,EACX1K,UAAW2K,EACXtU,UAAW0T,EACXpH,WAAYhB,EACZyB,aA3BmBA,EAAa,CAChC/M,UAAW0T,EACX9G,UAAW9D,EACX+D,UAAWrF,EACXsF,UAAW3C,EACXmC,WAAYhB,EACZzC,aAAckL,IAsBd9T,iBAAkB2T,EAClB7L,QAAS+L,EACT5R,YAAa8R,EACb9T,UAAWU,EACXuO,aAAc9G,EACduE,UAAW9D,EACXgE,UAAW3C,EACXnC,WAAYC,EACZ4E,UAAWrF,EACXlD,cAAeQ,EACf+D,aAAckL,EACd5T,OAAQ0T,IDhSHU,CAAgB,CACrBjU,aAAcT,EAAiB,CAC7BC,OAAAA,IAEF8I,WAAY5E,EAAe,CACzBlE,OAAAA,IAEFoE,YAAaD,EAAgB,CAC3BnE,OAAAA,IAEF0E,aAAcH,EAAiB,CAC7BvE,OAAAA,IAEFmC,cAAekD,EAAkB,CAC/BrF,OAAAA,IAEFyG,YAAaF,EAAgB,CAC3BvG,OAAAA,IAEF2T,QAASnN,EAAY,CACnBxG,OAAAA,IAEF2H,UAAWF,EAAc,CACvBzH,OAAAA,IAEF8F,8BEtC8F,IAAuD,KACvJ,IAAIrF,EAQJ,MAAO,CASLrD,eACE,OAAOqD,GAWTE,aAAavD,GACPqD,IACFA,EAAUG,SACVH,OAAY3a,GAEd2a,EAAYrD,GAWduD,SACMF,IACFA,EAAUG,SACVH,OAAY3a,IAYhBqhB,cAAa,IACJ1G,EAAU0G,gBAgBnBuN,eACE,OAAOjU,EAAUiU,UAiBnBC,eACE,OAAOlU,EAAUkU,UAkBnBC,oBACE,OAAOnU,EAAUmU,eAenBC,yBACE,OAAOpU,EAAUoU,oBAYnBC,kCACE,OAAOrU,EAAUqU,6BAWnB9P,oBACE,OAAOvE,EAAUuE,iBFtHnBa,qBAAsBmC,EAAyB,CAC7ChI,OAAAA,IAEFiJ,UAAWJ,EAAc,CACvB7I,OAAAA,IAEF6J,UAAWD,EAAc,CACvB5J,OAAAA,IAEFE,UAAWgM,EAAc,CACvBlM,OAAAA,IAEFwM,WAAYI,EAAe,CACzB5M,OAAAA,IAEFiN,aAAcJ,EAAiB,CAC7B7M,OAAAA,IAEFG,iBAAkBsN,EAAqB,CACrCzN,OAAAA,IAEFiI,QAAS+F,EAAY,CACnBhO,OAAAA,IAEFoC,YAAaoM,EAAgB,CAC3BxO,OAAAA,IAEFI,UAAW8O,EAAc,CACvBlP,OAAAA,IAEFqP,aAAcF,EAAiB,CAC7BnP,OAAAA,IAEF8M,UAAWkD,EAAc,CACvBhQ,OAAAA,IAEFgN,UAAWmD,EAAc,CACvBnQ,OAAAA,IAEFkI,WAAYkI,EAAe,CACzBpQ,OAAAA,IAEF+M,UAAW4D,EAAc,CACvB3Q,OAAAA,IAEFwE,cAAeoM,EAAkB,CAC/B5Q,OAAAA,IAEF+I,aGhF4D,EAC9D7I,UAAAA,EACAG,OAAAA,EACA8B,cAAAA,KACmE,KACnE,IAAI1B,EASJ,MAAO,CASLrD,eACE,OAAOqD,GAWTE,aAAavD,GACPqD,IACFA,EAAUG,SACVH,OAAY3a,GAEd2a,EAAYrD,GAWduD,SACMF,IACFA,EAAUG,SACVH,OAAY3a,IAYhB6a,KAAK4C,EAA6BpB,EAAcqB,MAC9C,IACE,OAAO/C,EAAUgD,aAAaF,GAC9B,MAAOva,GACP,MAAMkX,EAAUQ,KAAK1X,KAYzB2X,UAAU4C,EAA6BpB,EAAcqB,MACnD,MAAMjC,EAAWlB,IACXjD,EAAWqD,EAAUiD,YAAYH,GACvChC,EAASE,aAAarE,GACtBmE,EAASG,QAAQ,cACjB,MAAMC,EAAUJ,EAASK,UAEzB,OADAL,EAASX,SACFe,KHRTtB,OAAQ+Q,EAAW,CACjBpR,OAAAA,ODrG2C+U,CAAK/U"}